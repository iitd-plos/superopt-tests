=FunctionName: s1112
=result: 1
=corr_graph s1112
=src_tfg
=TFG_LLVM llvm.s1112:
=TFG:
=Nodes: L0%0%1 Lfor.cond%1%0 Lfor.cond%2%1 Lfor.body%1%1 Lfor.end%1%1 E0%0%1
=Edges:
Lfor.end%1%1 => E0%0%1
Lfor.cond%2%1 => Lfor.body%1%1
Lfor.cond%2%1 => Lfor.end%1%1
L0%0%1 => Lfor.cond%1%0
Lfor.cond%1%0 => Lfor.cond%2%1
Lfor.body%1%1 => Lfor.cond%1%0
=graph done
=Node outputs: E0%0%1
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: symbol.3.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.1.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.2.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : 0 : BV:32
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : val : 4 : 4 : 0
C_SYMBOL3 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.cond%1%0
=Lfor.cond%1%0 assume predicate_set done
=Lfor.cond%1%0 assert predicate_set done
=Node assumes and asserts: Lfor.cond%2%1
=Lfor.cond%2%1 assume predicate_set done
=Lfor.cond%2%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1
=Lfor.body%1%1 assume predicate_set done
=Lfor.body%1%1 assert predicate_set done
=Node assumes and asserts: Lfor.end%1%1
=Lfor.end%1%1 assume predicate_set done
=Lfor.end%1%1 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.llvm.s1112.0 : memlabel-mem-symbol.1.0
=memlabel_map.1
mlvar.llvm.s1112.1 : memlabel-mem-symbol.2.0
=memlabel_map.2
mlvar.llvm.s1112.2 : memlabel-mem-symbol.3.0
=Edge: Lfor.end%1%1 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  ret i32 0, !dbg !31

=Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: L0%0%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))

=Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)

=Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lentry%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%1=>Lentry%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100003=>Lentry%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100004=>Lentry%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100005=>Lentry%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%1=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100003
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100005
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.body%1%1
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.end%1%1
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100003=>Lfor.cond%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100004=>Lfor.body%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100005=>Lfor.cond%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100006=>Lfor.end%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.body%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100003=>Lfor.body%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100004=>Lfor.body%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100005=>Lfor.body%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%1=>Lfor.body%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100003=>Lfor.body%3%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%1=>Lfor.body%3%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100003=>Lfor.body%4%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%1=>Lfor.body%5%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%1=>Lfor.body%5%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100003=>Lfor.body%5%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100004=>Lfor.body%5%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100005=>Lfor.body%6%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%1=>Lfor.body%7%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%1=>Lfor.body%7%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100003=>Lfor.body%7%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100004=>Lfor.inc%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%1%1=>Lfor.inc%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%1=>Lfor.inc%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100003=>Lfor.inc%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100004=>Lfor.inc%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100005=>Lfor.inc%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lentry%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lfor.cond%1%0
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%1=>Lentry%1%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100003=>Lentry%1%100004
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100004=>Lentry%1%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100005=>Lentry%1%100006
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%1=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100003=>Lfor.cond%2%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100004=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100005=>Lfor.cond%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100006=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.cond%1%0
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(1, 8, 9, 10, 11) : BV:32
13 : memlabel-mem-symbol.1.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 6) : BV:32
16 : select(1, 13, 15, 10, 11) : BV:32
17 : bvadd(12, 16) : BV:32
18 : store(1, 2, 7, 17, 10, 11) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : symbol.1 : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : select(1, 7, 12, 4, 5) : BV:32
14 : bvadd(6, 13) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.body%1%100003
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100003=>Lfor.body%1%100004
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100004=>Lfor.body%1%100005
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100005=>Lfor.body%2%1
=src.llvm-%arrayidx
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%1=>Lfor.body%2%100003
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100003=>Lfor.body%3%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%1=>Lfor.body%3%100003
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100003=>Lfor.body%4%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%1=>Lfor.body%5%1
=src.llvm-%add
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%1=>Lfor.body%5%100003
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100003=>Lfor.body%5%100004
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100004=>Lfor.body%5%100005
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100005=>Lfor.body%6%1
=src.llvm-%arrayidx1
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%1=>Lfor.body%7%1
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%1=>Lfor.body%7%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100003=>Lfor.body%7%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100004=>Lfor.inc%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%1%1=>Lfor.inc%2%1
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%1=>Lfor.inc%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100003=>Lfor.inc%2%100004
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%dec : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100004=>Lfor.inc%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100005=>Lfor.inc%2%100006
=src.llvm-%i.0
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 0
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 1
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 2
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 3
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 4
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 5
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 6
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 7
1 : symbol.2 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 8
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 0
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 0
1 : input.src.llvm-%arrayidx : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 0
1 : symbol.2 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%4%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%4%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%5%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%5%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 assume# 0
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100004=>Lfor.body%5%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100004=>Lfor.body%5%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100005=>Lfor.body%6%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100005=>Lfor.body%6%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1 assume# 0
1 : input.src.llvm-%arrayidx1 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1020
1 : 31999 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1021
1 : 31999 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 for loc_id 1021
1 : 31999 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 for loc_id 1020
1 : 31999 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 for loc_id 1017
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 for loc_id 1017
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1005
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1006
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1008
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1009
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1010
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1011
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1012
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1013
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1014
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : symbol.1 : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : select(1, 7, 12, 4, 5) : BV:32
14 : bvadd(6, 13) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1015
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1016
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1018
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1020
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1030
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(1, 8, 9, 10, 11) : BV:32
13 : memlabel-mem-symbol.1.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 6) : BV:32
16 : select(1, 13, 15, 10, 11) : BV:32
17 : bvadd(12, 16) : BV:32
18 : store(1, 2, 7, 17, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : memmask(18, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1005
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1008
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 for loc_id 1006
1 : symbol.1 : BV:32
2 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 for loc_id 1015
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%4%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%4%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1 for loc_id 1014
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1009
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1012
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 for loc_id 1010
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 for loc_id 1013
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005 for loc_id 1011
1 : symbol.3 : BV:32
2 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1 for loc_id 1016
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 for loc_id 1030
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1019
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1022
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 for loc_id 1018
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 for loc_id 1021
1 : input.src.llvm-%dec : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 for loc_id 1020
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in llvm.s1112
=Loc 1001 in llvm.s1112.
LLVMVAR
llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Loc 1002 in llvm.s1112.
LLVMVAR
src.llvm-%0
1 : input.src.llvm-%0 : BV:32
=Loc 1003 in llvm.s1112.
LLVMVAR
src.llvm-%1
1 : input.src.llvm-%1 : BV:32
=Loc 1004 in llvm.s1112.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset : BV:32
=Loc 1005 in llvm.s1112.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : BV:32
=Loc 1006 in llvm.s1112.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : BV:32
=Loc 1007 in llvm.s1112.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset : BV:32
=Loc 1008 in llvm.s1112.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset : BV:32
=Loc 1009 in llvm.s1112.
LLVMVAR
src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset : BV:32
=Loc 1010 in llvm.s1112.
LLVMVAR
src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset : BV:32
=Loc 1011 in llvm.s1112.
LLVMVAR
src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset : BV:32
=Loc 1012 in llvm.s1112.
LLVMVAR
src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset : BV:32
=Loc 1013 in llvm.s1112.
LLVMVAR
src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset : BV:32
=Loc 1014 in llvm.s1112.
LLVMVAR
src.llvm-%add
1 : input.src.llvm-%add : BV:32
=Loc 1015 in llvm.s1112.
LLVMVAR
src.llvm-%arrayidx
1 : input.src.llvm-%arrayidx : BV:32
=Loc 1016 in llvm.s1112.
LLVMVAR
src.llvm-%arrayidx1
1 : input.src.llvm-%arrayidx1 : BV:32
=Loc 1017 in llvm.s1112.
LLVMVAR
src.llvm-%cmp
1 : input.src.llvm-%cmp : BOOL
=Loc 1018 in llvm.s1112.
LLVMVAR
src.llvm-%dec
1 : input.src.llvm-%dec : BV:32
=Loc 1019 in llvm.s1112.
LLVMVAR
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 1020 in llvm.s1112.
LLVMVAR
src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
=Loc 1021 in llvm.s1112.
LLVMVAR
src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=Loc 1022 in llvm.s1112.
LLVMVAR
src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Loc 1023 in llvm.s1112.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1024 in llvm.s1112.
REGMEM
uset_visit_expr
1 : input.uset_visit_expr : BOOL
=Loc 1025 in llvm.s1112.
SLOT
=memname
src.llvm-mem
=addr
1 : symbol.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 1026 in llvm.s1112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1027 in llvm.s1112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1028 in llvm.s1112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1029 in llvm.s1112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1030 in llvm.s1112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.3.0

=Alias analysis results in llvm.s1112
=Alias analysis result in llvm.s1112 at L0%0%1
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1004 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1009 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1014 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1015 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1016 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1017 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1018 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1022 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1023 (input.econd)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1024 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1025 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1026 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1027 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1112 at L0%0%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1004 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1009 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1014 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1015 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1016 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1017 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1018 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1022 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1023 (input.econd)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1024 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1025 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1026 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1027 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%1%0 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1004 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1009 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1014 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1015 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1016 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1017 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1018 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1022 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1023 (input.econd)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1024 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1025 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1026 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1027 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.cond%2%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1004 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1009 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1014 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1015 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1016 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1017 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1018 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1022 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1023 (input.econd)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1024 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1025 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1026 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1027 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.body%1%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1004 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1009 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1014 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1015 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1016 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1017 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1018 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1022 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1023 (input.econd)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1024 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1025 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1026 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1027 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1112 at Lfor.end%1%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1001 (input.llvm-%ret-reg)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1004 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1009 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1014 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1015 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1016 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1017 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1018 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1022 (input.src.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1023 (input.econd)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1024 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1025 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1026 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1027 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1112 at E0%0%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr

=Liveness in llvm.s1112
=live locs at L0%0%1
1025, 1026, 1028, 1029, 1030
=live locs at Lfor.cond%1%0
1020, 1025, 1026, 1028, 1029, 1030
=live locs at Lfor.cond%2%1
1017, 1020, 1025, 1026, 1028, 1029, 1030
=live locs at Lfor.body%1%1
1020, 1025, 1026, 1028, 1029, 1030
=live locs at Lfor.end%1%1
1025, 1026, 1028, 1029, 1030
=live locs at E0%0%1
1025, 1026, 1028, 1029, 1030

=Available expressions in llvm.s1112
=available expressions at L0%0%1 in llvm.s1112
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%1%0 in llvm.s1112
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%2%1 in llvm.s1112
=avail_exprs begin
=loc 1017
=from_expr
17404 : input.src.llvm-%cmp : BOOL
=to_expr
17402 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17403 : bvsge(17402, 17389) : BOOL
=avail_exprs end
=available expressions at Lfor.body%1%1 in llvm.s1112
=avail_exprs begin
=loc 1017
=from_expr
17404 : input.src.llvm-%cmp : BOOL
=to_expr
17402 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17403 : bvsge(17402, 17389) : BOOL
=avail_exprs end
=available expressions at Lfor.end%1%1 in llvm.s1112
=avail_exprs begin
=loc 1017
=from_expr
17404 : input.src.llvm-%cmp : BOOL
=to_expr
17402 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17403 : bvsge(17402, 17389) : BOOL
=avail_exprs end
=available expressions at E0%0%1 in llvm.s1112
=avail_exprs begin
=loc 1001
=from_expr
17495 : input.llvm-%ret-reg : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1017
=from_expr
17404 : input.src.llvm-%cmp : BOOL
=to_expr
17402 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17403 : bvsge(17402, 17389) : BOOL
=loc 1022
=from_expr
17500 : input.src.llvm-indir_tgt : BV:32
=to_expr
17387 : retaddr_const : BV:32
=avail_exprs end

=sprel_maps in llvm.s1112
=sprel_map at L0%0%1 in llvm.s1112
=sprel_map at Lfor.cond%1%0 in llvm.s1112
=sprel_map at Lfor.cond%2%1 in llvm.s1112
=sprel_map at Lfor.body%1%1 in llvm.s1112
=sprel_map at Lfor.end%1%1 in llvm.s1112
=sprel_map at E0%0%1 in llvm.s1112
=loc 1001
17389 : 0 : BV:32
=loc 1022
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=PC_to_linename:
=pc
Lentry%1%1
=linename
(line 9 at column 8)
=pc
Lfor.cond%1%1
=linename
(line 9 at column 27)
=pc
Lfor.cond%2%1
=linename
(line 9 at column 3)
=pc
Lfor.body%1%1
=linename
(line 10 at column 11)
=pc
Lfor.body%2%1
=linename
(line 10 at column 11)
=pc
Lfor.body%3%1
=linename
(line 10 at column 18)
=pc
Lfor.body%4%1
=linename
(line 10 at column 16)
=pc
Lfor.body%5%1
=linename
(line 10 at column 4)
=pc
Lfor.body%6%1
=linename
line 10
=pc
Lfor.body%7%1
=linename
line 11
=pc
Lfor.end%1%1
=linename
line 12
=pc
Lfor.inc%1%1
=linename
(line 9 at column 34)
=pc
Lfor.inc%2%1
=linename
line 9
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%1
=column_name
 at column 8
=pc
Lfor.cond%1%1
=column_name
 at column 27
=pc
Lfor.cond%2%1
=column_name
 at column 3
=pc
Lfor.body%1%1
=column_name
 at column 11
=pc
Lfor.body%2%1
=column_name
 at column 11
=pc
Lfor.body%3%1
=column_name
 at column 18
=pc
Lfor.body%4%1
=column_name
 at column 16
=pc
Lfor.body%5%1
=column_name
 at column 4
=pc
Lfor.body%6%1
=column_name
 at column 9
=pc
Lfor.body%7%1
=column_name
 at column 3
=pc
Lfor.end%1%1
=column_name
 at column 2
=pc
Lfor.inc%1%1
=column_name
 at column 34
=pc
Lfor.inc%2%1
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%1
=line_and_column
line 9
=pc
Lfor.cond%1%1
=line_and_column
line 9
=pc
Lfor.cond%2%1
=line_and_column
line 9
=pc
Lfor.body%1%1
=line_and_column
line 10
=pc
Lfor.body%2%1
=line_and_column
line 10
=pc
Lfor.body%3%1
=line_and_column
line 10
=pc
Lfor.body%4%1
=line_and_column
line 10
=pc
Lfor.body%5%1
=line_and_column
line 10
=pc
Lfor.body%6%1
=line_and_column
line 10
=pc
Lfor.body%7%1
=line_and_column
line 11
=pc
Lfor.end%1%1
=line_and_column
line 12
=pc
Lfor.inc%1%1
=line_and_column
line 9
=pc
Lfor.inc%2%1
=line_and_column
line 9
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.llvm-%i.0.phi.tmpvar : 31999
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset : 0
input.src.llvm-%i.0 : i
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : (@b + bvmul(i, 4))
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%cmp : (i&gt;=<sub>s</sub>0)
input.src.llvm-%dec : i
input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset : 0
input.src.llvm-%arrayidx1 : (@a + bvmul(i, 4))
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-%arrayidx : (@b + bvmul(i, 4))
input.llvm-%ret-reg : 0
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset : 0
input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset : 0
input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-indir_tgt : retaddr_const
input.src.llvm-%add : (input.src.llvm-%0 + input.src.llvm-%1)
input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset : (@a + bvmul(i, 4))
input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset : bvmul(i, 4)
=InputLLVMToSourceVarnames done
=TFG_LLVM_done
=dst_tfg
=TFG:
=Nodes: L0%0%1 L3%1%0 L9%1%1 L10%1%0 E0%0%1
=Edges:
L9%1%1 => L3%1%0
L9%1%1 => L10%1%0
L0%0%1 => L3%1%0
L10%1%0 => E0%0%1
L3%1%0 => L9%1%1
=graph done
=Node outputs: E0%0%1
=Output: heap
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Output: symbol.3.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.1.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0 : BV:32
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : val : 4 : 4 : 0
C_SYMBOL3 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: L3%1%0
=L3%1%0 assume predicate_set done
=L3%1%0 assert predicate_set done
=Node assumes and asserts: L9%1%1
=L9%1%1 assume predicate_set done
=L9%1%1 assert predicate_set done
=Node assumes and asserts: L10%1%0
=L10%1%0 assume predicate_set done
=L10%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-esp
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=Edge: L9%1%1 => L3%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L9%1%1 => L10%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L0%0%1 => L3%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))

=Edge: L10%1%0 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)

=Edge: L3%1%0 => L9%1%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L0%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L3%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%1=>L1%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%1=>L2%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%1=>L3%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%0=>L3%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%0=>L9%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%1=>L4%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%1=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>L9%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%1=>L3%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%1=>L10%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%0=>L10%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%0=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%1=>L11%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L0%1%1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L3%1%0
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : bvconcat(6, 6, 6, 6) : BV:128
=dst.exreg.2.2
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%1=>L1%1%1
=dst.exreg.2.2
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%1=>L2%1%1
=dst.exreg.0.0
1 : 127984 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%1=>L3%1%0
=dst.exreg.2.1
1 : input.dst.exreg.2.2 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : bvconcat(4, 4, 4, 4) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%0=>L3%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%0=>L9%1%1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 31 : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 : BV:1
7 : 4294967280 { -16 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:32
17 : eq(16, 2) : BOOL
18 : or(15, 17) : BOOL
19 : ite(18, 1, 6) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : bvuge(3, 2) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967280 { -16 } : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 1 : BV:1
12 : eq(11, 9) : BOOL
13 : bvextract(6, 2, 2) : BV:1
14 : eq(11, 13) : BOOL
15 : xor(12, 14) : BOOL
16 : and(10, 15) : BOOL
17 : ite(16, 11, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(11, 19) : BOOL
21 : ite(20, 11, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 11, 5) : BV:1
26 : 0 : BV:32
27 : eq(26, 6) : BOOL
28 : ite(27, 11, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(6, 31, 31) : BV:1
33 : eq(11, 32) : BOOL
34 : bvextract(8, 31, 31) : BV:1
35 : eq(11, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 11, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvuge(8, 7) : BOOL
43 : not(42) : BOOL
44 : ite(43, 11, 5) : BV:1
45 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 44) : BV:32
=dst.exreg.7.0
1 : 0 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : 0 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : bvuge(3, 2) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.11.0
1 : 0 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 4294967280 { -16 } : BV:32
5 : bvadd(2, 4) : BV:32
6 : bvuge(5, 4) : BOOL
7 : andnot1(3, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 31 : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 : BV:1
7 : 4294967280 { -16 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : 0 : BV:32
16 : eq(15, 2) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 6) : BV:1
=dst.exreg.13.0
1 : 0 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 4294967280 { -16 } : BV:32
5 : bvadd(2, 4) : BV:32
6 : bvuge(5, 4) : BOOL
7 : not(6) : BOOL
8 : or(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 31 : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 : BV:1
7 : 4294967280 { -16 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 6) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 63 : INT
18 : 32 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 95 : INT
25 : 64 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 127 : INT
32 : 96 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 31 : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 : BV:1
7 : 4294967280 { -16 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : ite(14, 1, 6) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.1 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 63 : INT
16 : 32 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 95 : INT
23 : 64 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 127 : INT
30 : 96 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%1=>L4%1%1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
9 : 4 : BV:32
10 : bvadd(3, 9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : 8 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 6, 7) : BV:32
15 : 12 : BV:32
16 : bvadd(3, 4, 15) : BV:32
17 : select(1, 2, 16, 6, 7) : BV:32
18 : bvconcat(8, 11, 14, 17) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%1=>L5%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(5, 18, 19) : BV:32
21 : bvextract(1, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L6%1%1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967280 { -16 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 16 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 16 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L7%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 63 : INT
6 : 32 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : 127 : INT
12 : 96 : INT
13 : bvextract(1, 11, 12) : BV:32
14 : bvconcat(4, 7, 10, 13) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L8%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 16 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>L9%1%1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvuge(6, 26) : BOOL
43 : not(42) : BOOL
44 : ite(43, 9, 5) : BV:1
45 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 44) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%1=>L3%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%1=>L10%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%0=>L10%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%0=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : retaddr_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%1=>L11%1%1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%1=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L3%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L3%1%0 done
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%1
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%0
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%0 done
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L3%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L3%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L9%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L9%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L3%1%0
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L3%1%0 done
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%0
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%0 done
=graph_with_simplified_assets.simplified_assumes at L10%1%0=>L10%1%1
=graph_with_simplified_assets.simplified_assumes at L10%1%0=>L10%1%1 done
=graph_with_simplified_assets.simplified_assumes at L10%1%0=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L10%1%0=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%1
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%1 done
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1019
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1027
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1032
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 0
1 : 127984 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1009
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : bvconcat(6, 6, 6, 6) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1010
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1019
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1027
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1032
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1010
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 0
1 : 127984 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%0
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%0 for loc_id 1009
1 : input.dst.exreg.2.2 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : bvconcat(4, 4, 4, 4) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L3%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L3%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 31 : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 : BV:1
7 : 4294967280 { -16 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1002
1 : 0 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 4294967280 { -16 } : BV:32
5 : bvadd(2, 4) : BV:32
6 : bvuge(5, 4) : BOOL
7 : andnot1(3, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 31 : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 : BV:1
7 : 4294967280 { -16 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : 0 : BV:32
16 : eq(15, 2) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1004
1 : 0 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 4294967280 { -16 } : BV:32
5 : bvadd(2, 4) : BV:32
6 : bvuge(5, 4) : BOOL
7 : not(6) : BOOL
8 : or(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 31 : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 : BV:1
7 : 4294967280 { -16 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:32
17 : eq(16, 2) : BOOL
18 : or(15, 17) : BOOL
19 : ite(18, 1, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : bvuge(3, 2) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 31 : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 : BV:1
7 : 4294967280 { -16 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : ite(14, 1, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1008
1 : input.dst.exreg.2.1 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 63 : INT
16 : 32 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 95 : INT
23 : 64 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 127 : INT
30 : 96 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967280 { -16 } : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 1 : BV:1
12 : eq(11, 9) : BOOL
13 : bvextract(6, 2, 2) : BV:1
14 : eq(11, 13) : BOOL
15 : xor(12, 14) : BOOL
16 : and(10, 15) : BOOL
17 : ite(16, 11, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(11, 19) : BOOL
21 : ite(20, 11, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 11, 5) : BV:1
26 : 0 : BV:32
27 : eq(26, 6) : BOOL
28 : ite(27, 11, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(6, 31, 31) : BV:1
33 : eq(11, 32) : BOOL
34 : bvextract(8, 31, 31) : BV:1
35 : eq(11, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 11, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvuge(8, 7) : BOOL
43 : not(42) : BOOL
44 : ite(43, 11, 5) : BV:1
45 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 44) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1014
1 : 0 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1015
1 : 0 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : bvuge(3, 2) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1025
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 63 : INT
18 : 32 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 95 : INT
25 : 64 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 127 : INT
32 : 96 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : dst_symbol_addr.2 : BV:32
41 : select(39, 2, 40, 13, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1026
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 63 : INT
18 : 32 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 95 : INT
25 : 64 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 127 : INT
32 : 96 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : memlabel-mem-heap : MEMLABEL
41 : memmask(39, 40) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1028
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 63 : INT
18 : 32 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 95 : INT
25 : 64 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 127 : INT
32 : 96 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : memlabel-mem-symbol.1.0 : MEMLABEL
41 : memmask(39, 40) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1029
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 63 : INT
18 : 32 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 95 : INT
25 : 64 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 127 : INT
32 : 96 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : memlabel-mem-symbol.2.0 : MEMLABEL
41 : memmask(39, 40) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1030
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 63 : INT
18 : 32 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 95 : INT
25 : 64 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 127 : INT
32 : 96 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : memlabel-mem-symbol.3.0 : MEMLABEL
41 : memmask(39, 40) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
9 : 4 : BV:32
10 : bvadd(3, 9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : 8 : BV:32
13 : bvadd(3, 4, 12) : BV:32
14 : select(1, 2, 13, 6, 7) : BV:32
15 : 12 : BV:32
16 : bvadd(3, 4, 15) : BV:32
17 : select(1, 2, 16, 6, 7) : BV:32
18 : bvconcat(8, 11, 14, 17) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(5, 18, 19) : BV:32
21 : bvextract(1, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 16 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967280 { -16 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967280 { -16 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967280 { -16 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 16 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 63 : INT
6 : 32 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : 127 : INT
12 : 96 : INT
13 : bvextract(1, 11, 12) : BV:32
14 : bvconcat(4, 7, 10, 13) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1025
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 16 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.2 : BV:32
12 : 4 : INT
13 : select(10, 2, 11, 12, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1026
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 16 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-heap : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1028
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 16 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.1.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1029
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 16 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1030
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 16 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvuge(6, 26) : BOOL
43 : not(42) : BOOL
44 : ite(43, 9, 5) : BV:1
45 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 44) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1020
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1021
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1022
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1023
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1024
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1033
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1034
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1035
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1036
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1037
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1038
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1020
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1021
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1022
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1023
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1024
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1033
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1034
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1035
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1036
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1037
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1038
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>L10%1%1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>L10%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1014
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1016
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1017
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1018
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1020
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1021
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1023
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1024
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1033
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1034
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1035
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1014
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1016
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1017
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1018
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1020
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1021
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1023
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1024
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1033
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1034
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1035
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in dst
=Loc 0 in dst.
REGMEM
dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=Loc 2 in dst.
REGMEM
dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=Loc 3 in dst.
REGMEM
dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=Loc 4 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 5 in dst.
REGMEM
dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=Loc 6 in dst.
REGMEM
dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=Loc 7 in dst.
REGMEM
dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=Loc 1001 in dst.
REGMEM
dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=Loc 1002 in dst.
REGMEM
dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=Loc 1003 in dst.
REGMEM
dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=Loc 1004 in dst.
REGMEM
dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=Loc 1005 in dst.
REGMEM
dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=Loc 1006 in dst.
REGMEM
dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=Loc 1007 in dst.
REGMEM
dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=Loc 1008 in dst.
REGMEM
dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=Loc 1009 in dst.
REGMEM
dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=Loc 1010 in dst.
REGMEM
dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=Loc 1011 in dst.
REGMEM
dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=Loc 1012 in dst.
REGMEM
dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=Loc 1013 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 1014 in dst.
REGMEM
dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=Loc 1015 in dst.
REGMEM
dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=Loc 1016 in dst.
REGMEM
dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=Loc 1017 in dst.
LLVMVAR
dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Loc 1018 in dst.
REGMEM
dst.esp.E0%0%1
1 : input.dst.esp.E0%0%1 : BV:32
=Loc 1019 in dst.
REGMEM
dst.esp.L0%1%1
1 : input.dst.esp.L0%1%1 : BV:32
=Loc 1020 in dst.
REGMEM
dst.hidden_reg.0
1 : input.dst.hidden_reg.0 : BV:16
=Loc 1021 in dst.
REGMEM
dst.hidden_reg.1
1 : input.dst.hidden_reg.1 : BOOL
=Loc 1022 in dst.
REGMEM
dst.hidden_reg.10
1 : input.dst.hidden_reg.10 : BOOL
=Loc 1023 in dst.
REGMEM
dst.hidden_reg.2
1 : input.dst.hidden_reg.2 : BOOL
=Loc 1024 in dst.
REGMEM
dst.hidden_reg.3
1 : input.dst.hidden_reg.3 : BOOL
=Loc 1025 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 1026 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-heap
=Loc 1027 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-esp
=Loc 1028 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1029 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1030 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.3.0
=Loc 1031 in dst.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1032 in dst.
SLOT
=memname
dst.mem
=addr
1 : input_stack_pointer_const : BV:32
=nbytes
4
=bigendian
false
=Loc 1033 in dst.
REGMEM
dst.hidden_reg.4
1 : input.dst.hidden_reg.4 : BOOL
=Loc 1034 in dst.
REGMEM
dst.hidden_reg.5
1 : input.dst.hidden_reg.5 : BOOL
=Loc 1035 in dst.
REGMEM
dst.hidden_reg.6
1 : input.dst.hidden_reg.6 : BOOL
=Loc 1036 in dst.
REGMEM
dst.hidden_reg.7
1 : input.dst.hidden_reg.7 : BOOL
=Loc 1037 in dst.
REGMEM
dst.hidden_reg.8
1 : input.dst.hidden_reg.8 : BOOL
=Loc 1038 in dst.
REGMEM
dst.hidden_reg.9
1 : input.dst.hidden_reg.9 : BOOL

=Alias analysis results in dst
=Alias analysis result in dst at L0%0%1
=Alias analysis result in dst at L0%0%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 3 (input.dst.exreg.0.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 4 (input.dst.exreg.0.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 5 (input.dst.exreg.0.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 6 (input.dst.exreg.0.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 7 (input.dst.exreg.0.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1019 (input.dst.esp.L0%1%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1025 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1026 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1027 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1028 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1029 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1030 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1031 (input.econd)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1032 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1033 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1034 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1035 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1036 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1037 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1038 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L3%1%0
=Alias analysis result in dst at L3%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L3%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L3%1%0 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1025 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1026 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1027 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1028 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1029 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1030 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1031 (input.econd)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1032 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 1033 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1034 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1035 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1036 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1037 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1038 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L9%1%1
=Alias analysis result in dst at L9%1%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L9%1%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L9%1%1 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1025 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1026 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1027 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1028 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1029 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1030 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1031 (input.econd)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1032 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%1 for loc 1033 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1034 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1035 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1036 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1037 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1038 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L10%1%0
=Alias analysis result in dst at L10%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L10%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L10%1%0 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1025 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1026 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1027 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1028 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1029 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1030 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1031 (input.econd)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1032 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%0 for loc 1033 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1034 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1035 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1036 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1037 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1038 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at E0%0%1
=Alias analysis result in dst at E0%0%1 for loc 0 (input.dst.exreg.0.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1001 (input.dst.exreg.10.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1002 (input.dst.exreg.11.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1003 (input.dst.exreg.12.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1004 (input.dst.exreg.13.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1005 (input.dst.exreg.14.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1006 (input.dst.exreg.15.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1007 (input.dst.exreg.16.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1014 (input.dst.exreg.7.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1015 (input.dst.exreg.8.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1016 (input.dst.exreg.9.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1017 (input.dst.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1018 (input.dst.esp.E0%0%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1025 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1026 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1027 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1028 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1029 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1030 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1031 (input.econd)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1032 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1033 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1034 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1035 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1036 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1037 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1038 (input.dst.hidden_reg.9)
nullptr

=Liveness in dst
=live locs at L0%0%1
1025, 1026, 1028, 1029, 1030
=live locs at L3%1%0
0, 1009, 1025, 1026, 1028, 1029, 1030
=live locs at L9%1%1
0, 1009, 1015, 1025, 1026, 1028, 1029, 1030
=live locs at L10%1%0
1025, 1026, 1028, 1029, 1030
=live locs at E0%0%1
0, 1017, 1025, 1026, 1028, 1029, 1030

=Available expressions in dst

=sprel_maps in dst
=sprel_map at L0%0%1 in dst
=sprel_map at L3%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1032
17387 : retaddr_const : BV:32
=sprel_map at L9%1%1 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1032
17387 : retaddr_const : BV:32
=sprel_map at L10%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1032
17387 : retaddr_const : BV:32
=sprel_map at E0%0%1 in dst
=loc 0
17389 : 0 : BV:32
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
17424 : 4 : BV:32
17968 : bvadd(17386, 17424) : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1001
17662 : 0 : BV:1
=loc 1002
17662 : 0 : BV:1
=loc 1003
17662 : 0 : BV:1
=loc 1004
17636 : 1 : BV:1
=loc 1005
17636 : 1 : BV:1
=loc 1006
17636 : 1 : BV:1
=loc 1007
17636 : 1 : BV:1
=loc 1014
17636 : 1 : BV:1
=loc 1015
17662 : 0 : BV:1
=loc 1016
17662 : 0 : BV:1
=loc 1017
17387 : retaddr_const : BV:32
=loc 1018
17386 : input_stack_pointer_const : BV:32
17424 : 4 : BV:32
17968 : bvadd(17386, 17424) : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1032
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=eqcheck_info
=eqcheck
=proof_filename s1112_s1112.gcc.eqchecker.O3.i386.ALL.proof
=function_name s1112
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: movd %exvr5.3w:C_SYMBOL0,%exvr2.2 #
.i1: movl $0x1f3f0,%exvr0.0d #
.i2: pshufd $0x0,%exvr2.2,%exvr2.1 #
.i3: pshufd $0x1b,%exvr5.3w:C_SYMBOL1(%exvr0.0d),%exvr2.0 #
.i4: paddd %exvr2.1,%exvr2.0 #
.i5: subl $0x10,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i6: pshufd $0x1b,%exvr2.0,%exvr2.0 #
.i7: movaps %exvr2.0,%exvr5.3w:C_SYMBOL2*1+16/umask/32(%exvr0.0d) #
.i8: cmpl $0xfffffff0,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i9: jne .i3 #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i10: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i11: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x4
2 : 0xc
3 : 0x11
4 : 0x16
5 : 0x1d
6 : 0x20
7 : 0x29
8 : 0x2d
9 : 0x30
10 : 0x35
11 : 0x3c
=dst_insn_pcs done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : val : 4 : 4 : 0
C_SYMBOL3 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.3.0_begin : BV:32
2 : memlabel-mem-symbol.3.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-symbol.2.0_begin : BV:32
18 : memlabel-mem-symbol.2.0_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : 4 : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : memlabel-mem-esp_begin : BV:32
27 : memlabel-mem-esp_end : BV:32
28 : bvule(26, 27) : BOOL
29 : and(25, 28) : BOOL
30 : stack.size : BV:32
31 : bvadd(30, 5) : BV:32
32 : bvadd(26, 31) : BV:32
33 : eq(27, 32) : BOOL
34 : and(29, 33) : BOOL
35 : bvuge(1, 10) : BOOL
36 : bvule(1, 11) : BOOL
37 : and(35, 36) : BOOL
38 : bvuge(2, 10) : BOOL
39 : bvule(2, 11) : BOOL
40 : and(38, 39) : BOOL
41 : not(40) : BOOL
42 : andnot1(37, 41) : BOOL
43 : bvuge(1, 17) : BOOL
44 : bvule(1, 18) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(2, 17) : BOOL
47 : bvule(2, 18) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(1, 26) : BOOL
53 : bvule(1, 27) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(2, 26) : BOOL
56 : bvule(2, 27) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(10, 1) : BOOL
62 : bvule(10, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(11, 1) : BOOL
65 : bvule(11, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(10, 17) : BOOL
71 : bvule(10, 18) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(11, 17) : BOOL
74 : bvule(11, 18) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : bvuge(10, 26) : BOOL
80 : bvule(10, 27) : BOOL
81 : and(79, 80) : BOOL
82 : bvuge(11, 26) : BOOL
83 : bvule(11, 27) : BOOL
84 : and(82, 83) : BOOL
85 : not(84) : BOOL
86 : andnot1(81, 85) : BOOL
87 : and(78, 86) : BOOL
88 : bvuge(17, 1) : BOOL
89 : bvule(17, 2) : BOOL
90 : and(88, 89) : BOOL
91 : bvuge(18, 1) : BOOL
92 : bvule(18, 2) : BOOL
93 : and(91, 92) : BOOL
94 : not(93) : BOOL
95 : andnot1(90, 94) : BOOL
96 : and(87, 95) : BOOL
97 : bvuge(17, 10) : BOOL
98 : bvule(17, 11) : BOOL
99 : and(97, 98) : BOOL
100 : bvuge(18, 10) : BOOL
101 : bvule(18, 11) : BOOL
102 : and(100, 101) : BOOL
103 : not(102) : BOOL
104 : andnot1(99, 103) : BOOL
105 : and(96, 104) : BOOL
106 : bvuge(17, 26) : BOOL
107 : bvule(17, 27) : BOOL
108 : and(106, 107) : BOOL
109 : bvuge(18, 26) : BOOL
110 : bvule(18, 27) : BOOL
111 : and(109, 110) : BOOL
112 : not(111) : BOOL
113 : andnot1(108, 112) : BOOL
114 : and(105, 113) : BOOL
115 : bvuge(26, 1) : BOOL
116 : bvule(26, 2) : BOOL
117 : and(115, 116) : BOOL
118 : bvuge(27, 1) : BOOL
119 : bvule(27, 2) : BOOL
120 : and(118, 119) : BOOL
121 : not(120) : BOOL
122 : andnot1(117, 121) : BOOL
123 : and(114, 122) : BOOL
124 : bvuge(26, 10) : BOOL
125 : bvule(26, 11) : BOOL
126 : and(124, 125) : BOOL
127 : bvuge(27, 10) : BOOL
128 : bvule(27, 11) : BOOL
129 : and(127, 128) : BOOL
130 : not(129) : BOOL
131 : andnot1(126, 130) : BOOL
132 : and(123, 131) : BOOL
133 : bvuge(26, 17) : BOOL
134 : bvule(26, 18) : BOOL
135 : and(133, 134) : BOOL
136 : bvuge(27, 17) : BOOL
137 : bvule(27, 18) : BOOL
138 : and(136, 137) : BOOL
139 : not(138) : BOOL
140 : andnot1(135, 139) : BOOL
141 : and(132, 140) : BOOL
142 : and(34, 141) : BOOL
143 : symbol.3 : BV:32
144 : 15 : BV:32
145 : bvand(143, 144) : BV:32
146 : 0 : BV:32
147 : eq(145, 146) : BOOL
148 : and(142, 147) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 144) : BV:32
151 : eq(150, 146) : BOOL
152 : and(148, 151) : BOOL
153 : symbol.2 : BV:32
154 : 3 : BV:32
155 : bvand(153, 154) : BV:32
156 : eq(155, 146) : BOOL
157 : and(152, 156) : BOOL
158 : eq(149, 10) : BOOL
159 : eq(153, 17) : BOOL
160 : and(158, 159) : BOOL
161 : eq(143, 1) : BOOL
162 : and(160, 161) : BOOL
163 : and(157, 162) : BOOL
164 : input_stack_pointer_const : BV:32
165 : bvule(26, 164) : BOOL
166 : bvule(164, 27) : BOOL
167 : and(165, 166) : BOOL
168 : bvadd(164, 154) : BV:32
169 : eq(168, 27) : BOOL
170 : and(167, 169) : BOOL
171 : and(163, 170) : BOOL
172 : 4294963200 { -4096 } : BV:32
173 : bvand(26, 172) : BV:32
174 : eq(173, 26) : BOOL
175 : 1 : BV:32
176 : bvadd(27, 175) : BV:32
177 : bvand(176, 172) : BV:32
178 : eq(177, 176) : BOOL
179 : and(174, 178) : BOOL
180 : and(171, 179) : BOOL
181 : dst_symbol_addr.1 : BV:32
182 : eq(149, 181) : BOOL
183 : dst_symbol_addr.2 : BV:32
184 : eq(153, 183) : BOOL
185 : and(182, 184) : BOOL
186 : dst_symbol_addr.3 : BV:32
187 : eq(143, 186) : BOOL
188 : and(185, 187) : BOOL
189 : and(180, 188) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 1125642240 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 1095889864 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : symbol.3 : BV:32
9 : 1207959504 : BV:32
10 : eq(8, 9) : BOOL
11 : and(7, 10) : BOOL
12 : dst_symbol_addr.1 : BV:32
13 : eq(12, 2) : BOOL
14 : and(11, 13) : BOOL
15 : dst_symbol_addr.2 : BV:32
16 : eq(15, 5) : BOOL
17 : and(14, 16) : BOOL
18 : dst_symbol_addr.3 : BV:32
19 : eq(18, 9) : BOOL
20 : and(17, 19) : BOOL
21 : input_stack_pointer_const : BV:32
22 : 536997884 : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.3.0_begin : BV:32
26 : eq(25, 9) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.3.0_end : BV:32
29 : 1208087503 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-symbol.1.0_begin : BV:32
33 : eq(32, 2) : BOOL
34 : and(31, 33) : BOOL
35 : memlabel-mem-symbol.1.0_end : BV:32
36 : 1125770239 : BV:32
37 : eq(35, 36) : BOOL
38 : and(34, 37) : BOOL
39 : memlabel-mem-symbol.2.0_begin : BV:32
40 : eq(39, 5) : BOOL
41 : and(38, 40) : BOOL
42 : memlabel-mem-symbol.2.0_end : BV:32
43 : 1095889867 : BV:32
44 : eq(42, 43) : BOOL
45 : and(41, 44) : BOOL
46 : memlabel-mem-esp_begin : BV:32
47 : 520093696 : BV:32
48 : eq(46, 47) : BOOL
49 : and(45, 48) : BOOL
50 : memlabel-mem-esp_end : BV:32
51 : 536997887 : BV:32
52 : eq(50, 51) : BOOL
53 : and(49, 52) : BOOL
54 : stack.size : BV:32
55 : 16904192 : BV:32
56 : eq(54, 55) : BOOL
57 : and(53, 56) : BOOL
=use_concrete_assertion : 1
=Memlabel assertions done
=llvm2ir 0
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%1_L0%0%1 Lfor.body%1%1_L3%1%0 E0%0%1_E0%0%1
=Edges:
L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
Lfor.body%1%1_L3%1%0 => E0%0%1_E0%0%1
=graph done
=Node outputs: E0%0%1_E0%0%1
=Node outputs done for E0%0%1_E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : val : 4 : 4 : 0
C_SYMBOL3 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=state_end

=Node assumes and asserts: L0%0%1_L0%0%1
=L0%0%1_L0%0%1 assume pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=L0%0%1_L0%0%1 assume predicate_set done
=L0%0%1_L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1_L3%1%0
=Lfor.body%1%1_L3%1%0 assume predicate_set done
=Lfor.body%1%1_L3%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1_E0%0%1
=E0%0%1_E0%0%1 assume predicate_set done
=E0%0%1_E0%0%1 assert pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=E0%0%1_E0%0%1 assert pred 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=E0%0%1_E0%0%1 assert pred 2
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.llvm-indir_tgt : BV:32
=predicate done
=E0%0%1_E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-esp
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=memlabel_map.5
mlvar.llvm.s1112.0 : memlabel-mem-symbol.1.0
=memlabel_map.6
mlvar.llvm.s1112.1 : memlabel-mem-symbol.2.0
=memlabel_map.7
mlvar.llvm.s1112.2 : memlabel-mem-symbol.3.0
=Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L3%1%0 => E0%0%1_E0%0%1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to E0%0%1 at unroll 8 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))+((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge3
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge4
=Edge.src_tfg_full_pathset.Edge: Lfor.end%1%1 => E0%0%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:  ret i32 0, !dbg !31
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L3%1%0 to E0%0%1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*((L9%1%1=>L10%1%0)*(L10%1%0=>E0%0%1)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L10%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L10%1%0 => E0%0%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicates at E0%0%1_E0%0%1
=predicates at E0%0%1_E0%0%1 predicate# 0
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 2
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicates at E0%0%1_E0%0%1 done
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in s1112

=Alias analysis results in s1112
=Alias analysis result in s1112 at L0%0%1_L0%0%1
=Alias analysis result in s1112 at Lfor.body%1%1_L3%1%0
=Alias analysis result in s1112 at E0%0%1_E0%0%1

=Liveness in s1112
=live locs at L0%0%1_L0%0%1

=live locs at Lfor.body%1%1_L3%1%0

=live locs at E0%0%1_E0%0%1


=Available expressions in s1112

=sprel_maps in s1112
=sprel_map at L0%0%1_L0%0%1 in s1112
=sprel_map at Lfor.body%1%1_L3%1%0 in s1112
=sprel_map at E0%0%1_E0%0%1 in s1112
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : val : 4 : 4 : 0
C_SYMBOL3 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.3.0_begin : BV:32
2 : memlabel-mem-symbol.3.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-symbol.2.0_begin : BV:32
18 : memlabel-mem-symbol.2.0_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : 4 : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : memlabel-mem-esp_begin : BV:32
27 : memlabel-mem-esp_end : BV:32
28 : bvule(26, 27) : BOOL
29 : and(25, 28) : BOOL
30 : stack.size : BV:32
31 : bvadd(30, 5) : BV:32
32 : bvadd(26, 31) : BV:32
33 : eq(27, 32) : BOOL
34 : and(29, 33) : BOOL
35 : bvuge(1, 10) : BOOL
36 : bvule(1, 11) : BOOL
37 : and(35, 36) : BOOL
38 : bvuge(2, 10) : BOOL
39 : bvule(2, 11) : BOOL
40 : and(38, 39) : BOOL
41 : not(40) : BOOL
42 : andnot1(37, 41) : BOOL
43 : bvuge(1, 17) : BOOL
44 : bvule(1, 18) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(2, 17) : BOOL
47 : bvule(2, 18) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(1, 26) : BOOL
53 : bvule(1, 27) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(2, 26) : BOOL
56 : bvule(2, 27) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(10, 1) : BOOL
62 : bvule(10, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(11, 1) : BOOL
65 : bvule(11, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(10, 17) : BOOL
71 : bvule(10, 18) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(11, 17) : BOOL
74 : bvule(11, 18) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : bvuge(10, 26) : BOOL
80 : bvule(10, 27) : BOOL
81 : and(79, 80) : BOOL
82 : bvuge(11, 26) : BOOL
83 : bvule(11, 27) : BOOL
84 : and(82, 83) : BOOL
85 : not(84) : BOOL
86 : andnot1(81, 85) : BOOL
87 : and(78, 86) : BOOL
88 : bvuge(17, 1) : BOOL
89 : bvule(17, 2) : BOOL
90 : and(88, 89) : BOOL
91 : bvuge(18, 1) : BOOL
92 : bvule(18, 2) : BOOL
93 : and(91, 92) : BOOL
94 : not(93) : BOOL
95 : andnot1(90, 94) : BOOL
96 : and(87, 95) : BOOL
97 : bvuge(17, 10) : BOOL
98 : bvule(17, 11) : BOOL
99 : and(97, 98) : BOOL
100 : bvuge(18, 10) : BOOL
101 : bvule(18, 11) : BOOL
102 : and(100, 101) : BOOL
103 : not(102) : BOOL
104 : andnot1(99, 103) : BOOL
105 : and(96, 104) : BOOL
106 : bvuge(17, 26) : BOOL
107 : bvule(17, 27) : BOOL
108 : and(106, 107) : BOOL
109 : bvuge(18, 26) : BOOL
110 : bvule(18, 27) : BOOL
111 : and(109, 110) : BOOL
112 : not(111) : BOOL
113 : andnot1(108, 112) : BOOL
114 : and(105, 113) : BOOL
115 : bvuge(26, 1) : BOOL
116 : bvule(26, 2) : BOOL
117 : and(115, 116) : BOOL
118 : bvuge(27, 1) : BOOL
119 : bvule(27, 2) : BOOL
120 : and(118, 119) : BOOL
121 : not(120) : BOOL
122 : andnot1(117, 121) : BOOL
123 : and(114, 122) : BOOL
124 : bvuge(26, 10) : BOOL
125 : bvule(26, 11) : BOOL
126 : and(124, 125) : BOOL
127 : bvuge(27, 10) : BOOL
128 : bvule(27, 11) : BOOL
129 : and(127, 128) : BOOL
130 : not(129) : BOOL
131 : andnot1(126, 130) : BOOL
132 : and(123, 131) : BOOL
133 : bvuge(26, 17) : BOOL
134 : bvule(26, 18) : BOOL
135 : and(133, 134) : BOOL
136 : bvuge(27, 17) : BOOL
137 : bvule(27, 18) : BOOL
138 : and(136, 137) : BOOL
139 : not(138) : BOOL
140 : andnot1(135, 139) : BOOL
141 : and(132, 140) : BOOL
142 : and(34, 141) : BOOL
143 : symbol.3 : BV:32
144 : 15 : BV:32
145 : bvand(143, 144) : BV:32
146 : 0 : BV:32
147 : eq(145, 146) : BOOL
148 : and(142, 147) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 144) : BV:32
151 : eq(150, 146) : BOOL
152 : and(148, 151) : BOOL
153 : symbol.2 : BV:32
154 : 3 : BV:32
155 : bvand(153, 154) : BV:32
156 : eq(155, 146) : BOOL
157 : and(152, 156) : BOOL
158 : eq(149, 10) : BOOL
159 : eq(153, 17) : BOOL
160 : and(158, 159) : BOOL
161 : eq(143, 1) : BOOL
162 : and(160, 161) : BOOL
163 : and(157, 162) : BOOL
164 : input_stack_pointer_const : BV:32
165 : bvule(26, 164) : BOOL
166 : bvule(164, 27) : BOOL
167 : and(165, 166) : BOOL
168 : bvadd(164, 154) : BV:32
169 : eq(168, 27) : BOOL
170 : and(167, 169) : BOOL
171 : and(163, 170) : BOOL
172 : 4294963200 { -4096 } : BV:32
173 : bvand(26, 172) : BV:32
174 : eq(173, 26) : BOOL
175 : 1 : BV:32
176 : bvadd(27, 175) : BV:32
177 : bvand(176, 172) : BV:32
178 : eq(177, 176) : BOOL
179 : and(174, 178) : BOOL
180 : and(171, 179) : BOOL
181 : dst_symbol_addr.1 : BV:32
182 : eq(149, 181) : BOOL
183 : dst_symbol_addr.2 : BV:32
184 : eq(153, 183) : BOOL
185 : and(182, 184) : BOOL
186 : dst_symbol_addr.3 : BV:32
187 : eq(143, 186) : BOOL
188 : and(185, 187) : BOOL
189 : and(180, 188) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 1125642240 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 1095889864 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : symbol.3 : BV:32
9 : 1207959504 : BV:32
10 : eq(8, 9) : BOOL
11 : and(7, 10) : BOOL
12 : dst_symbol_addr.1 : BV:32
13 : eq(12, 2) : BOOL
14 : and(11, 13) : BOOL
15 : dst_symbol_addr.2 : BV:32
16 : eq(15, 5) : BOOL
17 : and(14, 16) : BOOL
18 : dst_symbol_addr.3 : BV:32
19 : eq(18, 9) : BOOL
20 : and(17, 19) : BOOL
21 : input_stack_pointer_const : BV:32
22 : 536997884 : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.3.0_begin : BV:32
26 : eq(25, 9) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.3.0_end : BV:32
29 : 1208087503 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-symbol.1.0_begin : BV:32
33 : eq(32, 2) : BOOL
34 : and(31, 33) : BOOL
35 : memlabel-mem-symbol.1.0_end : BV:32
36 : 1125770239 : BV:32
37 : eq(35, 36) : BOOL
38 : and(34, 37) : BOOL
39 : memlabel-mem-symbol.2.0_begin : BV:32
40 : eq(39, 5) : BOOL
41 : and(38, 40) : BOOL
42 : memlabel-mem-symbol.2.0_end : BV:32
43 : 1095889867 : BV:32
44 : eq(42, 43) : BOOL
45 : and(41, 44) : BOOL
46 : memlabel-mem-esp_begin : BV:32
47 : 520093696 : BV:32
48 : eq(46, 47) : BOOL
49 : and(45, 48) : BOOL
50 : memlabel-mem-esp_end : BV:32
51 : 536997887 : BV:32
52 : eq(50, 51) : BOOL
53 : and(49, 52) : BOOL
54 : stack.size : BV:32
55 : 16904192 : BV:32
56 : eq(54, 55) : BOOL
57 : and(53, 56) : BOOL
=use_concrete_assertion : 0
=Memlabel assertions done
=counterexamples at pc L0%0%1_L0%0%1
=pc L0%0%1_L0%0%1 nodece 0
=pc L0%0%1_L0%0%1 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 0 nodece_path
=pc L0%0%1_L0%0%1 nodece 0 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 0 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1
=pc L0%0%1_L0%0%1 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1 nodece_path
=pc L0%0%1_L0%0%1 nodece 1 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 1 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2
=pc L0%0%1_L0%0%1 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2 nodece_path
=pc L0%0%1_L0%0%1 nodece 2 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 2 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3
=pc L0%0%1_L0%0%1 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3 nodece_path
=pc L0%0%1_L0%0%1 nodece 3 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 3 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4
=pc L0%0%1_L0%0%1 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4 nodece_path
=pc L0%0%1_L0%0%1 nodece 4 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 4 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5
=pc L0%0%1_L0%0%1 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5 nodece_path
=pc L0%0%1_L0%0%1 nodece 5 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 5 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6
=pc L0%0%1_L0%0%1 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6 nodece_path
=pc L0%0%1_L0%0%1 nodece 6 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 6 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7
=pc L0%0%1_L0%0%1 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1389867269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7 nodece_path
=pc L0%0%1_L0%0%1 nodece 7 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 7 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1389867269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8
=pc L0%0%1_L0%0%1 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8 nodece_path
=pc L0%0%1_L0%0%1 nodece 8 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 8 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9
=pc L0%0%1_L0%0%1 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9 nodece_path
=pc L0%0%1_L0%0%1 nodece 9 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 9 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10
=pc L0%0%1_L0%0%1 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1411154259
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10 nodece_path
=pc L0%0%1_L0%0%1 nodece 10 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 10 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1411154259
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11
=pc L0%0%1_L0%0%1 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014822824
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11 nodece_path
=pc L0%0%1_L0%0%1 nodece 11 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 11 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014822824
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12
=pc L0%0%1_L0%0%1 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
235649157
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12 nodece_path
=pc L0%0%1_L0%0%1 nodece 12 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 12 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
235649157
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13
=pc L0%0%1_L0%0%1 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1448703729
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13 nodece_path
=pc L0%0%1_L0%0%1 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 13 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1448703729
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14
=pc L0%0%1_L0%0%1 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379736148
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14 nodece_path
=pc L0%0%1_L0%0%1 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 14 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379736148
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15
=pc L0%0%1_L0%0%1 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 50 : BV:8
=unaliased_memslot.1
1 : 63 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
655495367
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15 nodece_path
=pc L0%0%1_L0%0%1 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 15 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 50 : BV:8
=unaliased_memslot.1
1 : 63 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
655495367
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16
=pc L0%0%1_L0%0%1 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 255 { -1 } : BV:8
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
561717988
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16 nodece_path
=pc L0%0%1_L0%0%1 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 16 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 255 { -1 } : BV:8
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
561717988
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17
=pc L0%0%1_L0%0%1 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.1
1 : 32 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1407392292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17 nodece_path
=pc L0%0%1_L0%0%1 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 17 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.1
1 : 32 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1407392292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18
=pc L0%0%1_L0%0%1 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 31 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
318561886
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18 nodece_path
=pc L0%0%1_L0%0%1 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 18 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 31 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
318561886
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19
=pc L0%0%1_L0%0%1 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770236 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770236 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770236 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 31 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1243439214
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19 nodece_path
=pc L0%0%1_L0%0%1 nodece 19 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 19 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770236 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770236 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770236 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 31 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1243439214
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20
=pc L0%0%1_L0%0%1 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770236 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770236 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770236 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 16 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
70788355
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20 nodece_path
=pc L0%0%1_L0%0%1 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 20 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770236 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770236 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770236 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 16 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
70788355
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21
=pc L0%0%1_L0%0%1 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
864101839
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21 nodece_path
=pc L0%0%1_L0%0%1 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 21 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
864101839
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22
=pc L0%0%1_L0%0%1 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770224 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770224 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770224 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1204275569
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22 nodece_path
=pc L0%0%1_L0%0%1 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 22 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770224 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770224 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770224 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1204275569
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23
=pc L0%0%1_L0%0%1 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770228 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770228 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770228 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1190668363
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23 nodece_path
=pc L0%0%1_L0%0%1 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 23 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770228 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770228 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770228 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1190668363
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24
=pc L0%0%1_L0%0%1 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
435889744
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24 nodece_path
=pc L0%0%1_L0%0%1 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 24 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
435889744
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25
=pc L0%0%1_L0%0%1 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1344593499
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25 nodece_path
=pc L0%0%1_L0%0%1 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 25 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1344593499
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26
=pc L0%0%1_L0%0%1 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 40 , m_adder -> 82)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 40 , m_adder -> 82)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3216827391
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26 nodece_path
=pc L0%0%1_L0%0%1 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 26 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 40 , m_adder -> 82)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 40 , m_adder -> 82)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3216827391
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27
=pc L0%0%1_L0%0%1 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
123204721
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27 nodece_path
=pc L0%0%1_L0%0%1 nodece 27 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 27 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
123204721
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28
=pc L0%0%1_L0%0%1 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 66830848 : BV:32
=symbol.1
1 : 4294836992 { -130304 } : BV:32
=symbol.2
1 : 4265561468 { -29405828 } : BV:32
=dst_symbol_addr.1
1 : 4294836992 { -130304 } : BV:32
=dst_symbol_addr.2
1 : 4265561468 { -29405828 } : BV:32
=dst_symbol_addr.3
1 : 66830848 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4227858428 { -67108868 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4265561468 { -29405828 } : BV:32
=memlabel-mem-esp_end
1 : 4227858431 { -67108865 } : BV:32
=stack.size
1 : 4160897024 { -134070272 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4265561471 { -29405825 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 66958847 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294964991 { -2305 } : BV:32
=memlabel-mem-esp_begin
1 : 66961408 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294836992 { -130304 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 66830848 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1179448499
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28 nodece_path
=pc L0%0%1_L0%0%1 nodece 28 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 28 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 66830848 : BV:32
=symbol.1
1 : 4294836992 { -130304 } : BV:32
=symbol.2
1 : 4265561468 { -29405828 } : BV:32
=dst_symbol_addr.1
1 : 4294836992 { -130304 } : BV:32
=dst_symbol_addr.2
1 : 4265561468 { -29405828 } : BV:32
=dst_symbol_addr.3
1 : 66830848 : BV:32
=input_stack_pointer_const
1 : 4227858428 { -67108868 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4265561468 { -29405828 } : BV:32
=memlabel-mem-esp_end
1 : 4227858431 { -67108865 } : BV:32
=stack.size
1 : 4160897024 { -134070272 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4265561471 { -29405825 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 66958847 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294964991 { -2305 } : BV:32
=memlabel-mem-esp_begin
1 : 66961408 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294836992 { -130304 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 66830848 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1179448499
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29
=pc L0%0%1_L0%0%1 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
171722045
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29 nodece_path
=pc L0%0%1_L0%0%1 nodece 29 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 29 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
171722045
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30
=pc L0%0%1_L0%0%1 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30 nodece_path
=pc L0%0%1_L0%0%1 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 30 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31
=pc L0%0%1_L0%0%1 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1170598296
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31 nodece_path
=pc L0%0%1_L0%0%1 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 31 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1170598296
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32
=pc L0%0%1_L0%0%1 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32 nodece_path
=pc L0%0%1_L0%0%1 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 32 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33
=pc L0%0%1_L0%0%1 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3908977680 { -385989616 } : BV:32
=symbol.1
1 : 4202691664 { -92275632 } : BV:32
=symbol.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.1
1 : 4202691664 { -92275632 } : BV:32
=dst_symbol_addr.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.3
1 : 3908977680 { -385989616 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 510837 : BV:32
=input_stack_pointer_const
1 : 3774775292 { -520192004 } : BV:32
=input.src.llvm-mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3959389708 { -335577588 } : BV:32
=memlabel-mem-esp_end
1 : 3774775295 { -520192001 } : BV:32
=stack.size
1 : 1690238976 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3959389711 { -335577585 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3909105679 { -385861617 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4202819663 { -92147633 } : BV:32
=memlabel-mem-esp_begin
1 : 2084536320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4202691664 { -92275632 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3908977680 { -385989616 } : BV:32
=input.dst.mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 4 : BV:32
=unaliased_memslot.0
1 : 333584 : BV:32
=unaliased_memslot.1
1 : 58 : BV:32
=unaliased_memslot.2
1 : 151560 : BV:32
=unaliased_memslot.4
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2021477009
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33 nodece_path
=pc L0%0%1_L0%0%1 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 33 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3908977680 { -385989616 } : BV:32
=symbol.1
1 : 4202691664 { -92275632 } : BV:32
=symbol.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.1
1 : 4202691664 { -92275632 } : BV:32
=dst_symbol_addr.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.3
1 : 3908977680 { -385989616 } : BV:32
=retaddr_const
1 : 510837 : BV:32
=input_stack_pointer_const
1 : 3774775292 { -520192004 } : BV:32
=input.src.llvm-mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3959389708 { -335577588 } : BV:32
=memlabel-mem-esp_end
1 : 3774775295 { -520192001 } : BV:32
=stack.size
1 : 1690238976 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3959389711 { -335577585 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3909105679 { -385861617 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4202819663 { -92147633 } : BV:32
=memlabel-mem-esp_begin
1 : 2084536320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4202691664 { -92275632 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3908977680 { -385989616 } : BV:32
=input.dst.mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 4 : BV:32
=unaliased_memslot.0
1 : 333584 : BV:32
=unaliased_memslot.1
1 : 58 : BV:32
=unaliased_memslot.2
1 : 151560 : BV:32
=unaliased_memslot.4
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2021477009
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34
=pc L0%0%1_L0%0%1 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294672064 { -295232 } : BV:32
=symbol.1
1 : 4294839088 { -128208 } : BV:32
=symbol.2
1 : 69948 : BV:32
=dst_symbol_addr.1
1 : 4294839088 { -128208 } : BV:32
=dst_symbol_addr.2
1 : 69948 : BV:32
=dst_symbol_addr.3
1 : 4294672064 { -295232 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 179400 : BV:32
=input_stack_pointer_const
1 : 4294619132 { -348164 } : BV:32
=input.src.llvm-mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 69948 : BV:32
=memlabel-mem-esp_end
1 : 4294619135 { -348161 } : BV:32
=stack.size
1 : 4294467584 { -499712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 69951 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294800063 { -167233 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294967087 { -209 } : BV:32
=memlabel-mem-esp_begin
1 : 151552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294839088 { -128208 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294672064 { -295232 } : BV:32
=input.dst.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 146078 : BV:32
=unaliased_memslot.0
1 : 15046 : BV:32
=unaliased_memslot.1
1 : 47847 : BV:32
=unaliased_memslot.2
1 : 983051 : BV:32
=unaliased_memslot.4
1 : 628795 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1395042484
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34 nodece_path
=pc L0%0%1_L0%0%1 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 34 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294672064 { -295232 } : BV:32
=symbol.1
1 : 4294839088 { -128208 } : BV:32
=symbol.2
1 : 69948 : BV:32
=dst_symbol_addr.1
1 : 4294839088 { -128208 } : BV:32
=dst_symbol_addr.2
1 : 69948 : BV:32
=dst_symbol_addr.3
1 : 4294672064 { -295232 } : BV:32
=retaddr_const
1 : 179400 : BV:32
=input_stack_pointer_const
1 : 4294619132 { -348164 } : BV:32
=input.src.llvm-mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 69948 : BV:32
=memlabel-mem-esp_end
1 : 4294619135 { -348161 } : BV:32
=stack.size
1 : 4294467584 { -499712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 69951 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294800063 { -167233 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294967087 { -209 } : BV:32
=memlabel-mem-esp_begin
1 : 151552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294839088 { -128208 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294672064 { -295232 } : BV:32
=input.dst.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 146078 : BV:32
=unaliased_memslot.0
1 : 15046 : BV:32
=unaliased_memslot.1
1 : 47847 : BV:32
=unaliased_memslot.2
1 : 983051 : BV:32
=unaliased_memslot.4
1 : 628795 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1395042484
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35
=pc L0%0%1_L0%0%1 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 725586576 : BV:32
=symbol.1
1 : 1409195328 : BV:32
=symbol.2
1 : 1350536704 : BV:32
=dst_symbol_addr.1
1 : 1409195328 : BV:32
=dst_symbol_addr.2
1 : 1350536704 : BV:32
=dst_symbol_addr.3
1 : 725586576 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1350536704 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1350536707 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 725714575 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1409323327 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1409195328 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 725586576 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
307147498
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35 nodece_path
=pc L0%0%1_L0%0%1 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 35 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 725586576 : BV:32
=symbol.1
1 : 1409195328 : BV:32
=symbol.2
1 : 1350536704 : BV:32
=dst_symbol_addr.1
1 : 1409195328 : BV:32
=dst_symbol_addr.2
1 : 1350536704 : BV:32
=dst_symbol_addr.3
1 : 725586576 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1350536704 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1350536707 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 725714575 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1409323327 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1409195328 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 725586576 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
307147498
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36
=pc L0%0%1_L0%0%1 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2052854602
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36 nodece_path
=pc L0%0%1_L0%0%1 nodece 36 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 36 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2052854602
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37
=pc L0%0%1_L0%0%1 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
195958573
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37 nodece_path
=pc L0%0%1_L0%0%1 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 37 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
195958573
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38
=pc L0%0%1_L0%0%1 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 6 , m_adder -> 51)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 6 , m_adder -> 51)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
676991355
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38 nodece_path
=pc L0%0%1_L0%0%1 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 38 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 6 , m_adder -> 51)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 6 , m_adder -> 51)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
676991355
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39
=pc L0%0%1_L0%0%1 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2155811856 { -2139155440 } : BV:32
=symbol.1
1 : 3758015792 { -536951504 } : BV:32
=symbol.2
1 : 3749648444 { -545318852 } : BV:32
=dst_symbol_addr.1
1 : 3758015792 { -536951504 } : BV:32
=dst_symbol_addr.2
1 : 3749648444 { -545318852 } : BV:32
=dst_symbol_addr.3
1 : 2155811856 { -2139155440 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1409286140 : BV:32
=input.src.llvm-mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3749648444 { -545318852 } : BV:32
=memlabel-mem-esp_end
1 : 1409286143 : BV:32
=stack.size
1 : 603979776 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3749648447 { -545318849 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2155939855 { -2139027441 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758143791 { -536823505 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758015792 { -536951504 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2155811856 { -2139155440 } : BV:32
=input.dst.mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692812949
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39 nodece_path
=pc L0%0%1_L0%0%1 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 39 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2155811856 { -2139155440 } : BV:32
=symbol.1
1 : 3758015792 { -536951504 } : BV:32
=symbol.2
1 : 3749648444 { -545318852 } : BV:32
=dst_symbol_addr.1
1 : 3758015792 { -536951504 } : BV:32
=dst_symbol_addr.2
1 : 3749648444 { -545318852 } : BV:32
=dst_symbol_addr.3
1 : 2155811856 { -2139155440 } : BV:32
=input_stack_pointer_const
1 : 1409286140 : BV:32
=input.src.llvm-mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3749648444 { -545318852 } : BV:32
=memlabel-mem-esp_end
1 : 1409286143 : BV:32
=stack.size
1 : 603979776 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3749648447 { -545318849 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2155939855 { -2139027441 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758143791 { -536823505 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758015792 { -536951504 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2155811856 { -2139155440 } : BV:32
=input.dst.mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692812949
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40
=pc L0%0%1_L0%0%1 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4223665152 { -71302144 } : BV:32
=symbol.1
1 : 4225700864 { -69266432 } : BV:32
=symbol.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.1
1 : 4225700864 { -69266432 } : BV:32
=dst_symbol_addr.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.3
1 : 4223665152 { -71302144 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3816837116 { -478130180 } : BV:32
=input.src.llvm-mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4224778236 { -70189060 } : BV:32
=memlabel-mem-esp_end
1 : 3816837119 { -478130177 } : BV:32
=stack.size
1 : 3816816640 { -478150656 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4224778239 { -70189057 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223793151 { -71174145 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4225828863 { -69138433 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4225700864 { -69266432 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223665152 { -71302144 } : BV:32
=input.dst.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 4294967294 { -2 } : BV:32
=unaliased_memslot.1
1 : 4294967293 { -3 } : BV:32
=unaliased_memslot.2
1 : 4294901760 { -65536 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535855657
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40 nodece_path
=pc L0%0%1_L0%0%1 nodece 40 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 40 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4223665152 { -71302144 } : BV:32
=symbol.1
1 : 4225700864 { -69266432 } : BV:32
=symbol.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.1
1 : 4225700864 { -69266432 } : BV:32
=dst_symbol_addr.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.3
1 : 4223665152 { -71302144 } : BV:32
=input_stack_pointer_const
1 : 3816837116 { -478130180 } : BV:32
=input.src.llvm-mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4224778236 { -70189060 } : BV:32
=memlabel-mem-esp_end
1 : 3816837119 { -478130177 } : BV:32
=stack.size
1 : 3816816640 { -478150656 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4224778239 { -70189057 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223793151 { -71174145 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4225828863 { -69138433 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4225700864 { -69266432 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223665152 { -71302144 } : BV:32
=input.dst.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 4294967294 { -2 } : BV:32
=unaliased_memslot.1
1 : 4294967293 { -3 } : BV:32
=unaliased_memslot.2
1 : 4294901760 { -65536 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535855657
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41
=pc L0%0%1_L0%0%1 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1460524080 : BV:32
=symbol.1
1 : 1661738560 : BV:32
=symbol.2
1 : 1796204048 : BV:32
=dst_symbol_addr.1
1 : 1661738560 : BV:32
=dst_symbol_addr.2
1 : 1796204048 : BV:32
=dst_symbol_addr.3
1 : 1460524080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796204048 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796204048 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796204051 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460652079 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1661866559 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1661738560 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460524080 : BV:32
=input.dst.mem
1 : (( 1796204048 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796204048 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
968728872
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41 nodece_path
=pc L0%0%1_L0%0%1 nodece 41 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 41 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1460524080 : BV:32
=symbol.1
1 : 1661738560 : BV:32
=symbol.2
1 : 1796204048 : BV:32
=dst_symbol_addr.1
1 : 1661738560 : BV:32
=dst_symbol_addr.2
1 : 1796204048 : BV:32
=dst_symbol_addr.3
1 : 1460524080 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796204048 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796204048 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796204051 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460652079 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1661866559 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1661738560 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460524080 : BV:32
=input.dst.mem
1 : (( 1796204048 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796204048 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
968728872
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42
=pc L0%0%1_L0%0%1 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2005385391
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42 nodece_path
=pc L0%0%1_L0%0%1 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 42 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2005385391
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43
=pc L0%0%1_L0%0%1 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 11296 : BV:32
=symbol.1
1 : 541872 : BV:32
=symbol.2
1 : 744956 : BV:32
=dst_symbol_addr.1
1 : 541872 : BV:32
=dst_symbol_addr.2
1 : 744956 : BV:32
=dst_symbol_addr.3
1 : 11296 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3488944124 { -806023172 } : BV:32
=input.src.llvm-mem
1 : (( 669868 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 744956 : BV:32
=memlabel-mem-esp_end
1 : 3488944127 { -806023169 } : BV:32
=stack.size
1 : 2414751744 { -1880215552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 744959 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 139295 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 669871 : BV:32
=memlabel-mem-esp_begin
1 : 1074192384 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 541872 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 11296 : BV:32
=input.dst.mem
1 : (( 669868 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 669868 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 16843008 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1286236129
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43 nodece_path
=pc L0%0%1_L0%0%1 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 43 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 11296 : BV:32
=symbol.1
1 : 541872 : BV:32
=symbol.2
1 : 744956 : BV:32
=dst_symbol_addr.1
1 : 541872 : BV:32
=dst_symbol_addr.2
1 : 744956 : BV:32
=dst_symbol_addr.3
1 : 11296 : BV:32
=input_stack_pointer_const
1 : 3488944124 { -806023172 } : BV:32
=input.src.llvm-mem
1 : (( 669868 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 744956 : BV:32
=memlabel-mem-esp_end
1 : 3488944127 { -806023169 } : BV:32
=stack.size
1 : 2414751744 { -1880215552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 744959 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 139295 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 669871 : BV:32
=memlabel-mem-esp_begin
1 : 1074192384 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 541872 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 11296 : BV:32
=input.dst.mem
1 : (( 669868 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 669868 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 16843008 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1286236129
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44
=pc L0%0%1_L0%0%1 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779492268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (( 1779492268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1779492268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1798003979
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44 nodece_path
=pc L0%0%1_L0%0%1 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 44 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779492268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (( 1779492268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1779492268 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1798003979
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45
=pc L0%0%1_L0%0%1 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
318324966
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45 nodece_path
=pc L0%0%1_L0%0%1 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 45 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
318324966
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46
=pc L0%0%1_L0%0%1 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
174542394
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46 nodece_path
=pc L0%0%1_L0%0%1 nodece 46 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 46 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
174542394
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47
=pc L0%0%1_L0%0%1 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 130 , m_adder -> 1)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 130 , m_adder -> 1)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2708098254
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47 nodece_path
=pc L0%0%1_L0%0%1 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 47 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 130 , m_adder -> 1)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 130 , m_adder -> 1)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2708098254
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48
=pc L0%0%1_L0%0%1 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1226064959
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48 nodece_path
=pc L0%0%1_L0%0%1 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 48 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1226064959
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49
=pc L0%0%1_L0%0%1 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
457848347
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49 nodece_path
=pc L0%0%1_L0%0%1 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 49 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
457848347
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50
=pc L0%0%1_L0%0%1 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 30 , m_adder -> 101)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 30 , m_adder -> 101)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2599870227
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50 nodece_path
=pc L0%0%1_L0%0%1 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 50 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 30 , m_adder -> 101)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 30 , m_adder -> 101)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2599870227
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51
=pc L0%0%1_L0%0%1 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1145336947
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51 nodece_path
=pc L0%0%1_L0%0%1 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 51 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1145336947
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52
=pc L0%0%1_L0%0%1 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1357195540
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52 nodece_path
=pc L0%0%1_L0%0%1 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 52 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1357195540
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53
=pc L0%0%1_L0%0%1 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 147 , m_adder -> 220)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 147 , m_adder -> 220)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
590452772
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53 nodece_path
=pc L0%0%1_L0%0%1 nodece 53 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 53 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 147 , m_adder -> 220)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 147 , m_adder -> 220)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
590452772
=counter_example_end
=counterexamples at pc Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 26280631262261196554033415618889611049 : BV:128
=input.dst.exreg.2.2
1 : 331708201 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 536997887 ) -> 0, ( 536997884 ) -> 0, ( 536997886 ) -> 0, ( 536997885 ) -> 0, () -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 2
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 3
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 246337724444338573316790921005794257796 { -93944642476599890146583686425973953660 } : BV:128
=input.dst.exreg.2.2
1 : 3109219204 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 536997887 ) -> 0, ( 536997884 ) -> 0, ( 536997886 ) -> 0, ( 536997885 ) -> 0, () -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 4
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 5
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.2.1
1 : 135547771957894828089846116923383319841 : BV:128
=input.dst.exreg.2.2
1 : 1710853409 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 536997887 ) -> 0, ( 536997884 ) -> 0, ( 536997886 ) -> 0, ( 536997885 ) -> 0, () -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 6
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 536997884 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 7
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014822824
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 168987264372278504720060005170441995109 : BV:128
=input.dst.exreg.2.2
1 : 2132919141 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 536997887 ) -> 128, ( 536997884 ) -> 0, ( 536997886 ) -> 0, ( 536997885 ) -> 0, () -> (RAC: m_multiplier -> 94 , m_adder -> 245)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014822824
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 8
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
235649157
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
235649157
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 9
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379736148
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 304990356856525184358851672583821263247 { -35292010064413279104522934847946948209 } : BV:128
=input.dst.exreg.2.2
1 : 3849519503 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 536997887 ) -> 0, ( 536997884 ) -> 0, ( 536997886 ) -> 0, ( 536997885 ) -> 0, () -> (RAC: m_multiplier -> 114 , m_adder -> 127)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1379736148
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 10
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 50 : BV:8
=unaliased_memslot.1
1 : 63 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
655495367
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 3961408126635554083577423462450 : BV:128
=input.dst.exreg.2.2
1 : 50 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1095889864 ) -> 50, ( 1125770236 ) -> 63, ( 1125770232 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 50 : BV:8
=unaliased_memslot.1
1 : 63 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
655495367
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 11
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 255 { -1 } : BV:8
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
561717988
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 20203181445841325826244859658495 : BV:128
=input.dst.exreg.2.2
1 : 255 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1095889864 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 255 { -1 } : BV:8
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
561717988
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 12
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.1
1 : 32 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1407392292
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770236 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.1
1 : 32 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1407392292
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 13
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 31 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
318561886
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770232 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 31 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
318561886
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 14
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
864101839
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1125770228 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
864101839
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 15
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
435889744
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
435889744
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 16
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
406011017
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
406011017
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 17
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1269400346
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1269400346
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 18
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
114760235
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
114760235
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 19
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
114760235
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31995 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31995 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125770224 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127984 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31995 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1208087488 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%arrayidx
1 : 1125770224 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1208087488 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
114760235
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 20
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16387 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 16387 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1588279465
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65520 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16383 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16383 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125707776 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 65536 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 16383 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1208025040 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%arrayidx
1 : 1125707776 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1208025040 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 65536 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1588279465
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 21
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8195 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 8195 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1912802551
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32752 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8191 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8191 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125675008 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 32768 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 8191 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207992272 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%arrayidx
1 : 1125675008 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207992272 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 32768 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1912802551
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 22
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4099 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 4099 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1087157360
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16368 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4095 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4095 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125658624 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 16384 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 4095 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207975888 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%arrayidx
1 : 1125658624 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207975888 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 16384 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1087157360
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 23
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2051 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 2051 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1789065969
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8176 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2047 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2047 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125650432 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 8192 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 2047 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207967696 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%arrayidx
1 : 1125650432 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207967696 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 8192 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1789065969
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 24
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1027 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 1027 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
165418241
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4080 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1023 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1023 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125646336 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 4096 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 1023 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207963600 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%arrayidx
1 : 1125646336 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207963600 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
165418241
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 25
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 515 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 515 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
939288131
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2032 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 511 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 511 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125644288 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 2048 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 511 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207961552 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%arrayidx
1 : 1125644288 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207961552 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 2048 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
939288131
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 26
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 259 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 259 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1563918751
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1008 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 255 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 255 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125643264 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 1024 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 255 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207960528 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%arrayidx
1 : 1125643264 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207960528 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 1024 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1563918751
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 27
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 131 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 131 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
206496585
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 496 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 127 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 127 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125642752 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 512 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 127 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207960016 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%arrayidx
1 : 1125642752 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207960016 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 512 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
206496585
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 28
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 67 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 67 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1777322269
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 240 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 63 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 63 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125642496 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 256 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 63 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207959760 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%arrayidx
1 : 1125642496 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207959760 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 256 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1777322269
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 29
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 35 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 35 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
207222095
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125642368 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 128 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207959632 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%arrayidx
1 : 1125642368 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207959632 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 128 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
207222095
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 30
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 19 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 19 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1304719330
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 15 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 15 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125642304 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 64 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 15 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207959568 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%arrayidx
1 : 1125642304 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207959568 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 64 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1304719330
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 31
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 11 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 11 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1572807882
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 7 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 7 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125642272 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 7 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207959536 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%arrayidx
1 : 1125642272 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207959536 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 32 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1572807882
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 32
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 11 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 11 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1572807882
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.graph_edge_composition
((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 3 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 3 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1125642256 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 3 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=input.src.llvm-%arrayidx1
1 : 1207959520 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx
1 : 1125642256 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1207959520 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 16 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1572807882
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 33
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 3 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 3 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1816792856
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 3 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 3 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1816792856
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 34
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 3 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 3 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1711100255
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 3 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 3 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1711100255
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 35
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 3 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 3 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1350534604
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 536997884 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 1207959504 : BV:32
=symbol.1
1 : 1125642240 : BV:32
=symbol.2
1 : 1095889864 : BV:32
=dst_symbol_addr.1
1 : 1125642240 : BV:32
=dst_symbol_addr.2
1 : 1095889864 : BV:32
=dst_symbol_addr.3
1 : 1207959504 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 3 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 536997884 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 536997884 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1095889864 : BV:32
=memlabel-mem-esp_end
1 : 536997887 : BV:32
=stack.size
1 : 16904192 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1095889867 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1208087503 : BV:32
=input.src.llvm-%i.0
1 : 3 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1125770239 : BV:32
=memlabel-mem-esp_begin
1 : 520093696 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1125642240 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1207959504 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1350534604
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 36
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
123204721
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 809541628 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 809541628 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
123204721
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 37
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
123204721
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 809541628 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31995 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 809541628 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31995 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3758152992 { -536814304 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127984 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31995 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=input.src.llvm-%arrayidx1
1 : 2281752576 { -2013214720 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%arrayidx
1 : 3758152992 { -536814304 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 2281752576 { -2013214720 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
123204721
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 38
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 66830848 : BV:32
=symbol.1
1 : 4294836992 { -130304 } : BV:32
=symbol.2
1 : 4265561468 { -29405828 } : BV:32
=dst_symbol_addr.1
1 : 4294836992 { -130304 } : BV:32
=dst_symbol_addr.2
1 : 4265561468 { -29405828 } : BV:32
=dst_symbol_addr.3
1 : 66830848 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4227858428 { -67108868 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4265561468 { -29405828 } : BV:32
=memlabel-mem-esp_end
1 : 4227858431 { -67108865 } : BV:32
=stack.size
1 : 4160897024 { -134070272 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4265561471 { -29405825 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 66958847 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294964991 { -2305 } : BV:32
=memlabel-mem-esp_begin
1 : 66961408 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294836992 { -130304 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 66830848 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1179448499
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4227858428 { -67108868 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 66830848 : BV:32
=symbol.1
1 : 4294836992 { -130304 } : BV:32
=symbol.2
1 : 4265561468 { -29405828 } : BV:32
=dst_symbol_addr.1
1 : 4294836992 { -130304 } : BV:32
=dst_symbol_addr.2
1 : 4265561468 { -29405828 } : BV:32
=dst_symbol_addr.3
1 : 66830848 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4227858428 { -67108868 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4227858428 { -67108868 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4265561468 { -29405828 } : BV:32
=memlabel-mem-esp_end
1 : 4227858431 { -67108865 } : BV:32
=stack.size
1 : 4160897024 { -134070272 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4265561471 { -29405825 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 66958847 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4294964991 { -2305 } : BV:32
=memlabel-mem-esp_begin
1 : 66961408 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294836992 { -130304 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 66830848 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1179448499
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 39
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
171722045
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 35187348077144317111413185889099634228 : BV:128
=input.dst.exreg.2.2
1 : 444126772 : BV:128
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
171722045
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 40
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
171722045
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 49023645718100617782453696752192652480 : BV:128
=input.dst.exreg.2.1
1 : 35187348077144317111413185889099634228 : BV:128
=input.dst.exreg.2.2
1 : 444126772 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31995 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460658932 ) -> 72, ( 1460658931 ) -> 141, ( 1460658941 ) -> 156, ( 1460658940 ) -> 88, ( 1460658942 ) -> 225, ( 1460658936 ) -> 208, ( 1460658943 ) -> 36, ( 1460658934 ) -> 209, ( 1460658939 ) -> 157, ( 1460658928 ) -> 192, ( 1460658929 ) -> 4, ( 1460658938 ) -> 89, ( 1460658937 ) -> 20, ( 1460658933 ) -> 140, ( 1460658930 ) -> 73, ( 1460658935 ) -> 20, () -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 1926246028 : BV:32
=input.src.llvm-%i.0
1 : 31995 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1779492256 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127984 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=input.src.llvm-%1
1 : 444126772 : BV:32
=input.src.llvm-%dec
1 : 31995 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.src.llvm-%arrayidx1
1 : 1460658928 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%arrayidx
1 : 1779492256 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%add
1 : 2370372800 { -1924594496 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1460658928 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 1460658932 ) -> 72, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 1460658931 ) -> 141, ( 1460658941 ) -> 156, ( 1460658940 ) -> 88, ( 1460658942 ) -> 225, ( 1460658936 ) -> 208, ( 1460658943 ) -> 36, ( 1460658934 ) -> 209, ( 1460658939 ) -> 157, ( 1460658928 ) -> 192, ( 1460658929 ) -> 4, ( 1460658938 ) -> 89, ( 1460658937 ) -> 20, ( 1460658933 ) -> 140, ( 1460658930 ) -> 73, ( 1460658935 ) -> 20, () -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
171722045
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 41
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
171722045
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127952 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 6321544771159320425104412757505664160 : BV:128
=input.dst.exreg.2.1
1 : 35187348077144317111413185889099634228 : BV:128
=input.dst.exreg.2.2
1 : 444126772 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31991 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460658932 ) -> 72, ( 1460658917 ) -> 109, ( 1460658931 ) -> 141, ( 1460658941 ) -> 156, ( 1460658940 ) -> 88, ( 1460658927 ) -> 4, ( 1460658920 ) -> 176, ( 1460658942 ) -> 225, ( 1460658924 ) -> 56, ( 1460658936 ) -> 208, ( 1460658921 ) -> 244, ( 1460658926 ) -> 193, ( 1460658943 ) -> 36, ( 1460658934 ) -> 209, ( 1460658922 ) -> 56, ( 1460658939 ) -> 157, ( 1460658919 ) -> 244, ( 1460658915 ) -> 109, ( 1460658914 ) -> 40, ( 1460658928 ) -> 192, ( 1460658918 ) -> 177, ( 1460658929 ) -> 4, ( 1460658925 ) -> 124, ( 1460658938 ) -> 89, ( 1460658937 ) -> 20, ( 1460658913 ) -> 228, ( 1460658933 ) -> 140, ( 1460658916 ) -> 40, ( 1460658930 ) -> 73, ( 1460658923 ) -> 125, ( 1460658912 ) -> 160, ( 1460658935 ) -> 20, () -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 1387269740 : BV:32
=input.src.llvm-%i.0
1 : 31991 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1779492240 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127968 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=input.src.llvm-%1
1 : 444126772 : BV:32
=input.src.llvm-%dec
1 : 31991 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.src.llvm-%arrayidx1
1 : 1460658912 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127968 : BV:32
=input.src.llvm-%arrayidx
1 : 1779492240 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127968 : BV:32
=input.src.llvm-%add
1 : 1831396512 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1460658912 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127968 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 1460658932 ) -> 72, ( 1460658917 ) -> 109, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 1460658931 ) -> 141, ( 1460658941 ) -> 156, ( 1460658940 ) -> 88, ( 1460658927 ) -> 4, ( 1460658920 ) -> 176, ( 1460658942 ) -> 225, ( 1460658924 ) -> 56, ( 1460658936 ) -> 208, ( 1460658921 ) -> 244, ( 1460658926 ) -> 193, ( 1460658943 ) -> 36, ( 1460658934 ) -> 209, ( 1460658922 ) -> 56, ( 1460658939 ) -> 157, ( 1460658919 ) -> 244, ( 1460658915 ) -> 109, ( 1460658914 ) -> 40, ( 1460658928 ) -> 192, ( 1460658918 ) -> 177, ( 1460658929 ) -> 4, ( 1460658925 ) -> 124, ( 1460658938 ) -> 89, ( 1460658937 ) -> 20, ( 1460658913 ) -> 228, ( 1460658933 ) -> 140, ( 1460658916 ) -> 40, ( 1460658930 ) -> 73, ( 1460658923 ) -> 125, ( 1460658912 ) -> 160, ( 1460658935 ) -> 20, () -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
171722045
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 42
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
171722045
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127936 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 303901831027567299090173029597791765632 { -36380535893371164373201577833976445824 } : BV:128
=input.dst.exreg.2.1
1 : 35187348077144317111413185889099634228 : BV:128
=input.dst.exreg.2.2
1 : 444126772 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31987 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460658932 ) -> 72, ( 1460658903 ) -> 212, ( 1460658917 ) -> 109, ( 1460658931 ) -> 141, ( 1460658941 ) -> 156, ( 1460658940 ) -> 88, ( 1460658909 ) -> 93, ( 1460658927 ) -> 4, ( 1460658920 ) -> 176, ( 1460658897 ) -> 196, ( 1460658905 ) -> 212, ( 1460658900 ) -> 8, ( 1460658942 ) -> 225, ( 1460658924 ) -> 56, ( 1460658936 ) -> 208, ( 1460658921 ) -> 244, ( 1460658926 ) -> 193, ( 1460658943 ) -> 36, ( 1460658934 ) -> 209, ( 1460658907 ) -> 93, ( 1460658911 ) -> 228, ( 1460658901 ) -> 77, ( 1460658908 ) -> 24, ( 1460658922 ) -> 56, ( 1460658939 ) -> 157, ( 1460658919 ) -> 244, ( 1460658915 ) -> 109, ( 1460658896 ) -> 128, ( 1460658902 ) -> 145, ( 1460658914 ) -> 40, ( 1460658928 ) -> 192, ( 1460658906 ) -> 25, ( 1460658918 ) -> 177, ( 1460658929 ) -> 4, ( 1460658925 ) -> 124, ( 1460658910 ) -> 161, ( 1460658938 ) -> 89, ( 1460658937 ) -> 20, ( 1460658913 ) -> 228, ( 1460658933 ) -> 140, ( 1460658899 ) -> 77, ( 1460658916 ) -> 40, ( 1460658930 ) -> 73, ( 1460658923 ) -> 125, ( 1460658912 ) -> 160, ( 1460658935 ) -> 20, ( 1460658898 ) -> 9, ( 1460658904 ) -> 144, () -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 848358988 : BV:32
=input.src.llvm-%i.0
1 : 31987 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1779492224 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127952 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=input.src.llvm-%1
1 : 444126772 : BV:32
=input.src.llvm-%dec
1 : 31987 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.src.llvm-%arrayidx1
1 : 1460658896 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127952 : BV:32
=input.src.llvm-%arrayidx
1 : 1779492224 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127952 : BV:32
=input.src.llvm-%add
1 : 1292485760 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1460658896 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127952 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 1460658932 ) -> 72, ( 1460658903 ) -> 212, ( 1460658917 ) -> 109, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 1460658931 ) -> 141, ( 1460658941 ) -> 156, ( 1460658940 ) -> 88, ( 1460658909 ) -> 93, ( 1460658927 ) -> 4, ( 1460658920 ) -> 176, ( 1460658897 ) -> 196, ( 1460658905 ) -> 212, ( 1460658900 ) -> 8, ( 1460658942 ) -> 225, ( 1460658924 ) -> 56, ( 1460658936 ) -> 208, ( 1460658921 ) -> 244, ( 1460658926 ) -> 193, ( 1460658943 ) -> 36, ( 1460658934 ) -> 209, ( 1460658907 ) -> 93, ( 1460658911 ) -> 228, ( 1460658901 ) -> 77, ( 1460658908 ) -> 24, ( 1460658922 ) -> 56, ( 1460658939 ) -> 157, ( 1460658919 ) -> 244, ( 1460658915 ) -> 109, ( 1460658896 ) -> 128, ( 1460658902 ) -> 145, ( 1460658914 ) -> 40, ( 1460658928 ) -> 192, ( 1460658906 ) -> 25, ( 1460658918 ) -> 177, ( 1460658929 ) -> 4, ( 1460658925 ) -> 124, ( 1460658910 ) -> 161, ( 1460658938 ) -> 89, ( 1460658937 ) -> 20, ( 1460658913 ) -> 228, ( 1460658933 ) -> 140, ( 1460658899 ) -> 77, ( 1460658916 ) -> 40, ( 1460658930 ) -> 73, ( 1460658923 ) -> 125, ( 1460658912 ) -> 160, ( 1460658935 ) -> 20, ( 1460658898 ) -> 9, ( 1460658904 ) -> 144, () -> (RAC: m_multiplier -> 162 , m_adder -> 76)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
171722045
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 43
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 809631740 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 809631740 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (( 809631743 ) -> 255, ( 809631741 ) -> 255, ( 809631742 ) -> 255, ( 809631740 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 44
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1170598296
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294434812 { -532484 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2688 : BV:32
=symbol.1
1 : 4294783344 { -183952 } : BV:32
=symbol.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.1
1 : 4294783344 { -183952 } : BV:32
=dst_symbol_addr.2
1 : 4294950684 { -16612 } : BV:32
=dst_symbol_addr.3
1 : 2688 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294434812 { -532484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294434812 { -532484 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294950684 { -16612 } : BV:32
=memlabel-mem-esp_end
1 : 4294434815 { -532481 } : BV:32
=stack.size
1 : 4294193152 { -774144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294950687 { -16609 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130687 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4294911343 { -55953 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294783344 { -183952 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2688 : BV:32
=input.dst.mem
1 : (( 4294434812 ) -> 255, ( 4294434815 ) -> 255, ( 4294434814 ) -> 255, ( 4294434813 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1170598296
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 45
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 152874547629270004310682232721571483936 : BV:128
=input.dst.exreg.2.2
1 : 1929548064 : BV:128
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 128, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 46
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 296402797957003358213539921281755959020 { -43879568963935105249834686150012252436 } : BV:128
=input.dst.exreg.2.1
1 : 152874547629270004310682232721571483936 : BV:128
=input.dst.exreg.2.2
1 : 1929548064 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31995 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460658932 ) -> 176, ( 1460658931 ) -> 146, ( 1460658941 ) -> 26, ( 1460658940 ) -> 56, ( 1460658942 ) -> 253, ( 1460658936 ) -> 116, ( 1460658943 ) -> 222, ( 1460658934 ) -> 116, ( 1460658939 ) -> 26, ( 1460658928 ) -> 236, ( 1460658929 ) -> 206, ( 1460658938 ) -> 57, ( 1460658937 ) -> 86, ( 1460658933 ) -> 146, ( 1460658930 ) -> 176, ( 1460658935 ) -> 86, () -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 531512780 : BV:32
=input.src.llvm-%i.0
1 : 31995 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1779492256 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127984 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=input.src.llvm-%1
1 : 1929548064 : BV:32
=input.src.llvm-%dec
1 : 31995 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.src.llvm-%arrayidx1
1 : 1460658928 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%arrayidx
1 : 1779492256 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%add
1 : 2461060844 { -1833906452 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1460658928 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 128, ( 1460658932 ) -> 176, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, ( 1460658931 ) -> 146, ( 1460658941 ) -> 26, ( 1460658940 ) -> 56, ( 1460658942 ) -> 253, ( 1460658936 ) -> 116, ( 1460658943 ) -> 222, ( 1460658934 ) -> 116, ( 1460658939 ) -> 26, ( 1460658928 ) -> 236, ( 1460658929 ) -> 206, ( 1460658938 ) -> 57, ( 1460658937 ) -> 86, ( 1460658933 ) -> 146, ( 1460658930 ) -> 176, ( 1460658935 ) -> 86, () -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 47
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3908977680 { -385989616 } : BV:32
=symbol.1
1 : 4202691664 { -92275632 } : BV:32
=symbol.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.1
1 : 4202691664 { -92275632 } : BV:32
=dst_symbol_addr.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.3
1 : 3908977680 { -385989616 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 510837 : BV:32
=input_stack_pointer_const
1 : 3774775292 { -520192004 } : BV:32
=input.src.llvm-mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3959389708 { -335577588 } : BV:32
=memlabel-mem-esp_end
1 : 3774775295 { -520192001 } : BV:32
=stack.size
1 : 1690238976 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3959389711 { -335577585 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3909105679 { -385861617 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4202819663 { -92147633 } : BV:32
=memlabel-mem-esp_begin
1 : 2084536320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4202691664 { -92275632 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3908977680 { -385989616 } : BV:32
=input.dst.mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 4 : BV:32
=unaliased_memslot.0
1 : 333584 : BV:32
=unaliased_memslot.1
1 : 58 : BV:32
=unaliased_memslot.2
1 : 151560 : BV:32
=unaliased_memslot.4
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2021477009
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3774775292 { -520192004 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 26429247370311893468321824565958416 : BV:128
=input.dst.exreg.2.2
1 : 333584 : BV:128
=symbol.3
1 : 3908977680 { -385989616 } : BV:32
=symbol.1
1 : 4202691664 { -92275632 } : BV:32
=symbol.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.1
1 : 4202691664 { -92275632 } : BV:32
=dst_symbol_addr.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.3
1 : 3908977680 { -385989616 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 510837 : BV:32
=input_stack_pointer_const
1 : 3774775292 { -520192004 } : BV:32
=input.src.llvm-mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3774775292 { -520192004 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3959389708 { -335577588 } : BV:32
=memlabel-mem-esp_end
1 : 3774775295 { -520192001 } : BV:32
=stack.size
1 : 1690238976 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3959389711 { -335577585 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3909105679 { -385861617 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4202819663 { -92147633 } : BV:32
=memlabel-mem-esp_begin
1 : 2084536320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4202691664 { -92275632 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3908977680 { -385989616 } : BV:32
=input.dst.mem
1 : (( 3774775293 ) -> 203, ( 3774775294 ) -> 7, ( 3774775292 ) -> 117, ( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 4 : BV:32
=unaliased_memslot.0
1 : 333584 : BV:32
=unaliased_memslot.1
1 : 58 : BV:32
=unaliased_memslot.2
1 : 151560 : BV:32
=unaliased_memslot.4
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2021477009
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 48
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3908977680 { -385989616 } : BV:32
=symbol.1
1 : 4202691664 { -92275632 } : BV:32
=symbol.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.1
1 : 4202691664 { -92275632 } : BV:32
=dst_symbol_addr.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.3
1 : 3908977680 { -385989616 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 510837 : BV:32
=input_stack_pointer_const
1 : 3774775292 { -520192004 } : BV:32
=input.src.llvm-mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3959389708 { -335577588 } : BV:32
=memlabel-mem-esp_end
1 : 3774775295 { -520192001 } : BV:32
=stack.size
1 : 1690238976 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3959389711 { -335577585 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3909105679 { -385861617 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4202819663 { -92147633 } : BV:32
=memlabel-mem-esp_begin
1 : 2084536320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4202691664 { -92275632 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3908977680 { -385989616 } : BV:32
=input.dst.mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 4 : BV:32
=unaliased_memslot.0
1 : 333584 : BV:32
=unaliased_memslot.1
1 : 58 : BV:32
=unaliased_memslot.2
1 : 151560 : BV:32
=unaliased_memslot.4
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2021477009
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3774775292 { -520192004 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 26433842606533509331713686937868051 : BV:128
=input.dst.exreg.2.1
1 : 26429247370311893468321824565958416 : BV:128
=input.dst.exreg.2.2
1 : 333584 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3908977680 { -385989616 } : BV:32
=symbol.1
1 : 4202691664 { -92275632 } : BV:32
=symbol.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.1
1 : 4202691664 { -92275632 } : BV:32
=dst_symbol_addr.2
1 : 3959389708 { -335577588 } : BV:32
=dst_symbol_addr.3
1 : 3908977680 { -385989616 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31995 : BV:32
=retaddr_const
1 : 510837 : BV:32
=input_stack_pointer_const
1 : 3774775292 { -520192004 } : BV:32
=input.src.llvm-mem
1 : (( 3909105672 ) -> 24, ( 3909105670 ) -> 5, ( 3909105669 ) -> 23, ( 3909105668 ) -> 20, ( 3909105666 ) -> 5, ( 3909105676 ) -> 74, ( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, ( 3909105677 ) -> 23, ( 3909105678 ) -> 5, ( 3909105664 ) -> 19, ( 3909105674 ) -> 7, ( 3909105673 ) -> 103, ( 3909105665 ) -> 23, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3774775292 { -520192004 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3959389708 { -335577588 } : BV:32
=memlabel-mem-esp_end
1 : 3774775295 { -520192001 } : BV:32
=stack.size
1 : 1690238976 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3959389711 { -335577585 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3909105679 { -385861617 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 3 : BV:32
=input.src.llvm-%i.0
1 : 31995 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4202819648 { -92147648 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127984 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4202819663 { -92147633 } : BV:32
=input.src.llvm-%1
1 : 333584 : BV:32
=input.src.llvm-%dec
1 : 31995 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2084536320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4202691664 { -92275632 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3909105664 { -385861632 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%arrayidx
1 : 4202819648 { -92147648 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%add
1 : 333587 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 3909105664 { -385861632 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3908977680 { -385989616 } : BV:32
=input.dst.mem
1 : (( 3909105672 ) -> 24, ( 3909105670 ) -> 5, ( 3909105669 ) -> 23, ( 3909105668 ) -> 20, ( 3909105666 ) -> 5, ( 3909105676 ) -> 74, ( 3774775293 ) -> 203, ( 3774775294 ) -> 7, ( 3774775292 ) -> 117, ( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, ( 3909105677 ) -> 23, ( 3909105678 ) -> 5, ( 3909105664 ) -> 19, ( 3909105674 ) -> 7, ( 3909105673 ) -> 103, ( 3909105665 ) -> 23, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3959389708 ) -> 16, ( 3959389709 ) -> 23, ( 3959389710 ) -> 5, ( 4202819660 ) -> 58, ( 4202819656 ) -> 8, ( 4202819657 ) -> 80, ( 4202819658 ) -> 2, ( 4202819652 ) -> 4, ( 4202819648 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 4 : BV:32
=unaliased_memslot.0
1 : 333584 : BV:32
=unaliased_memslot.1
1 : 58 : BV:32
=unaliased_memslot.2
1 : 151560 : BV:32
=unaliased_memslot.4
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2021477009
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 49
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294672064 { -295232 } : BV:32
=symbol.1
1 : 4294839088 { -128208 } : BV:32
=symbol.2
1 : 69948 : BV:32
=dst_symbol_addr.1
1 : 4294839088 { -128208 } : BV:32
=dst_symbol_addr.2
1 : 69948 : BV:32
=dst_symbol_addr.3
1 : 4294672064 { -295232 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 179400 : BV:32
=input_stack_pointer_const
1 : 4294619132 { -348164 } : BV:32
=input.src.llvm-mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 69948 : BV:32
=memlabel-mem-esp_end
1 : 4294619135 { -348161 } : BV:32
=stack.size
1 : 4294467584 { -499712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 69951 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294800063 { -167233 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294967087 { -209 } : BV:32
=memlabel-mem-esp_begin
1 : 151552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294839088 { -128208 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294672064 { -295232 } : BV:32
=input.dst.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 146078 : BV:32
=unaliased_memslot.0
1 : 15046 : BV:32
=unaliased_memslot.1
1 : 47847 : BV:32
=unaliased_memslot.2
1 : 983051 : BV:32
=unaliased_memslot.4
1 : 628795 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1395042484
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294619132 { -348164 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 1192066933467170934830118268320454 : BV:128
=input.dst.exreg.2.2
1 : 15046 : BV:128
=symbol.3
1 : 4294672064 { -295232 } : BV:32
=symbol.1
1 : 4294839088 { -128208 } : BV:32
=symbol.2
1 : 69948 : BV:32
=dst_symbol_addr.1
1 : 4294839088 { -128208 } : BV:32
=dst_symbol_addr.2
1 : 69948 : BV:32
=dst_symbol_addr.3
1 : 4294672064 { -295232 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 179400 : BV:32
=input_stack_pointer_const
1 : 4294619132 { -348164 } : BV:32
=input.src.llvm-mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294619132 { -348164 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 69948 : BV:32
=memlabel-mem-esp_end
1 : 4294619135 { -348161 } : BV:32
=stack.size
1 : 4294467584 { -499712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 69951 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294800063 { -167233 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4294967087 { -209 } : BV:32
=memlabel-mem-esp_begin
1 : 151552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294839088 { -128208 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294672064 { -295232 } : BV:32
=input.dst.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, ( 4294619132 ) -> 200, ( 4294619134 ) -> 2, ( 4294619133 ) -> 188, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 146078 : BV:32
=unaliased_memslot.0
1 : 15046 : BV:32
=unaliased_memslot.1
1 : 47847 : BV:32
=unaliased_memslot.2
1 : 983051 : BV:32
=unaliased_memslot.4
1 : 628795 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1395042484
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 50
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294672064 { -295232 } : BV:32
=symbol.1
1 : 4294839088 { -128208 } : BV:32
=symbol.2
1 : 69948 : BV:32
=dst_symbol_addr.1
1 : 4294839088 { -128208 } : BV:32
=dst_symbol_addr.2
1 : 69948 : BV:32
=dst_symbol_addr.3
1 : 4294672064 { -295232 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 179400 : BV:32
=input_stack_pointer_const
1 : 4294619132 { -348164 } : BV:32
=input.src.llvm-mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 69948 : BV:32
=memlabel-mem-esp_end
1 : 4294619135 { -348161 } : BV:32
=stack.size
1 : 4294467584 { -499712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 69951 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294800063 { -167233 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294967087 { -209 } : BV:32
=memlabel-mem-esp_begin
1 : 151552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294839088 { -128208 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294672064 { -295232 } : BV:32
=input.dst.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 146078 : BV:32
=unaliased_memslot.0
1 : 15046 : BV:32
=unaliased_memslot.1
1 : 47847 : BV:32
=unaliased_memslot.2
1 : 983051 : BV:32
=unaliased_memslot.4
1 : 628795 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1395042484
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294619132 { -348164 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 4982896843421266904700064319001345 : BV:128
=input.dst.exreg.2.1
1 : 1192066933467170934830118268320454 : BV:128
=input.dst.exreg.2.2
1 : 15046 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294672064 { -295232 } : BV:32
=symbol.1
1 : 4294839088 { -128208 } : BV:32
=symbol.2
1 : 69948 : BV:32
=dst_symbol_addr.1
1 : 4294839088 { -128208 } : BV:32
=dst_symbol_addr.2
1 : 69948 : BV:32
=dst_symbol_addr.3
1 : 4294672064 { -295232 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31995 : BV:32
=retaddr_const
1 : 179400 : BV:32
=input_stack_pointer_const
1 : 4294619132 { -348164 } : BV:32
=input.src.llvm-mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, ( 4294800060 ) -> 173, ( 4294800061 ) -> 245, ( 4294800057 ) -> 58, ( 4294800056 ) -> 209, ( 4294800058 ) -> 15, ( 4294800048 ) -> 1, ( 4294800054 ) -> 2, ( 4294800053 ) -> 117, ( 4294800052 ) -> 100, ( 4294800050 ) -> 9, ( 4294800049 ) -> 211, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294619132 { -348164 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 69948 : BV:32
=memlabel-mem-esp_end
1 : 4294619135 { -348161 } : BV:32
=stack.size
1 : 4294467584 { -499712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 69951 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294800063 { -167233 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 628795 : BV:32
=input.src.llvm-%i.0
1 : 31995 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294967072 { -224 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127984 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4294967087 { -209 } : BV:32
=input.src.llvm-%1
1 : 15046 : BV:32
=input.src.llvm-%dec
1 : 31995 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 151552 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294839088 { -128208 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4294800048 { -167248 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%arrayidx
1 : 4294967072 { -224 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%add
1 : 643841 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4294800048 { -167248 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294672064 { -295232 } : BV:32
=input.dst.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, ( 4294619132 ) -> 200, ( 4294800060 ) -> 173, ( 4294800061 ) -> 245, ( 4294800057 ) -> 58, ( 4294800056 ) -> 209, ( 4294619134 ) -> 2, ( 4294800058 ) -> 15, ( 4294619133 ) -> 188, ( 4294800048 ) -> 1, ( 4294800054 ) -> 2, ( 4294800053 ) -> 117, ( 4294800052 ) -> 100, ( 4294800050 ) -> 9, ( 4294800049 ) -> 211, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 69948 ) -> 198, ( 4294967076 ) -> 158, ( 4294967085 ) -> 186, ( 4294967072 ) -> 59, ( 4294967080 ) -> 11, ( 4294967073 ) -> 152, ( 4294967082 ) -> 15, ( 4294967078 ) -> 2, ( 4294967074 ) -> 9, ( 4294967084 ) -> 231, ( 4294967077 ) -> 58, ( 69949 ) -> 58, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 146078 : BV:32
=unaliased_memslot.0
1 : 15046 : BV:32
=unaliased_memslot.1
1 : 47847 : BV:32
=unaliased_memslot.2
1 : 983051 : BV:32
=unaliased_memslot.4
1 : 628795 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1395042484
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 51
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 725586576 : BV:32
=symbol.1
1 : 1409195328 : BV:32
=symbol.2
1 : 1350536704 : BV:32
=dst_symbol_addr.1
1 : 1409195328 : BV:32
=dst_symbol_addr.2
1 : 1350536704 : BV:32
=dst_symbol_addr.3
1 : 725586576 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1350536704 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1350536707 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 725714575 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1409323327 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1409195328 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 725586576 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
307147498
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 725586576 : BV:32
=symbol.1
1 : 1409195328 : BV:32
=symbol.2
1 : 1350536704 : BV:32
=dst_symbol_addr.1
1 : 1409195328 : BV:32
=dst_symbol_addr.2
1 : 1350536704 : BV:32
=dst_symbol_addr.3
1 : 725586576 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1350536704 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1350536707 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 725714575 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1409323327 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1409195328 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 725586576 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
307147498
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 52
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2052854602
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 809631740 : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 809631740 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2052854602
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 53
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 6 , m_adder -> 51)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 6 , m_adder -> 51)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
676991355
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 166773683227808754276270314249487085931 : BV:128
=input.dst.exreg.2.2
1 : 2104979819 : BV:128
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 6 , m_adder -> 51)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 6 , m_adder -> 51)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
676991355
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 54
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2155811856 { -2139155440 } : BV:32
=symbol.1
1 : 3758015792 { -536951504 } : BV:32
=symbol.2
1 : 3749648444 { -545318852 } : BV:32
=dst_symbol_addr.1
1 : 3758015792 { -536951504 } : BV:32
=dst_symbol_addr.2
1 : 3749648444 { -545318852 } : BV:32
=dst_symbol_addr.3
1 : 2155811856 { -2139155440 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1409286140 : BV:32
=input.src.llvm-mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3749648444 { -545318852 } : BV:32
=memlabel-mem-esp_end
1 : 1409286143 : BV:32
=stack.size
1 : 603979776 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3749648447 { -545318849 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2155939855 { -2139027441 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758143791 { -536823505 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758015792 { -536951504 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2155811856 { -2139155440 } : BV:32
=input.dst.mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692812949
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1409286140 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2155811856 { -2139155440 } : BV:32
=symbol.1
1 : 3758015792 { -536951504 } : BV:32
=symbol.2
1 : 3749648444 { -545318852 } : BV:32
=dst_symbol_addr.1
1 : 3758015792 { -536951504 } : BV:32
=dst_symbol_addr.2
1 : 3749648444 { -545318852 } : BV:32
=dst_symbol_addr.3
1 : 2155811856 { -2139155440 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1409286140 : BV:32
=input.src.llvm-mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1409286140 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3749648444 { -545318852 } : BV:32
=memlabel-mem-esp_end
1 : 1409286143 : BV:32
=stack.size
1 : 603979776 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3749648447 { -545318849 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2155939855 { -2139027441 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3758143791 { -536823505 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758015792 { -536951504 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2155811856 { -2139155440 } : BV:32
=input.dst.mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3758143780 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1692812949
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 55
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4223665152 { -71302144 } : BV:32
=symbol.1
1 : 4225700864 { -69266432 } : BV:32
=symbol.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.1
1 : 4225700864 { -69266432 } : BV:32
=dst_symbol_addr.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.3
1 : 4223665152 { -71302144 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3816837116 { -478130180 } : BV:32
=input.src.llvm-mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4224778236 { -70189060 } : BV:32
=memlabel-mem-esp_end
1 : 3816837119 { -478130177 } : BV:32
=stack.size
1 : 3816816640 { -478150656 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4224778239 { -70189057 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223793151 { -71174145 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4225828863 { -69138433 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4225700864 { -69266432 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223665152 { -71302144 } : BV:32
=input.dst.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 4294967294 { -2 } : BV:32
=unaliased_memslot.1
1 : 4294967293 { -3 } : BV:32
=unaliased_memslot.2
1 : 4294901760 { -65536 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535855657
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3816837116 { -478130180 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 340282366841710300930663525760219742206 { -79228162532711081671548469250 } : BV:128
=input.dst.exreg.2.2
1 : 4294967294 : BV:128
=symbol.3
1 : 4223665152 { -71302144 } : BV:32
=symbol.1
1 : 4225700864 { -69266432 } : BV:32
=symbol.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.1
1 : 4225700864 { -69266432 } : BV:32
=dst_symbol_addr.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.3
1 : 4223665152 { -71302144 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3816837116 { -478130180 } : BV:32
=input.src.llvm-mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3816837116 { -478130180 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4224778236 { -70189060 } : BV:32
=memlabel-mem-esp_end
1 : 3816837119 { -478130177 } : BV:32
=stack.size
1 : 3816816640 { -478150656 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4224778239 { -70189057 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223793151 { -71174145 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4225828863 { -69138433 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4225700864 { -69266432 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223665152 { -71302144 } : BV:32
=input.dst.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 3816837119 ) -> 0, ( 4225828860 ) -> 253, ( 3816837116 ) -> 0, ( 3816837117 ) -> 0, ( 3816837118 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 4294967294 { -2 } : BV:32
=unaliased_memslot.1
1 : 4294967293 { -3 } : BV:32
=unaliased_memslot.2
1 : 4294901760 { -65536 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535855657
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 56
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4223665152 { -71302144 } : BV:32
=symbol.1
1 : 4225700864 { -69266432 } : BV:32
=symbol.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.1
1 : 4225700864 { -69266432 } : BV:32
=dst_symbol_addr.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.3
1 : 4223665152 { -71302144 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3816837116 { -478130180 } : BV:32
=input.src.llvm-mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4224778236 { -70189060 } : BV:32
=memlabel-mem-esp_end
1 : 3816837119 { -478130177 } : BV:32
=stack.size
1 : 3816816640 { -478150656 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4224778239 { -70189057 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223793151 { -71174145 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4225828863 { -69138433 } : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4225700864 { -69266432 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223665152 { -71302144 } : BV:32
=input.dst.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 4294967294 { -2 } : BV:32
=unaliased_memslot.1
1 : 4294967293 { -3 } : BV:32
=unaliased_memslot.2
1 : 4294901760 { -65536 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535855657
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3816837116 { -478130180 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 340282366604025813369423487430901628925 { -316912650093951120000866582531 } : BV:128
=input.dst.exreg.2.1
1 : 340282366841710300930663525760219742206 { -79228162532711081671548469250 } : BV:128
=input.dst.exreg.2.2
1 : 4294967294 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4223665152 { -71302144 } : BV:32
=symbol.1
1 : 4225700864 { -69266432 } : BV:32
=symbol.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.1
1 : 4225700864 { -69266432 } : BV:32
=dst_symbol_addr.2
1 : 4224778236 { -70189060 } : BV:32
=dst_symbol_addr.3
1 : 4223665152 { -71302144 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31995 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3816837116 { -478130180 } : BV:32
=input.src.llvm-mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, ( 4223793144 ) -> 253, ( 4223793140 ) -> 254, ( 4223793142 ) -> 254, ( 4223793148 ) -> 251, ( 4223793136 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3816837116 { -478130180 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4224778236 { -70189060 } : BV:32
=memlabel-mem-esp_end
1 : 3816837119 { -478130177 } : BV:32
=stack.size
1 : 3816816640 { -478150656 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4224778239 { -70189057 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223793151 { -71174145 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0
1 : 31995 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4225828848 { -69138448 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127984 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4225828863 { -69138433 } : BV:32
=input.src.llvm-%1
1 : 4294967294 { -2 } : BV:32
=input.src.llvm-%dec
1 : 31995 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 20480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4225700864 { -69266432 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4223793136 { -71174160 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%arrayidx
1 : 4225828848 { -69138448 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%add
1 : 4294967293 { -3 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4223793136 { -71174160 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223665152 { -71302144 } : BV:32
=input.dst.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 3816837119 ) -> 0, ( 4225828860 ) -> 253, ( 3816837116 ) -> 0, ( 3816837117 ) -> 0, ( 4223793144 ) -> 253, ( 4223793140 ) -> 254, ( 4223793142 ) -> 254, ( 3816837118 ) -> 0, ( 4223793148 ) -> 251, ( 4223793136 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4225828852 ) -> 0, ( 4224778236 ) -> 254, ( 4225828853 ) -> 0, ( 4225828860 ) -> 253, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 4294967294 { -2 } : BV:32
=unaliased_memslot.1
1 : 4294967293 { -3 } : BV:32
=unaliased_memslot.2
1 : 4294901760 { -65536 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
535855657
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 57
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2005385391
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 809541628 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 809541628 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2005385391
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 58
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2005385391
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 809541628 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 18446744073709551616 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2281624592 { -2013342704 } : BV:32
=symbol.1
1 : 3758025008 { -536942288 } : BV:32
=symbol.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.1
1 : 3758025008 { -536942288 } : BV:32
=dst_symbol_addr.2
1 : 3724499004 { -570468292 } : BV:32
=dst_symbol_addr.3
1 : 2281624592 { -2013342704 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31995 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809541628 : BV:32
=input.src.llvm-mem
1 : (( 2281752584 ) -> 1, ( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 809541628 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3724499004 { -570468292 } : BV:32
=memlabel-mem-esp_end
1 : 809541631 : BV:32
=stack.size
1 : 4235264 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3724499007 { -570468289 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281752591 { -2013214705 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31995 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3758152992 { -536814304 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127984 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3758153007 { -536814289 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31995 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758025008 { -536942288 } : BV:32
=input.src.llvm-%arrayidx1
1 : 2281752576 { -2013214720 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%arrayidx
1 : 3758152992 { -536814304 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127984 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 2281752576 { -2013214720 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127984 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281624592 { -2013342704 } : BV:32
=input.dst.mem
1 : (( 2281752584 ) -> 1, ( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3758153000 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2005385391
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 59
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
318324966
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 809631740 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 1 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 809631740 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
318324966
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 60
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1226064959
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 809631740 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 809631740 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1226064959
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 61
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1145336947
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=src.llvm-%i.0
1 : 31999 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127984 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 809631740 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2281649168 { -2013318128 } : BV:32
=symbol.1
1 : 3758049584 { -536917712 } : BV:32
=symbol.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.1
1 : 3758049584 { -536917712 } : BV:32
=dst_symbol_addr.2
1 : 2684303420 { -1610663876 } : BV:32
=dst_symbol_addr.3
1 : 2281649168 { -2013318128 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31999 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 809631740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 809631740 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2684303420 { -1610663876 } : BV:32
=memlabel-mem-esp_end
1 : 809631743 : BV:32
=stack.size
1 : 4325376 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2684303423 { -1610663873 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2281777167 { -2013190129 } : BV:32
=input.src.llvm-%i.0
1 : 31999 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3758177583 { -536789713 } : BV:32
=memlabel-mem-esp_begin
1 : 805306368 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758049584 { -536917712 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2281649168 { -2013318128 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1145336947
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 62
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2072928252 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147446272 : BV:32
=symbol.1
1 : 2143256576 : BV:32
=symbol.2
1 : 939486752 : BV:32
=dst_symbol_addr.1
1 : 2143256576 : BV:32
=dst_symbol_addr.2
1 : 939486752 : BV:32
=dst_symbol_addr.3
1 : 2147446272 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16387 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2072928252 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2072928252 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 939486752 : BV:32
=memlabel-mem-esp_end
1 : 2072928255 : BV:32
=stack.size
1 : 369872896 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 939486755 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147574271 { -2147393025 } : BV:32
=input.src.llvm-%i.0
1 : 16387 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 2143384575 : BV:32
=memlabel-mem-esp_begin
1 : 1703055360 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2143256576 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147446272 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
261360755
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65520 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2072928252 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2147446272 : BV:32
=symbol.1
1 : 2143256576 : BV:32
=symbol.2
1 : 939486752 : BV:32
=dst_symbol_addr.1
1 : 2143256576 : BV:32
=dst_symbol_addr.2
1 : 939486752 : BV:32
=dst_symbol_addr.3
1 : 2147446272 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16383 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2072928252 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2072928252 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 939486752 : BV:32
=memlabel-mem-esp_end
1 : 2072928255 : BV:32
=stack.size
1 : 369872896 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 939486755 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147574271 { -2147393025 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16383 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 2143322112 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 65536 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 2143384575 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 16383 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1703055360 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2143256576 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147511808 { -2147455488 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%arrayidx
1 : 2143322112 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 2147511808 { -2147455488 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 65536 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147446272 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
261360755
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 63
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 918552572 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3062727680 { -1232239616 } : BV:32
=symbol.1
1 : 3988518848 { -306448448 } : BV:32
=symbol.2
1 : 919041020 : BV:32
=dst_symbol_addr.1
1 : 3988518848 { -306448448 } : BV:32
=dst_symbol_addr.2
1 : 919041020 : BV:32
=dst_symbol_addr.3
1 : 3062727680 { -1232239616 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8195 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 918552572 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 918552572 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 919041020 : BV:32
=memlabel-mem-esp_end
1 : 918552575 : BV:32
=stack.size
1 : 918552576 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 919041023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3062855679 { -1232111617 } : BV:32
=input.src.llvm-%i.0
1 : 8195 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3988646847 { -306320449 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3988518848 { -306448448 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3062727680 { -1232239616 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2145254786
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32752 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 918552572 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3062727680 { -1232239616 } : BV:32
=symbol.1
1 : 3988518848 { -306448448 } : BV:32
=symbol.2
1 : 919041020 : BV:32
=dst_symbol_addr.1
1 : 3988518848 { -306448448 } : BV:32
=dst_symbol_addr.2
1 : 919041020 : BV:32
=dst_symbol_addr.3
1 : 3062727680 { -1232239616 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8191 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 918552572 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 918552572 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 919041020 : BV:32
=memlabel-mem-esp_end
1 : 918552575 : BV:32
=stack.size
1 : 918552576 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 919041023 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3062855679 { -1232111617 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8191 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3988551616 { -306415680 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 32768 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3988646847 { -306320449 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 8191 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3988518848 { -306448448 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3062760448 { -1232206848 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%arrayidx
1 : 3988551616 { -306415680 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 3062760448 { -1232206848 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 32768 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3062727680 { -1232239616 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2145254786
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 64
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 820822012 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 820890624 : BV:32
=symbol.1
1 : 3296351232 { -998616064 } : BV:32
=symbol.2
1 : 820887544 : BV:32
=dst_symbol_addr.1
1 : 3296351232 { -998616064 } : BV:32
=dst_symbol_addr.2
1 : 820887544 : BV:32
=dst_symbol_addr.3
1 : 820890624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4099 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 820822012 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 820822012 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 820887544 : BV:32
=memlabel-mem-esp_end
1 : 820822015 : BV:32
=stack.size
1 : 820822016 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 820887547 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 821018623 : BV:32
=input.src.llvm-%i.0
1 : 4099 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3296479231 { -998488065 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3296351232 { -998616064 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 820890624 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1489467046
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16368 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 820822012 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 820890624 : BV:32
=symbol.1
1 : 3296351232 { -998616064 } : BV:32
=symbol.2
1 : 820887544 : BV:32
=dst_symbol_addr.1
1 : 3296351232 { -998616064 } : BV:32
=dst_symbol_addr.2
1 : 820887544 : BV:32
=dst_symbol_addr.3
1 : 820890624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4095 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 820822012 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 820822012 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 820887544 : BV:32
=memlabel-mem-esp_end
1 : 820822015 : BV:32
=stack.size
1 : 820822016 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 820887547 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 821018623 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4095 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3296367616 { -998599680 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 16384 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3296479231 { -998488065 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 4095 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3296351232 { -998616064 } : BV:32
=input.src.llvm-%arrayidx1
1 : 820907008 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%arrayidx
1 : 3296367616 { -998599680 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 820907008 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 16384 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 820890624 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1489467046
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 65
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294963196 { -4100 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147459600 : BV:32
=symbol.1
1 : 37224064 : BV:32
=symbol.2
1 : 4294967284 { -12 } : BV:32
=dst_symbol_addr.1
1 : 37224064 : BV:32
=dst_symbol_addr.2
1 : 4294967284 { -12 } : BV:32
=dst_symbol_addr.3
1 : 2147459600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2051 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967284 { -12 } : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=stack.size
1 : 12288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967287 { -9 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147587599 { -2147379697 } : BV:32
=input.src.llvm-%i.0
1 : 2051 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 37352063 : BV:32
=memlabel-mem-esp_begin
1 : 4294950912 { -16384 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 37224064 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147459600 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1481564119
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8176 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294963196 { -4100 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2147459600 : BV:32
=symbol.1
1 : 37224064 : BV:32
=symbol.2
1 : 4294967284 { -12 } : BV:32
=dst_symbol_addr.1
1 : 37224064 : BV:32
=dst_symbol_addr.2
1 : 4294967284 { -12 } : BV:32
=dst_symbol_addr.3
1 : 2147459600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2047 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967284 { -12 } : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=stack.size
1 : 12288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967287 { -9 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147587599 { -2147379697 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2047 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 37232256 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 8192 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 37352063 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 2047 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 4294950912 { -16384 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 37224064 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147467792 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%arrayidx
1 : 37232256 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 2147467792 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 8192 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147459600 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1481564119
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 66
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294938620 { -28676 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1610518368 : BV:32
=symbol.1
1 : 89902352 : BV:32
=symbol.2
1 : 25167384 : BV:32
=dst_symbol_addr.1
1 : 89902352 : BV:32
=dst_symbol_addr.2
1 : 25167384 : BV:32
=dst_symbol_addr.3
1 : 1610518368 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1027 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294938620 { -28676 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294938620 { -28676 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 25167384 : BV:32
=memlabel-mem-esp_end
1 : 4294938623 { -28673 } : BV:32
=stack.size
1 : 2684276736 { -1610690560 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 25167387 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1610646367 : BV:32
=input.src.llvm-%i.0
1 : 1027 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 90030351 : BV:32
=memlabel-mem-esp_begin
1 : 1610661888 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 89902352 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1610518368 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
221672001
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4080 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294938620 { -28676 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1610518368 : BV:32
=symbol.1
1 : 89902352 : BV:32
=symbol.2
1 : 25167384 : BV:32
=dst_symbol_addr.1
1 : 89902352 : BV:32
=dst_symbol_addr.2
1 : 25167384 : BV:32
=dst_symbol_addr.3
1 : 1610518368 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1023 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294938620 { -28676 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294938620 { -28676 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 25167384 : BV:32
=memlabel-mem-esp_end
1 : 4294938623 { -28673 } : BV:32
=stack.size
1 : 2684276736 { -1610690560 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 25167387 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1610646367 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1023 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 89906448 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 4096 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 90030351 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 1023 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1610661888 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 89902352 : BV:32
=input.src.llvm-%arrayidx1
1 : 1610522464 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%arrayidx
1 : 89906448 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1610522464 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1610518368 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
221672001
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 67
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1925947388 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1926871552 : BV:32
=symbol.1
1 : 4076344832 { -218622464 } : BV:32
=symbol.2
1 : 1926802936 : BV:32
=dst_symbol_addr.1
1 : 4076344832 { -218622464 } : BV:32
=dst_symbol_addr.2
1 : 1926802936 : BV:32
=dst_symbol_addr.3
1 : 1926871552 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 515 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1925947388 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1925947388 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1926802936 : BV:32
=memlabel-mem-esp_end
1 : 1925947391 : BV:32
=stack.size
1 : 1925685248 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1926802939 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1926999551 : BV:32
=input.src.llvm-%i.0
1 : 515 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4076472831 { -218494465 } : BV:32
=memlabel-mem-esp_begin
1 : 262144 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4076344832 { -218622464 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1926871552 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014041792
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2032 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1925947388 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1926871552 : BV:32
=symbol.1
1 : 4076344832 { -218622464 } : BV:32
=symbol.2
1 : 1926802936 : BV:32
=dst_symbol_addr.1
1 : 4076344832 { -218622464 } : BV:32
=dst_symbol_addr.2
1 : 1926802936 : BV:32
=dst_symbol_addr.3
1 : 1926871552 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 511 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1925947388 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1925947388 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1926802936 : BV:32
=memlabel-mem-esp_end
1 : 1925947391 : BV:32
=stack.size
1 : 1925685248 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1926802939 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1926999551 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 511 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4076346880 { -218620416 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 2048 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4076472831 { -218494465 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 511 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 262144 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4076344832 { -218622464 } : BV:32
=input.src.llvm-%arrayidx1
1 : 1926873600 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%arrayidx
1 : 4076346880 { -218620416 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1926873600 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 2048 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1926871552 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014041792
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 68
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3758030844 { -536936452 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2550078464 { -1744888832 } : BV:32
=symbol.1
1 : 1166927872 : BV:32
=symbol.2
1 : 26078208 : BV:32
=dst_symbol_addr.1
1 : 1166927872 : BV:32
=dst_symbol_addr.2
1 : 26078208 : BV:32
=dst_symbol_addr.3
1 : 2550078464 { -1744888832 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 259 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3758030844 { -536936452 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3758030844 { -536936452 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 26078208 : BV:32
=memlabel-mem-esp_end
1 : 3758030847 { -536936449 } : BV:32
=stack.size
1 : 1074429952 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 26078211 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2550206463 { -1744760833 } : BV:32
=input.src.llvm-%i.0
1 : 259 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1167055871 : BV:32
=memlabel-mem-esp_begin
1 : 2683600896 { -1611366400 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1166927872 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2550078464 { -1744888832 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1591481434
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1008 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3758030844 { -536936452 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2550078464 { -1744888832 } : BV:32
=symbol.1
1 : 1166927872 : BV:32
=symbol.2
1 : 26078208 : BV:32
=dst_symbol_addr.1
1 : 1166927872 : BV:32
=dst_symbol_addr.2
1 : 26078208 : BV:32
=dst_symbol_addr.3
1 : 2550078464 { -1744888832 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 255 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3758030844 { -536936452 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3758030844 { -536936452 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 26078208 : BV:32
=memlabel-mem-esp_end
1 : 3758030847 { -536936449 } : BV:32
=stack.size
1 : 1074429952 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 26078211 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2550206463 { -1744760833 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 255 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1166928896 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 1024 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1167055871 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 255 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2683600896 { -1611366400 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1166927872 : BV:32
=input.src.llvm-%arrayidx1
1 : 2550079488 { -1744887808 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%arrayidx
1 : 1166928896 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 2550079488 { -1744887808 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 1024 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2550078464 { -1744888832 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1591481434
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 69
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2747269116 { -1547698180 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3148433408 { -1146533888 } : BV:32
=symbol.1
1 : 3148566528 { -1146400768 } : BV:32
=symbol.2
1 : 2750135288 { -1544832008 } : BV:32
=dst_symbol_addr.1
1 : 3148566528 { -1146400768 } : BV:32
=dst_symbol_addr.2
1 : 2750135288 { -1544832008 } : BV:32
=dst_symbol_addr.3
1 : 3148433408 { -1146533888 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 131 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2747269116 { -1547698180 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2747269116 { -1547698180 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2750135288 { -1544832008 } : BV:32
=memlabel-mem-esp_end
1 : 2747269119 { -1547698177 } : BV:32
=stack.size
1 : 2747269120 { -1547698176 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2750135291 { -1544832005 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3148561407 { -1146405889 } : BV:32
=input.src.llvm-%i.0
1 : 131 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3148694527 { -1146272769 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3148566528 { -1146400768 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3148433408 { -1146533888 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1982840553
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 496 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2747269116 { -1547698180 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3148433408 { -1146533888 } : BV:32
=symbol.1
1 : 3148566528 { -1146400768 } : BV:32
=symbol.2
1 : 2750135288 { -1544832008 } : BV:32
=dst_symbol_addr.1
1 : 3148566528 { -1146400768 } : BV:32
=dst_symbol_addr.2
1 : 2750135288 { -1544832008 } : BV:32
=dst_symbol_addr.3
1 : 3148433408 { -1146533888 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 127 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2747269116 { -1547698180 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2747269116 { -1547698180 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2750135288 { -1544832008 } : BV:32
=memlabel-mem-esp_end
1 : 2747269119 { -1547698177 } : BV:32
=stack.size
1 : 2747269120 { -1547698176 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2750135291 { -1544832005 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3148561407 { -1146405889 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 127 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3148567040 { -1146400256 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 512 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3148694527 { -1146272769 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 127 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3148566528 { -1146400768 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3148433920 { -1146533376 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%arrayidx
1 : 3148567040 { -1146400256 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 3148433920 { -1146533376 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 512 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3148433408 { -1146533888 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1982840553
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 70
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294963196 { -4100 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 373350128 : BV:32
=symbol.1
1 : 213442320 : BV:32
=symbol.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.1
1 : 213442320 : BV:32
=dst_symbol_addr.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.3
1 : 373350128 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 67 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=stack.size
1 : 3921481728 { -373485568 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 373478127 : BV:32
=input.src.llvm-%i.0
1 : 67 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 213570319 : BV:32
=memlabel-mem-esp_begin
1 : 373481472 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 213442320 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 373350128 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
45991403
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 240 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294963196 { -4100 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 373350128 : BV:32
=symbol.1
1 : 213442320 : BV:32
=symbol.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.1
1 : 213442320 : BV:32
=dst_symbol_addr.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.3
1 : 373350128 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 63 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=stack.size
1 : 3921481728 { -373485568 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 373478127 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 63 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 213442576 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 256 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 213570319 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 63 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 373481472 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 213442320 : BV:32
=input.src.llvm-%arrayidx1
1 : 373350384 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%arrayidx
1 : 213442576 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 373350384 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 256 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 373350128 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
45991403
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 71
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221151740 { -1073815556 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3221157808 { -1073809488 } : BV:32
=symbol.1
1 : 4294837280 { -130016 } : BV:32
=symbol.2
1 : 3237904384 { -1057062912 } : BV:32
=dst_symbol_addr.1
1 : 4294837280 { -130016 } : BV:32
=dst_symbol_addr.2
1 : 3237904384 { -1057062912 } : BV:32
=dst_symbol_addr.3
1 : 3221157808 { -1073809488 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 35 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221151740 { -1073815556 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221151740 { -1073815556 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3237904384 { -1057062912 } : BV:32
=memlabel-mem-esp_end
1 : 3221151743 { -1073815553 } : BV:32
=stack.size
1 : 3221151744 { -1073815552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3237904387 { -1057062909 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221285807 { -1073681489 } : BV:32
=input.src.llvm-%i.0
1 : 35 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4294965279 { -2017 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837280 { -130016 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221157808 { -1073809488 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1645255251
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221151740 { -1073815556 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3221157808 { -1073809488 } : BV:32
=symbol.1
1 : 4294837280 { -130016 } : BV:32
=symbol.2
1 : 3237904384 { -1057062912 } : BV:32
=dst_symbol_addr.1
1 : 4294837280 { -130016 } : BV:32
=dst_symbol_addr.2
1 : 3237904384 { -1057062912 } : BV:32
=dst_symbol_addr.3
1 : 3221157808 { -1073809488 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221151740 { -1073815556 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221151740 { -1073815556 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3237904384 { -1057062912 } : BV:32
=memlabel-mem-esp_end
1 : 3221151743 { -1073815553 } : BV:32
=stack.size
1 : 3221151744 { -1073815552 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3237904387 { -1057062909 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221285807 { -1073681489 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294837408 { -129888 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 128 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4294965279 { -2017 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294837280 { -130016 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3221157936 { -1073809360 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%arrayidx
1 : 4294837408 { -129888 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 3221157936 { -1073809360 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 128 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221157808 { -1073809488 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1645255251
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 72
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 134217724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147483584 : BV:32
=symbol.1
1 : 2285938496 { -2009028800 } : BV:32
=symbol.2
1 : 146895800 : BV:32
=dst_symbol_addr.1
1 : 2285938496 { -2009028800 } : BV:32
=dst_symbol_addr.2
1 : 146895800 : BV:32
=dst_symbol_addr.3
1 : 2147483584 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 19 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 134217724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 134217724 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 146895800 : BV:32
=memlabel-mem-esp_end
1 : 134217727 : BV:32
=stack.size
1 : 134217728 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 146895803 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147611583 { -2147355713 } : BV:32
=input.src.llvm-%i.0
1 : 19 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 2286066495 { -2008900801 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2285938496 { -2009028800 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147483584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2123698023
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 134217724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2147483584 : BV:32
=symbol.1
1 : 2285938496 { -2009028800 } : BV:32
=symbol.2
1 : 146895800 : BV:32
=dst_symbol_addr.1
1 : 2285938496 { -2009028800 } : BV:32
=dst_symbol_addr.2
1 : 146895800 : BV:32
=dst_symbol_addr.3
1 : 2147483584 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 15 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 134217724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 134217724 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 146895800 : BV:32
=memlabel-mem-esp_end
1 : 134217727 : BV:32
=stack.size
1 : 134217728 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 146895803 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147611583 { -2147355713 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 15 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 2285938560 { -2009028736 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 64 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 2286066495 { -2008900801 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 15 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2285938496 { -2009028800 } : BV:32
=input.src.llvm-%arrayidx1
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%arrayidx
1 : 2285938560 { -2009028736 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 64 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147483584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2123698023
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 73
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294963196 { -4100 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342177248 : BV:32
=symbol.1
1 : 581959680 : BV:32
=symbol.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.1
1 : 581959680 : BV:32
=dst_symbol_addr.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.3
1 : 1342177248 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 11 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=stack.size
1 : 2952654848 { -1342312448 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342305247 : BV:32
=input.src.llvm-%i.0
1 : 11 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%hidden-reg
1 : 0 : BV:32
=input.src.llvm-callee-save.0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 582087679 : BV:32
=memlabel-mem-esp_begin
1 : 1342308352 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 581959680 : BV:32
=input.src.llvm-callee-save.1
1 : 0 : BV:32
=input.src.llvm-callee-save.2
1 : 0 : BV:32
=input.src.llvm-callee-save.3
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342177248 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
684723783
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294963196 { -4100 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342177248 : BV:32
=symbol.1
1 : 581959680 : BV:32
=symbol.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.1
1 : 581959680 : BV:32
=dst_symbol_addr.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.3
1 : 1342177248 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 7 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=stack.size
1 : 2952654848 { -1342312448 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342305247 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 7 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 581959712 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 582087679 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 7 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1342308352 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 581959680 : BV:32
=input.src.llvm-%arrayidx1
1 : 1342177280 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%arrayidx
1 : 581959712 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1342177280 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 32 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342177248 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
684723783
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 74
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294963196 { -4100 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1342177248 : BV:32
=symbol.1
1 : 581959680 : BV:32
=symbol.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.1
1 : 581959680 : BV:32
=dst_symbol_addr.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.3
1 : 1342177248 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 11 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=stack.size
1 : 2952654848 { -1342312448 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342305247 : BV:32
=input.src.llvm-%i.0
1 : 11 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%hidden-reg
1 : 0 : BV:32
=input.src.llvm-callee-save.0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 582087679 : BV:32
=memlabel-mem-esp_begin
1 : 1342308352 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 581959680 : BV:32
=input.src.llvm-callee-save.1
1 : 0 : BV:32
=input.src.llvm-callee-save.2
1 : 0 : BV:32
=input.src.llvm-callee-save.3
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342177248 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
684723783
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.graph_edge_composition
((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s1112.0 : MEMLABEL
14 : symbol.1 : BV:32
15 : bvadd(14, 11) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 13, 15, 16, 17) : BV:32
19 : mlvar.llvm.s1112.1 : MEMLABEL
20 : symbol.2 : BV:32
21 : select(1, 19, 20, 16, 17) : BV:32
22 : bvadd(18, 21) : BV:32
23 : store(1, 2, 12, 22, 16, 17) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s1112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvadd(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*(((((  %1 = load i32, i32* @val, align 4, !dbg !22*  %1 = load i32, i32* @val, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %dec = add nsw i32 %i.0, -1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 31999, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvextract(15, 12, 13) : BV:32
25 : bvextract(18, 12, 13) : BV:32
26 : bvadd(24, 25) : BV:32
27 : 0 : BV:31
28 : bvconcat(27, 9) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvextract(29, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : donotsimplify_using_solver_subsign(31, 14, 16) : BOOL
33 : bvextract(15, 12, 12) : BV:1
34 : eq(33, 9) : BOOL
35 : bvextract(18, 12, 12) : BV:1
36 : eq(35, 9) : BOOL
37 : iff(34, 36) : BOOL
38 : xor(34, 31) : BOOL
39 : and(37, 38) : BOOL
40 : donotsimplify_using_solver_suboverflow(39, 14, 16) : BOOL
41 : iff(32, 40) : BOOL
42 : not(41) : BOOL
43 : or(23, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : 16 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
87 : bvextract(86, 2, 3) : BV:31
88 : 4294967280 { -16 } : BV:32
89 : bvuge(23, 88) : BOOL
90 : not(89) : BOOL
91 : ite(90, 9, 10) : BV:1
92 : bvconcat(87, 91) : BV:32
93 : bvextract(92, 2, 13) : BV:27
94 : bvzero_ext(23, 3) : BV:33
95 : bvnot(88) : BV:32
96 : bvzero_ext(95, 3) : BV:33
97 : bvadd(94, 96) : BV:33
98 : bvadd(97, 20) : BV:33
99 : bvextract(98, 2, 22) : BV:32
100 : bvextract(99, 24, 24) : BV:1
101 : eq(100, 9) : BOOL
102 : bvextract(94, 24, 24) : BV:1
103 : eq(102, 9) : BOOL
104 : xor(101, 103) : BOOL
105 : ite(104, 9, 10) : BV:1
106 : bvextract(92, 31, 22) : BV:4
107 : bvconcat(105, 106) : BV:5
108 : bvconcat(93, 107) : BV:32
109 : bvextract(108, 2, 35) : BV:20
110 : bvextract(94, 2, 2) : BV:1
111 : eq(110, 9) : BOOL
112 : bvextract(96, 2, 2) : BV:1
113 : eq(112, 9) : BOOL
114 : iff(111, 113) : BOOL
115 : bvextract(94, 2, 22) : BV:32
116 : bvextract(96, 2, 22) : BV:32
117 : bvadd(115, 116) : BV:32
118 : bvadd(117, 46) : BV:32
119 : bvextract(118, 2, 2) : BV:1
120 : eq(119, 9) : BOOL
121 : xor(111, 120) : BOOL
122 : and(114, 121) : BOOL
123 : donotsimplify_using_solver_suboverflow(122, 23, 88) : BOOL
124 : ite(123, 9, 10) : BV:1
125 : bvextract(108, 54, 22) : BV:11
126 : bvconcat(124, 125) : BV:12
127 : bvconcat(109, 126) : BV:32
128 : bvextract(127, 2, 58) : BV:24
129 : donotsimplify_using_solver_subsign(120, 23, 88) : BOOL
130 : ite(129, 9, 10) : BV:1
131 : bvextract(127, 62, 22) : BV:7
132 : bvconcat(130, 131) : BV:8
133 : bvconcat(128, 132) : BV:32
134 : bvextract(133, 2, 66) : BV:25
135 : eq(99, 19) : BOOL
136 : donotsimplify_using_solver_subzero(135, 23, 88) : BOOL
137 : ite(136, 9, 10) : BV:1
138 : bvextract(133, 13, 22) : BV:6
139 : bvconcat(137, 138) : BV:7
140 : bvconcat(134, 139) : BV:32
141 : bvextract(140, 2, 31) : BV:29
142 : bvextract(140, 3, 22) : BV:2
143 : bvconcat(10, 142) : BV:3
144 : bvconcat(141, 143) : BV:32
145 : bvextract(144, 2, 78) : BV:21
146 : bvextract(86, 54, 54) : BV:1
147 : eq(146, 9) : BOOL
148 : ite(147, 9, 10) : BV:1
149 : bvextract(144, 83, 22) : BV:10
150 : bvconcat(148, 149) : BV:11
151 : bvconcat(145, 150) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : 0 : BV:1
25 : ite(23, 9, 24) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 9, 25) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : 4294967280 { -16 } : BV:32
16 : bvuge(14, 15) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvuge(14, 16) : BOOL
26 : and(24, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : not(23) : BOOL
25 : bvextract(15, 12, 13) : BV:32
26 : bvextract(18, 12, 13) : BV:32
27 : bvadd(25, 26) : BV:32
28 : 0 : BV:31
29 : bvconcat(28, 9) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvextract(30, 12, 12) : BV:1
32 : eq(31, 9) : BOOL
33 : donotsimplify_using_solver_subsign(32, 14, 16) : BOOL
34 : bvextract(15, 12, 12) : BV:1
35 : eq(34, 9) : BOOL
36 : bvextract(18, 12, 12) : BV:1
37 : eq(36, 9) : BOOL
38 : iff(35, 37) : BOOL
39 : xor(35, 32) : BOOL
40 : and(38, 39) : BOOL
41 : donotsimplify_using_solver_suboverflow(40, 14, 16) : BOOL
42 : iff(33, 41) : BOOL
43 : and(24, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 9, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : 4294967280 { -16 } : BV:32
17 : bvnot(16) : BV:32
18 : bvzero_ext(17, 2) : BV:33
19 : bvadd(15, 18) : BV:33
20 : bvadd(19, 10) : BV:33
21 : bvextract(20, 12, 13) : BV:32
22 : eq(21, 8) : BOOL
23 : donotsimplify_using_solver_subzero(22, 14, 16) : BOOL
24 : bvuge(14, 16) : BOOL
25 : not(24) : BOOL
26 : or(23, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 9, 27) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : not(36) : BOOL
38 : 0 : BV:1
39 : ite(37, 9, 38) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvnot(6) : BV:32
8 : bvzero_ext(7, 4) : BV:33
9 : bvadd(5, 8) : BV:33
10 : 0 : BV:32
11 : 1 : BV:1
12 : bvconcat(10, 11) : BV:33
13 : bvadd(9, 12) : BV:33
14 : 31 : INT
15 : 0 : INT
16 : bvextract(13, 14, 15) : BV:32
17 : dst_symbol_addr.3 : BV:32
18 : 1 : BV:64
19 : bvextract(18, 14, 15) : BV:32
20 : bvmul(17, 19) : BV:32
21 : 16 : BV:64
22 : bvextract(21, 14, 15) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvadd(16, 23) : BV:32
25 : mlvar.dst.1 : MEMLABEL
26 : dst_symbol_addr.1 : BV:32
27 : bvadd(3, 26) : BV:32
28 : 16 : INT
29 : 0 : BOOL
30 : select(1, 25, 27, 28, 29) : BV:128
31 : bvextract(30, 14, 15) : BV:32
32 : 63 : INT
33 : 32 : INT
34 : bvextract(30, 32, 33) : BV:32
35 : bvconcat(31, 34) : BV:64
36 : 95 : INT
37 : 64 : INT
38 : bvextract(30, 36, 37) : BV:32
39 : 127 : INT
40 : 96 : INT
41 : bvextract(30, 39, 40) : BV:32
42 : bvconcat(38, 41) : BV:64
43 : bvconcat(35, 42) : BV:128
44 : bvextract(43, 39, 40) : BV:32
45 : input.dst.exreg.2.1 : BV:128
46 : bvextract(45, 39, 40) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(43, 36, 37) : BV:32
49 : bvextract(45, 36, 37) : BV:32
50 : bvadd(48, 49) : BV:32
51 : bvconcat(47, 50) : BV:64
52 : bvextract(43, 32, 33) : BV:32
53 : bvextract(45, 32, 33) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvextract(43, 14, 15) : BV:32
56 : bvextract(45, 14, 15) : BV:32
57 : bvadd(55, 56) : BV:32
58 : bvconcat(54, 57) : BV:64
59 : bvconcat(51, 58) : BV:128
60 : bvextract(59, 14, 15) : BV:32
61 : bvextract(59, 32, 33) : BV:32
62 : bvconcat(60, 61) : BV:64
63 : bvextract(59, 36, 37) : BV:32
64 : bvextract(59, 39, 40) : BV:32
65 : bvconcat(63, 64) : BV:64
66 : bvconcat(62, 65) : BV:128
67 : store(1, 2, 24, 66, 28, 29) : ARRAY[BV:32 -> BV:8]
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvzero_ext(14, 2) : BV:33
16 : bvextract(15, 12, 13) : BV:32
17 : 4294967280 { -16 } : BV:32
18 : bvnot(17) : BV:32
19 : bvzero_ext(18, 2) : BV:33
20 : bvextract(19, 12, 13) : BV:32
21 : bvadd(16, 20) : BV:32
22 : 0 : BV:31
23 : bvconcat(22, 9) : BV:32
24 : bvadd(21, 23) : BV:32
25 : bvextract(24, 12, 12) : BV:1
26 : eq(25, 9) : BOOL
27 : donotsimplify_using_solver_subsign(26, 14, 17) : BOOL
28 : bvextract(15, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : bvextract(19, 12, 12) : BV:1
31 : eq(30, 9) : BOOL
32 : iff(29, 31) : BOOL
33 : xor(29, 26) : BOOL
34 : and(32, 33) : BOOL
35 : donotsimplify_using_solver_suboverflow(34, 14, 17) : BOOL
36 : iff(27, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : 63 : INT
13 : 32 : INT
14 : bvextract(8, 12, 13) : BV:32
15 : bvconcat(11, 14) : BV:64
16 : 95 : INT
17 : 64 : INT
18 : bvextract(8, 16, 17) : BV:32
19 : 127 : INT
20 : 96 : INT
21 : bvextract(8, 19, 20) : BV:32
22 : bvconcat(18, 21) : BV:64
23 : bvconcat(15, 22) : BV:128
24 : bvextract(23, 19, 20) : BV:32
25 : input.dst.exreg.2.1 : BV:128
26 : bvextract(25, 19, 20) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(23, 16, 17) : BV:32
29 : bvextract(25, 16, 17) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(27, 30) : BV:64
32 : bvextract(23, 12, 13) : BV:32
33 : bvextract(25, 12, 13) : BV:32
34 : bvadd(32, 33) : BV:32
35 : bvextract(23, 9, 10) : BV:32
36 : bvextract(25, 9, 10) : BV:32
37 : bvadd(35, 36) : BV:32
38 : bvconcat(34, 37) : BV:64
39 : bvconcat(31, 38) : BV:128
40 : bvextract(39, 9, 10) : BV:32
41 : bvextract(39, 12, 13) : BV:32
42 : bvconcat(40, 41) : BV:64
43 : bvextract(39, 16, 17) : BV:32
44 : bvextract(39, 19, 20) : BV:32
45 : bvconcat(43, 44) : BV:64
46 : bvconcat(42, 45) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294963196 { -4100 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1342177248 : BV:32
=symbol.1
1 : 581959680 : BV:32
=symbol.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.1
1 : 581959680 : BV:32
=dst_symbol_addr.2
1 : 4294967292 { -4 } : BV:32
=dst_symbol_addr.3
1 : 1342177248 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 3 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=stack.size
1 : 2952654848 { -1342312448 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1342305247 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 3 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 581959696 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 582087679 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 3 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1342308352 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 581959680 : BV:32
=input.src.llvm-%arrayidx1
1 : 1342177264 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx
1 : 581959696 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1342177264 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 16 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1342177248 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
684723783
=counter_example_end
=graph_with_ce done
=graph_with_guessing begin
=Invariant states
=Invariant state at node L0%0%1_L0%0%1:
=pc L0%0%1_L0%0%1 invariant_state
is_top 0
is_stable 1
=pc L0%0%1_L0%0%1 invariant_state done
=Invariant state at node Lfor.body%1%1_L3%1%0:
=pc Lfor.body%1%1_L3%1%0 invariant_state
is_top 0
is_stable 1
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr expr_group_type ARR_EQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr expr 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr_group_type BV_EQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 0
1 : symbol.1 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 1
1 : symbol.3 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 2
1 : retaddr_const : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 3
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 4
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 5
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 9
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 10
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 0 : BV:32
5 : bvsge(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 11
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 4294967284 { -12 } : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 12
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967294 { -2 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 0 : BV:32
5 : bvsge(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 13
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967293 { -3 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 0 : BV:32
5 : bvsge(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 14
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967292 { -4 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 0 : BV:32
5 : bvsge(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 15
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 16
1 : input.dst.exreg.0.6 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 17
1 : input.dst.exreg.0.7 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 18
1 : input.dst.exreg.0.3 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 19
1 : input.dst.exreg.0.5 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 20
1 : input.dst.exreg.0.4 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 21
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 22
1 : input.dst.exreg.2.1 : BV:128
2 : 95 : INT
3 : 64 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 23
1 : input.dst.exreg.2.1 : BV:128
2 : 63 : INT
3 : 32 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 24
1 : input.dst.exreg.2.1 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 25
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 26
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 27
1 : input.dst.esp.L0%1%1 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 0
=Comment
linear2-32-free_var_idx.25
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 1
=Comment
linear2-32-free_var_idx.24
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 2
=Comment
linear1-4-free_var_idx.0
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 3
=Comment
linear3-4-free_var_idx.1
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4 : BV:4
2 : symbol.3 : BV:32
3 : 3 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:4
6 : bvneg(5) : BV:4
7 : input.src.llvm-%i.0 : BV:32
8 : bvextract(7, 3, 4) : BV:4
9 : bvmul(1, 8) : BV:4
10 : symbol.1 : BV:32
11 : bvextract(10, 3, 4) : BV:4
12 : 8 { -8 } : BV:4
13 : bvmul(11, 12) : BV:4
14 : bvadd(1, 6, 9, 13) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 4
=Comment
linear2-32-free_var_idx.15
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
4 : 4294967284 { -12 } : BV:32
5 : bvadd(3, 4) : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 5
=Comment
linear2-32-free_var_idx.26
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 6
=Comment
linear1-2-free_var_idx.4
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 3 { -1 } : BV:2
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:2
6 : bvmul(1, 5) : BV:2
7 : bvadd(1, 6) : BV:2
=RhsExpr
1 : 0 : BV:2
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 7
=Comment
linear2-32-free_var_idx.5
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : input.src.llvm-%i.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 8
=Comment
linear2-32-free_var_idx.12
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 4294967294 { -2 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 0 : BV:32
6 : bvsge(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 9
=Comment
linear2-32-free_var_idx.10
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4294967295 { -1 } : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%i.0 : BV:32
4 : bvadd(3, 1) : BV:32
5 : 0 : BV:32
6 : bvsge(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(2, 7) : BV:32
9 : bvmul(1, 8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(2, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 10
=Comment
linear2-32-free_var_idx.22
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 95 : INT
3 : 64 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 11
=Comment
linear2-32-free_var_idx.27
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.esp.L0%1%1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 12
=Comment
linear2-32-free_var_idx.13
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 4294967293 { -3 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 0 : BV:32
6 : bvsge(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 13
=Comment
linear3-12-free_var_idx.20
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4092 { -4 } : BV:12
2 : symbol.3 : BV:32
3 : 11 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:12
6 : 2560 { -1536 } : BV:12
7 : bvmul(5, 6) : BV:12
8 : 1536 : BV:12
9 : symbol.1 : BV:32
10 : bvextract(9, 3, 4) : BV:12
11 : bvmul(8, 10) : BV:12
12 : bvadd(1, 7, 11) : BV:12
=RhsExpr
1 : input.dst.exreg.0.4 : BV:32
2 : 11 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:12
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 14
=Comment
linear1-32-free_var_idx.3
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%cmp : BOOL
4 : bool_to_bv(3) : BV:1
5 : bvconcat(2, 4) : BV:32
6 : bvneg(5) : BV:32
7 : bvadd(1, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 15
=Comment
linear2-32-free_var_idx.21
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 16
=Comment
linear2-32-free_var_idx.23
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 63 : INT
3 : 32 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose expr 0
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 1
=Comment
lb-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 2 : BV:32
3 : bvuge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 2
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 3
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 2 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose expr 0
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr_group_type HOUDINI
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 0
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 1
1 : dst_symbol_addr.2 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 2
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 3
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 4
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 5
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967284 { -12 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 0
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967284 { -12 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 1
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 2
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 3
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 4
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 5
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state done
=Invariant state at node E0%0%1_E0%0%1:
=pc E0%0%1_E0%0%1 invariant_state
is_top 0
is_stable 1
=pc E0%0%1_E0%0%1 invariant_state done
=graph_with_guessing done
=corr_graph_done
