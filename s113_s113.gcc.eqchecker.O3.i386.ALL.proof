=FunctionName: s113
=result: 1
=corr_graph s113
=src_tfg
=TFG_LLVM llvm.s113:
=TFG:
=Nodes: L0%0%1 Lfor.cond%1%0 Lfor.cond%2%1 Lfor.body%1%1 Lfor.end%1%1 E0%0%1
=Edges:
Lfor.end%1%1 => E0%0%1
Lfor.cond%2%1 => Lfor.body%1%1
Lfor.cond%2%1 => Lfor.end%1%1
L0%0%1 => Lfor.cond%1%0
Lfor.cond%1%0 => Lfor.cond%2%1
Lfor.body%1%1 => Lfor.cond%1%0
=graph done
=Node outputs: E0%0%1
=Output: src.llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: symbol.2.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.3.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : 0 : BV:32
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL2 : a : 128000 : 16 : 0
C_SYMBOL3 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.cond%1%0
=Lfor.cond%1%0 assume predicate_set done
=Lfor.cond%1%0 assert predicate_set done
=Node assumes and asserts: Lfor.cond%2%1
=Lfor.cond%2%1 assume predicate_set done
=Lfor.cond%2%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1
=Lfor.body%1%1 assume predicate_set done
=Lfor.body%1%1 assert predicate_set done
=Node assumes and asserts: Lfor.end%1%1
=Lfor.end%1%1 assume predicate_set done
=Lfor.end%1%1 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.llvm.s113.0 : memlabel-mem-symbol.2.0
=memlabel_map.1
mlvar.llvm.s113.1 : memlabel-mem-symbol.3.0
=memlabel_map.2
mlvar.llvm.s113.2 : memlabel-mem-symbol.2.0
=Edge: Lfor.end%1%1 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  ret i32 0, !dbg !87

=Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)

=Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)

=Edge: L0%0%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))

=Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)

=Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lentry%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%1=>Lentry%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100003=>Lentry%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100004=>Lentry%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100005=>Lentry%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%1=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100003
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100005
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.body%1%1
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.end%1%1
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100003=>Lfor.cond%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100004=>Lfor.body%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100005=>Lfor.cond%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100006=>Lfor.end%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.body%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100003=>Lfor.body%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100004=>Lfor.body%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100005=>Lfor.body%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100006=>Lfor.body%1%100007
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100007=>Lfor.body%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%1=>Lfor.body%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100003=>Lfor.body%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100004=>Lfor.body%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100005=>Lfor.body%3%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%1=>Lfor.body%3%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100003=>Lfor.body%4%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%1=>Lfor.body%5%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%1=>Lfor.body%5%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100003=>Lfor.body%5%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100004=>Lfor.body%5%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100005=>Lfor.body%6%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%1=>Lfor.body%7%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%1=>Lfor.body%7%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100003=>Lfor.body%7%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100004=>Lfor.inc%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%1%1=>Lfor.inc%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%1=>Lfor.inc%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100003=>Lfor.inc%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100004=>Lfor.inc%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100005=>Lfor.inc%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lentry%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lfor.cond%1%0
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%1=>Lentry%1%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100003=>Lentry%1%100004
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100004=>Lentry%1%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100005=>Lentry%1%100006
=src.llvm-%i.0
1 : 1 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%1=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100003=>Lfor.cond%2%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100004=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100005=>Lfor.cond%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100006=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.cond%1%0
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 3, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
16 : store(1, 2, 7, 15, 8, 9) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%i.0
1 : 1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : symbol.3 : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : select(1, 7, 12, 4, 5) : BV:32
14 : bvadd(6, 13) : BV:32
=src.llvm-%inc
1 : 1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.body%1%100003
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100003=>Lfor.body%1%100004
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100004=>Lfor.body%1%100005
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100005=>Lfor.body%1%100006
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100006=>Lfor.body%1%100007
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100007=>Lfor.body%2%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%1=>Lfor.body%2%100003
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100003=>Lfor.body%2%100004
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100004=>Lfor.body%2%100005
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100005=>Lfor.body%3%1
=src.llvm-%arrayidx
1 : input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%1=>Lfor.body%3%100003
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100003=>Lfor.body%4%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%1=>Lfor.body%5%1
=src.llvm-%add
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%1=>Lfor.body%5%100003
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100003=>Lfor.body%5%100004
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100004=>Lfor.body%5%100005
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100005=>Lfor.body%6%1
=src.llvm-%arrayidx1
1 : input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%1=>Lfor.body%7%1
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%1=>Lfor.body%7%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100003=>Lfor.body%7%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100004=>Lfor.inc%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%1%1=>Lfor.inc%2%1
=src.llvm-%inc
1 : 1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%1=>Lfor.inc%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100003=>Lfor.inc%2%100004
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%inc : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100004=>Lfor.inc%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100005=>Lfor.inc%2%100006
=src.llvm-%i.0
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 0
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 2
1 : symbol.2 : BV:32
2 : 16 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 3
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 4
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 5
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 6
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 7
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 8
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%1%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100006=>Lfor.body%1%100007
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100006=>Lfor.body%1%100007 assume# 0
1 : symbol.2 : BV:32
2 : 16 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100006=>Lfor.body%1%100007 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100007=>Lfor.body%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100007=>Lfor.body%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004 assume# 0
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100004=>Lfor.body%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100004=>Lfor.body%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100005=>Lfor.body%3%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100005=>Lfor.body%3%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 0
1 : input.src.llvm-%arrayidx : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%4%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%4%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%5%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%5%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 assume# 0
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100004=>Lfor.body%5%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100004=>Lfor.body%5%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100005=>Lfor.body%6%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100005=>Lfor.body%6%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1 assume# 0
1 : input.src.llvm-%arrayidx1 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1025
1 : 1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1026
1 : 1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 for loc_id 1026
1 : 1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 for loc_id 1025
1 : 1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 for loc_id 1023
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 for loc_id 1023
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1005
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1006
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1008
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1009
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1010
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1011
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1012
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1013
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1014
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1015
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1016
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1017
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1019
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1020
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : symbol.3 : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : select(1, 7, 12, 4, 5) : BV:32
14 : bvadd(6, 13) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1021
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1022
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1025
1 : 1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1026
1 : 1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1027
1 : 1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1033
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 3, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
16 : store(1, 2, 7, 15, 8, 9) : ARRAY[BV:32 -> BV:8]
17 : memmask(16, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1035
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 3, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
16 : store(1, 2, 7, 15, 8, 9) : ARRAY[BV:32 -> BV:8]
17 : select(16, 2, 3, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1010
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1013
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1011
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1014
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 for loc_id 1012
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%1%100006 for loc_id 1009
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100006=>Lfor.body%1%100007
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100006=>Lfor.body%1%100007 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100006=>Lfor.body%1%100007 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100007=>Lfor.body%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100007=>Lfor.body%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004 for loc_id 1005
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004 for loc_id 1008
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100004=>Lfor.body%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100004=>Lfor.body%2%100005 for loc_id 1006
1 : symbol.3 : BV:32
2 : input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100004=>Lfor.body%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100005=>Lfor.body%3%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100005=>Lfor.body%3%1 for loc_id 1021
1 : input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100005=>Lfor.body%3%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%4%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%4%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1 for loc_id 1020
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1015
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 for loc_id 1016
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 for loc_id 1019
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005 for loc_id 1017
1 : symbol.2 : BV:32
2 : input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1 for loc_id 1022
1 : input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 for loc_id 1033
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 for loc_id 1035
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : symbol.2 : BV:32
9 : select(7, 2, 8, 5, 6) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1024
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1028
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 for loc_id 1027
1 : 1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 for loc_id 1026
1 : input.src.llvm-%inc : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 for loc_id 1025
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in llvm.s113
=Loc 1001 in llvm.s113.
LLVMVAR
llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Loc 1002 in llvm.s113.
LLVMVAR
src.llvm-%0
1 : input.src.llvm-%0 : BV:32
=Loc 1003 in llvm.s113.
LLVMVAR
src.llvm-%1
1 : input.src.llvm-%1 : BV:32
=Loc 1004 in llvm.s113.
LLVMVAR
src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset : BV:32
=Loc 1005 in llvm.s113.
LLVMVAR
src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset : BV:32
=Loc 1006 in llvm.s113.
LLVMVAR
src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset : BV:32
=Loc 1007 in llvm.s113.
LLVMVAR
src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset : BV:32
=Loc 1008 in llvm.s113.
LLVMVAR
src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset : BV:32
=Loc 1009 in llvm.s113.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr : BV:32
=Loc 1010 in llvm.s113.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset : BV:32
=Loc 1011 in llvm.s113.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset : BV:32
=Loc 1012 in llvm.s113.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset : BV:32
=Loc 1013 in llvm.s113.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset : BV:32
=Loc 1014 in llvm.s113.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset : BV:32
=Loc 1015 in llvm.s113.
LLVMVAR
src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset : BV:32
=Loc 1016 in llvm.s113.
LLVMVAR
src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset : BV:32
=Loc 1017 in llvm.s113.
LLVMVAR
src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset : BV:32
=Loc 1018 in llvm.s113.
LLVMVAR
src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset : BV:32
=Loc 1019 in llvm.s113.
LLVMVAR
src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset : BV:32
=Loc 1020 in llvm.s113.
LLVMVAR
src.llvm-%add
1 : input.src.llvm-%add : BV:32
=Loc 1021 in llvm.s113.
LLVMVAR
src.llvm-%arrayidx
1 : input.src.llvm-%arrayidx : BV:32
=Loc 1022 in llvm.s113.
LLVMVAR
src.llvm-%arrayidx1
1 : input.src.llvm-%arrayidx1 : BV:32
=Loc 1023 in llvm.s113.
LLVMVAR
src.llvm-%cmp
1 : input.src.llvm-%cmp : BOOL
=Loc 1024 in llvm.s113.
LLVMVAR
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 1025 in llvm.s113.
LLVMVAR
src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
=Loc 1026 in llvm.s113.
LLVMVAR
src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=Loc 1027 in llvm.s113.
LLVMVAR
src.llvm-%inc
1 : input.src.llvm-%inc : BV:32
=Loc 1028 in llvm.s113.
LLVMVAR
src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Loc 1029 in llvm.s113.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1030 in llvm.s113.
REGMEM
uset_visit_expr
1 : input.uset_visit_expr : BOOL
=Loc 1031 in llvm.s113.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1032 in llvm.s113.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1033 in llvm.s113.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1034 in llvm.s113.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.3.0
=Loc 1035 in llvm.s113.
SLOT
=memname
src.llvm-mem
=addr
1 : symbol.2 : BV:32
=nbytes
4
=bigendian
false

=Alias analysis results in llvm.s113
=Alias analysis result in llvm.s113 at L0%0%1
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1004 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1005 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1006 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1007 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1008 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1010 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1011 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1012 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1013 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1014 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1015 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1016 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1017 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1018 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1019 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1020 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1021 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1022 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1028 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1030 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s113 at L0%0%1 for loc 1035 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1004 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1005 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1006 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1007 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1008 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1010 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1011 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1012 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1013 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1014 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1015 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1016 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1017 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1018 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1019 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1020 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1021 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1022 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1028 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1029 (input.econd)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1030 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%1%0 for loc 1035 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1004 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1005 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1006 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1007 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1008 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1010 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1011 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1012 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1013 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1014 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1015 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1016 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1017 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1018 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1019 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1020 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1021 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1022 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1028 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1030 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s113 at Lfor.cond%2%1 for loc 1035 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1004 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1005 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1006 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1007 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1008 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1010 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1011 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1012 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1013 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1014 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1015 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1016 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1017 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1018 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1019 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1020 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1021 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1022 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1028 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1030 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s113 at Lfor.body%1%1 for loc 1035 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1004 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1005 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1006 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1007 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1008 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1010 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1011 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1012 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1013 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1014 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1015 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1016 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1017 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1018 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1019 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1020 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1021 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1022 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1028 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1030 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s113 at Lfor.end%1%1 for loc 1035 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.s113 at E0%0%1
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1001 (input.llvm-%ret-reg)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1004 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1005 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1006 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1007 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1008 (input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1010 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1011 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1012 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1013 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1014 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1015 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1016 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1017 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1018 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1019 (input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1020 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1021 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1022 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1023 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1024 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1025 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1026 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1027 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1028 (input.src.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1030 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s113 at E0%0%1 for loc 1035 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr

=Liveness in llvm.s113
=live locs at L0%0%1
1031, 1033, 1034, 1035
=live locs at Lfor.cond%1%0
1025, 1031, 1033, 1034, 1035
=live locs at Lfor.cond%2%1
1023, 1025, 1031, 1033, 1034, 1035
=live locs at Lfor.body%1%1
1025, 1031, 1033, 1034, 1035
=live locs at Lfor.end%1%1
1031, 1033, 1034, 1035
=live locs at E0%0%1
1031, 1033, 1034, 1035

=Available expressions in llvm.s113
=available expressions at L0%0%1 in llvm.s113
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%1%0 in llvm.s113
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%2%1 in llvm.s113
=avail_exprs begin
=loc 1023
=from_expr
17403 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17401 : 32000 : BV:32
17402 : bvslt(17400, 17401) : BOOL
=avail_exprs end
=available expressions at Lfor.body%1%1 in llvm.s113
=avail_exprs begin
=loc 1023
=from_expr
17403 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17401 : 32000 : BV:32
17402 : bvslt(17400, 17401) : BOOL
=avail_exprs end
=available expressions at Lfor.end%1%1 in llvm.s113
=avail_exprs begin
=loc 1023
=from_expr
17403 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17401 : 32000 : BV:32
17402 : bvslt(17400, 17401) : BOOL
=avail_exprs end
=available expressions at E0%0%1 in llvm.s113
=avail_exprs begin
=loc 1001
=from_expr
17510 : input.llvm-%ret-reg : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1023
=from_expr
17403 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17401 : 32000 : BV:32
17402 : bvslt(17400, 17401) : BOOL
=loc 1028
=from_expr
17518 : input.src.llvm-indir_tgt : BV:32
=to_expr
17387 : retaddr_const : BV:32
=avail_exprs end

=sprel_maps in llvm.s113
=sprel_map at L0%0%1 in llvm.s113
=sprel_map at Lfor.cond%1%0 in llvm.s113
=sprel_map at Lfor.cond%2%1 in llvm.s113
=sprel_map at Lfor.body%1%1 in llvm.s113
=sprel_map at Lfor.end%1%1 in llvm.s113
=sprel_map at E0%0%1 in llvm.s113
=loc 1001
17389 : 0 : BV:32
=loc 1028
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=PC_to_linename:
=pc
Lentry%1%1
=linename
(line 9 at column 8)
=pc
Lfor.cond%1%1
=linename
(line 9 at column 21)
=pc
Lfor.cond%2%1
=linename
(line 9 at column 3)
=pc
Lfor.body%1%1
=linename
(line 10 at column 11)
=pc
Lfor.body%2%1
=linename
(line 10 at column 18)
=pc
Lfor.body%3%1
=linename
(line 10 at column 18)
=pc
Lfor.body%4%1
=linename
(line 10 at column 16)
=pc
Lfor.body%5%1
=linename
(line 10 at column 4)
=pc
Lfor.body%6%1
=linename
(line 10 at column 9)
=pc
Lfor.body%7%1
=linename
line 11
=pc
Lfor.end%1%1
=linename
line 12
=pc
Lfor.inc%1%1
=linename
(line 9 at column 29)
=pc
Lfor.inc%2%1
=linename
line 9
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%1
=column_name
 at column 8
=pc
Lfor.cond%1%1
=column_name
 at column 21
=pc
Lfor.cond%2%1
=column_name
 at column 3
=pc
Lfor.body%1%1
=column_name
 at column 11
=pc
Lfor.body%2%1
=column_name
 at column 18
=pc
Lfor.body%3%1
=column_name
 at column 18
=pc
Lfor.body%4%1
=column_name
 at column 16
=pc
Lfor.body%5%1
=column_name
 at column 4
=pc
Lfor.body%6%1
=column_name
 at column 9
=pc
Lfor.body%7%1
=column_name
 at column 3
=pc
Lfor.end%1%1
=column_name
 at column 2
=pc
Lfor.inc%1%1
=column_name
 at column 29
=pc
Lfor.inc%2%1
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%1
=line_and_column
line 9
=pc
Lfor.cond%1%1
=line_and_column
line 9
=pc
Lfor.cond%2%1
=line_and_column
line 9
=pc
Lfor.body%1%1
=line_and_column
line 10
=pc
Lfor.body%2%1
=line_and_column
line 10
=pc
Lfor.body%3%1
=line_and_column
line 10
=pc
Lfor.body%4%1
=line_and_column
line 10
=pc
Lfor.body%5%1
=line_and_column
line 10
=pc
Lfor.body%6%1
=line_and_column
line 10
=pc
Lfor.body%7%1
=line_and_column
line 11
=pc
Lfor.end%1%1
=line_and_column
line 12
=pc
Lfor.inc%1%1
=line_and_column
line 9
=pc
Lfor.inc%2%1
=line_and_column
line 9
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.llvm-%i.0 : i
input.src.llvm-%cmp : (i&lt;<sub>s</sub>32000)
input.src.llvm-%i.0.phi.tmpvar : 1
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset : 0
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset : 0
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset : @a
input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset : (@b + bvmul(i, 4))
input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%arrayidx : (@b + bvmul(i, 4))
input.src.llvm-%add : (input.src.llvm-%0 + input.src.llvm-%1)
input.src.llvm-%inc : i
input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset : (@a + bvmul(i, 4))
input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset : 0
input.src.llvm-%arrayidx1 : (@a + bvmul(i, 4))
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr : @a
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset : 0
input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset : 0
input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-indir_tgt : retaddr_const
input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset : 0
input.llvm-%ret-reg : 0
input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset : 0
input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset : 0
=InputLLVMToSourceVarnames done
=TFG_LLVM_done
=dst_tfg
=TFG:
=Nodes: L0%0%1 L3%1%0 L8%1%1 L9%1%0 E0%0%1
=Edges:
L8%1%1 => L3%1%0
L8%1%1 => L9%1%0
L0%0%1 => L3%1%0
L3%1%0 => L8%1%1
L9%1%0 => E0%0%1
=graph done
=Node outputs: E0%0%1
=Output: src.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Output: symbol.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.3.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0 : BV:32
=Output: heap
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL2 : a : 128000 : 16 : 0
C_SYMBOL3 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: L3%1%0
=L3%1%0 assume predicate_set done
=L3%1%0 assert predicate_set done
=Node assumes and asserts: L8%1%1
=L8%1%1 assume predicate_set done
=L8%1%1 assert predicate_set done
=Node assumes and asserts: L9%1%0
=L9%1%0 assume predicate_set done
=L9%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.2
mlvar.dst.10 : memlabel-mem-esp
=memlabel_map.3
mlvar.dst.11 : memlabel-mem-esp
=memlabel_map.4
mlvar.dst.2 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.5
mlvar.dst.3 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.6
mlvar.dst.4 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.7
mlvar.dst.5 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.8
mlvar.dst.6 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.9
mlvar.dst.7 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.10
mlvar.dst.8 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.11
mlvar.dst.9 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=Edge: L8%1%1 => L3%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L8%1%1 => L9%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L0%0%1 => L3%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))

=Edge: L3%1%0 => L8%1%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)

=Edge: L9%1%0 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.5
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
=dst.hidden_reg.6
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127988 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.4 : MEMLABEL
13 : dst_symbol_addr.3 : BV:32
14 : bvmul(13, 7) : BV:32
15 : bvadd(14, 10) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.3 : MEMLABEL
22 : select(1, 21, 3, 16, 17) : BV:32
23 : bvzero_ext(22, 19) : BV:33
24 : bvadd(20, 23) : BV:33
25 : bvextract(24, 5, 6) : BV:32
26 : store(1, 2, 11, 25, 16, 17) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.6 : MEMLABEL
28 : 127992 : BV:64
29 : bvextract(28, 5, 6) : BV:32
30 : bvadd(14, 29) : BV:32
31 : select(26, 27, 30, 16, 17) : BV:32
32 : bvzero_ext(31, 19) : BV:33
33 : bvadd(32, 23) : BV:33
34 : bvextract(33, 5, 6) : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.16.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : bvsign(35) : BV:1
37 : 1 : BV:1
38 : eq(36, 37) : BOOL
39 : not(38) : BOOL
40 : 0 : BV:1
41 : ite(39, 37, 40) : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127988 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.4 : MEMLABEL
13 : dst_symbol_addr.3 : BV:32
14 : bvmul(13, 7) : BV:32
15 : bvadd(14, 10) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.3 : MEMLABEL
22 : select(1, 21, 3, 16, 17) : BV:32
23 : bvzero_ext(22, 19) : BV:33
24 : bvadd(20, 23) : BV:33
25 : bvextract(24, 5, 6) : BV:32
26 : store(1, 2, 11, 25, 16, 17) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.8 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 5, 6) : BV:32
30 : bvadd(8, 29) : BV:32
31 : mlvar.dst.7 : MEMLABEL
32 : bvadd(14, 29) : BV:32
33 : select(26, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : bvadd(23, 34) : BV:33
36 : bvextract(35, 5, 6) : BV:32
37 : store(26, 27, 30, 36, 16, 17) : ARRAY[BV:32 -> BV:8]
38 : mlvar.dst.9 : MEMLABEL
39 : 127992 : BV:64
40 : bvextract(39, 5, 6) : BV:32
41 : bvadd(8, 40) : BV:32
42 : mlvar.dst.6 : MEMLABEL
43 : bvadd(14, 40) : BV:32
44 : select(26, 42, 43, 16, 17) : BV:32
45 : bvzero_ext(44, 19) : BV:33
46 : bvadd(45, 23) : BV:33
47 : bvextract(46, 5, 6) : BV:32
48 : store(37, 38, 41, 47, 16, 17) : ARRAY[BV:32 -> BV:8]
49 : mlvar.dst.10 : MEMLABEL
50 : input.dst.exreg.0.4 : BV:32
51 : select(48, 49, 50, 16, 17) : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127988 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.4 : MEMLABEL
13 : dst_symbol_addr.3 : BV:32
14 : bvmul(13, 7) : BV:32
15 : bvadd(14, 10) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.3 : MEMLABEL
22 : select(1, 21, 3, 16, 17) : BV:32
23 : bvzero_ext(22, 19) : BV:33
24 : bvadd(20, 23) : BV:33
25 : bvextract(24, 5, 6) : BV:32
26 : store(1, 2, 11, 25, 16, 17) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.8 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 5, 6) : BV:32
30 : bvadd(8, 29) : BV:32
31 : mlvar.dst.7 : MEMLABEL
32 : bvadd(14, 29) : BV:32
33 : select(26, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : bvadd(23, 34) : BV:33
36 : bvextract(35, 5, 6) : BV:32
37 : store(26, 27, 30, 36, 16, 17) : ARRAY[BV:32 -> BV:8]
38 : mlvar.dst.9 : MEMLABEL
39 : 127992 : BV:64
40 : bvextract(39, 5, 6) : BV:32
41 : bvadd(8, 40) : BV:32
42 : mlvar.dst.6 : MEMLABEL
43 : bvadd(14, 40) : BV:32
44 : select(26, 42, 43, 16, 17) : BV:32
45 : bvzero_ext(44, 19) : BV:33
46 : bvadd(45, 23) : BV:33
47 : bvextract(46, 5, 6) : BV:32
48 : store(37, 38, 41, 47, 16, 17) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : bvsign(35) : BV:1
39 : 1 : BV:1
40 : eq(38, 39) : BOOL
41 : or(37, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 39, 42) : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.4 : MEMLABEL
7 : dst_symbol_addr.3 : BV:32
8 : 1 : BV:64
9 : 0 : INT
10 : bvextract(8, 2, 9) : BV:32
11 : bvmul(7, 10) : BV:32
12 : 127988 : BV:64
13 : bvextract(12, 2, 9) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(5, 6, 14, 15, 16) : BV:32
18 : bvzero_ext(17, 3) : BV:33
19 : mlvar.dst.3 : MEMLABEL
20 : dst_symbol_addr.2 : BV:32
21 : select(5, 19, 20, 15, 16) : BV:32
22 : bvzero_ext(21, 3) : BV:33
23 : bvadd(18, 22) : BV:33
24 : 32 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : 1 : BV:1
27 : eq(25, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 26, 28) : BV:1
30 : bvconcat(4, 29) : BV:32
31 : 5 : INT
32 : bvextract(30, 2, 31) : BV:27
33 : bvextract(23, 2, 9) : BV:32
34 : bvextract(33, 15, 15) : BV:1
35 : eq(34, 26) : BOOL
36 : bvextract(18, 15, 15) : BV:1
37 : eq(36, 26) : BOOL
38 : xor(35, 37) : BOOL
39 : ite(38, 26, 28) : BV:1
40 : 3 : INT
41 : bvextract(30, 40, 9) : BV:4
42 : bvconcat(39, 41) : BV:5
43 : bvconcat(32, 42) : BV:32
44 : 12 : INT
45 : bvextract(43, 2, 44) : BV:20
46 : bvextract(18, 2, 2) : BV:1
47 : eq(46, 26) : BOOL
48 : bvextract(22, 2, 2) : BV:1
49 : eq(48, 26) : BOOL
50 : iff(47, 49) : BOOL
51 : bvextract(18, 2, 9) : BV:32
52 : bvextract(22, 2, 9) : BV:32
53 : bvadd(51, 52) : BV:32
54 : bvextract(53, 2, 2) : BV:1
55 : eq(54, 26) : BOOL
56 : xor(47, 55) : BOOL
57 : and(50, 56) : BOOL
58 : ite(57, 26, 28) : BV:1
59 : 10 : INT
60 : bvextract(43, 59, 9) : BV:11
61 : bvconcat(58, 60) : BV:12
62 : bvconcat(45, 61) : BV:32
63 : 8 : INT
64 : bvextract(62, 2, 63) : BV:24
65 : ite(55, 26, 28) : BV:1
66 : 6 : INT
67 : bvextract(62, 66, 9) : BV:7
68 : bvconcat(65, 67) : BV:8
69 : bvconcat(64, 68) : BV:32
70 : 7 : INT
71 : bvextract(69, 2, 70) : BV:25
72 : 0 : BV:32
73 : eq(33, 72) : BOOL
74 : ite(73, 26, 28) : BV:1
75 : bvextract(69, 31, 9) : BV:6
76 : bvconcat(74, 75) : BV:7
77 : bvconcat(71, 76) : BV:32
78 : bvextract(77, 2, 40) : BV:29
79 : bvextract(77, 3, 9) : BV:2
80 : bvconcat(28, 79) : BV:3
81 : bvconcat(78, 80) : BV:32
82 : 11 : INT
83 : bvextract(81, 2, 82) : BV:21
84 : bvextract(1, 59, 59) : BV:1
85 : eq(84, 26) : BOOL
86 : ite(85, 26, 28) : BV:1
87 : 9 : INT
88 : bvextract(81, 87, 9) : BV:10
89 : bvconcat(86, 88) : BV:11
90 : bvconcat(83, 89) : BV:32
91 : bvextract(90, 2, 3) : BV:31
92 : mlvar.dst.5 : MEMLABEL
93 : bvmul(20, 10) : BV:32
94 : bvadd(93, 13) : BV:32
95 : store(5, 92, 94, 33, 15, 16) : ARRAY[BV:32 -> BV:8]
96 : mlvar.dst.6 : MEMLABEL
97 : 127992 : BV:64
98 : bvextract(97, 2, 9) : BV:32
99 : bvadd(11, 98) : BV:32
100 : select(95, 96, 99, 15, 16) : BV:32
101 : bvzero_ext(100, 3) : BV:33
102 : bvadd(101, 22) : BV:33
103 : bvextract(102, 24, 24) : BV:1
104 : eq(103, 26) : BOOL
105 : ite(104, 26, 28) : BV:1
106 : bvconcat(91, 105) : BV:32
107 : bvextract(106, 2, 31) : BV:27
108 : bvextract(102, 2, 9) : BV:32
109 : bvextract(108, 15, 15) : BV:1
110 : eq(109, 26) : BOOL
111 : bvextract(101, 15, 15) : BV:1
112 : eq(111, 26) : BOOL
113 : xor(110, 112) : BOOL
114 : ite(113, 26, 28) : BV:1
115 : bvextract(106, 40, 9) : BV:4
116 : bvconcat(114, 115) : BV:5
117 : bvconcat(107, 116) : BV:32
118 : bvextract(117, 2, 44) : BV:20
119 : bvextract(101, 2, 2) : BV:1
120 : eq(119, 26) : BOOL
121 : iff(120, 49) : BOOL
122 : bvextract(101, 2, 9) : BV:32
123 : bvadd(122, 52) : BV:32
124 : bvextract(123, 2, 2) : BV:1
125 : eq(124, 26) : BOOL
126 : xor(120, 125) : BOOL
127 : and(121, 126) : BOOL
128 : ite(127, 26, 28) : BV:1
129 : bvextract(117, 59, 9) : BV:11
130 : bvconcat(128, 129) : BV:12
131 : bvconcat(118, 130) : BV:32
132 : bvextract(131, 2, 63) : BV:24
133 : ite(125, 26, 28) : BV:1
134 : bvextract(131, 66, 9) : BV:7
135 : bvconcat(133, 134) : BV:8
136 : bvconcat(132, 135) : BV:32
137 : bvextract(136, 2, 70) : BV:25
138 : eq(108, 72) : BOOL
139 : ite(138, 26, 28) : BV:1
140 : bvextract(136, 31, 9) : BV:6
141 : bvconcat(139, 140) : BV:7
142 : bvconcat(137, 141) : BV:32
143 : bvextract(142, 2, 40) : BV:29
144 : bvextract(142, 3, 9) : BV:2
145 : bvconcat(28, 144) : BV:3
146 : bvconcat(143, 145) : BV:32
147 : bvextract(146, 2, 82) : BV:21
148 : bvextract(90, 59, 59) : BV:1
149 : eq(148, 26) : BOOL
150 : ite(149, 26, 28) : BV:1
151 : bvextract(146, 87, 9) : BV:10
152 : bvconcat(150, 151) : BV:11
153 : bvconcat(147, 152) : BV:32
154 : bvextract(153, 2, 3) : BV:31
155 : mlvar.dst.7 : MEMLABEL
156 : 127996 : BV:64
157 : bvextract(156, 2, 9) : BV:32
158 : bvadd(11, 157) : BV:32
159 : select(95, 155, 158, 15, 16) : BV:32
160 : bvzero_ext(159, 3) : BV:33
161 : bvadd(22, 160) : BV:33
162 : bvextract(161, 24, 24) : BV:1
163 : eq(162, 26) : BOOL
164 : ite(163, 26, 28) : BV:1
165 : bvconcat(154, 164) : BV:32
166 : bvextract(165, 2, 31) : BV:27
167 : bvextract(161, 2, 9) : BV:32
168 : bvextract(167, 15, 15) : BV:1
169 : eq(168, 26) : BOOL
170 : bvextract(22, 15, 15) : BV:1
171 : eq(170, 26) : BOOL
172 : xor(169, 171) : BOOL
173 : ite(172, 26, 28) : BV:1
174 : bvextract(165, 40, 9) : BV:4
175 : bvconcat(173, 174) : BV:5
176 : bvconcat(166, 175) : BV:32
177 : bvextract(176, 2, 44) : BV:20
178 : bvextract(160, 2, 2) : BV:1
179 : eq(178, 26) : BOOL
180 : iff(49, 179) : BOOL
181 : bvextract(160, 2, 9) : BV:32
182 : bvadd(52, 181) : BV:32
183 : bvextract(182, 2, 2) : BV:1
184 : eq(183, 26) : BOOL
185 : xor(49, 184) : BOOL
186 : and(180, 185) : BOOL
187 : ite(186, 26, 28) : BV:1
188 : bvextract(176, 59, 9) : BV:11
189 : bvconcat(187, 188) : BV:12
190 : bvconcat(177, 189) : BV:32
191 : bvextract(190, 2, 63) : BV:24
192 : ite(184, 26, 28) : BV:1
193 : bvextract(190, 66, 9) : BV:7
194 : bvconcat(192, 193) : BV:8
195 : bvconcat(191, 194) : BV:32
196 : bvextract(195, 2, 70) : BV:25
197 : eq(167, 72) : BOOL
198 : ite(197, 26, 28) : BV:1
199 : bvextract(195, 31, 9) : BV:6
200 : bvconcat(198, 199) : BV:7
201 : bvconcat(196, 200) : BV:32
202 : bvextract(201, 2, 40) : BV:29
203 : bvextract(201, 3, 9) : BV:2
204 : bvconcat(28, 203) : BV:3
205 : bvconcat(202, 204) : BV:32
206 : bvextract(205, 2, 82) : BV:21
207 : bvextract(153, 59, 59) : BV:1
208 : eq(207, 26) : BOOL
209 : ite(208, 26, 28) : BV:1
210 : bvextract(205, 87, 9) : BV:10
211 : bvconcat(209, 210) : BV:11
212 : bvconcat(206, 211) : BV:32
213 : bvextract(212, 2, 3) : BV:31
214 : bvconcat(213, 28) : BV:32
215 : bvextract(214, 2, 31) : BV:27
216 : bvextract(214, 40, 9) : BV:4
217 : bvconcat(28, 216) : BV:5
218 : bvconcat(215, 217) : BV:32
219 : bvextract(218, 2, 44) : BV:20
220 : bvextract(218, 59, 9) : BV:11
221 : bvconcat(28, 220) : BV:12
222 : bvconcat(219, 221) : BV:32
223 : bvextract(222, 2, 63) : BV:24
224 : bvxor(167, 167) : BV:32
225 : bvsign(224) : BV:1
226 : eq(225, 26) : BOOL
227 : ite(226, 26, 28) : BV:1
228 : bvextract(222, 66, 9) : BV:7
229 : bvconcat(227, 228) : BV:8
230 : bvconcat(223, 229) : BV:32
231 : bvextract(230, 2, 70) : BV:25
232 : eq(224, 72) : BOOL
233 : ite(232, 26, 28) : BV:1
234 : bvextract(230, 31, 9) : BV:6
235 : bvconcat(233, 234) : BV:7
236 : bvconcat(231, 235) : BV:32
237 : bvextract(236, 2, 40) : BV:29
238 : bvextract(236, 3, 9) : BV:2
239 : bvconcat(28, 238) : BV:3
240 : bvconcat(237, 239) : BV:32
241 : bvextract(240, 2, 82) : BV:21
242 : bvextract(212, 59, 59) : BV:1
243 : eq(242, 26) : BOOL
244 : ite(243, 26, 28) : BV:1
245 : bvextract(240, 87, 9) : BV:10
246 : bvconcat(244, 245) : BV:11
247 : bvconcat(241, 246) : BV:32
=dst.exreg.7.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : 1 : BV:1
39 : 0 : BV:1
40 : ite(37, 38, 39) : BV:1
=dst.exreg.8.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : not(37) : BOOL
39 : 1 : BV:1
40 : 0 : BV:1
41 : ite(38, 39, 40) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : bvsign(35) : BV:1
37 : 1 : BV:1
38 : eq(36, 37) : BOOL
39 : 0 : BV:1
40 : ite(38, 37, 39) : BV:1
=dst.exreg.11.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : not(37) : BOOL
39 : 1 : BV:1
40 : 0 : BV:1
41 : ite(38, 39, 40) : BV:1
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.12.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : not(37) : BOOL
39 : bvsign(35) : BV:1
40 : 1 : BV:1
41 : eq(39, 40) : BOOL
42 : not(41) : BOOL
43 : and(38, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 40, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : 1 : BV:1
39 : 0 : BV:1
40 : ite(37, 38, 39) : BV:1
=dst.exreg.0.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127988 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.4 : MEMLABEL
13 : dst_symbol_addr.3 : BV:32
14 : bvmul(13, 7) : BV:32
15 : bvadd(14, 10) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.3 : MEMLABEL
22 : select(1, 21, 3, 16, 17) : BV:32
23 : bvzero_ext(22, 19) : BV:33
24 : bvadd(20, 23) : BV:33
25 : bvextract(24, 5, 6) : BV:32
26 : store(1, 2, 11, 25, 16, 17) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.6 : MEMLABEL
28 : 127992 : BV:64
29 : bvextract(28, 5, 6) : BV:32
30 : bvadd(14, 29) : BV:32
31 : select(26, 27, 30, 16, 17) : BV:32
32 : bvzero_ext(31, 19) : BV:33
33 : bvadd(32, 23) : BV:33
34 : bvextract(33, 5, 6) : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L0%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L3%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%1=>L1%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%1=>L2%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%1=>L3%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%0=>L3%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%0=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%1=>L4%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%1=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>L3%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>L9%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%0=>L9%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%0=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%1=>L10%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%1=>L11%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%1=>L12%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L12%1%1=>L13%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L13%1%1=>L14%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L14%1%1=>L15%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L15%1%1=>L16%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L16%1%1=>L17%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L17%1%1=>L18%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L18%1%1=>L19%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L19%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L0%1%1
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L3%1%0
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : bvconcat(6, 6, 6, 6) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%1=>L1%1%1
=dst.exreg.2.2
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%1=>L2%1%1
=dst.exreg.0.0
1 : 4 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%1=>L3%1%0
=dst.exreg.2.1
1 : input.dst.exreg.2.2 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : bvconcat(4, 4, 4, 4) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%0=>L3%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%0=>L8%1%1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839324 { -127972 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839324 { -127972 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127972 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 127988 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839324 { -127972 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127972 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 127988 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127972 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127972 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 127988 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839324 { -127972 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127972 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 127988 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839324 { -127972 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127972 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127972 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 127988 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.3 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%1=>L4%1%1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%1=>L5%1%1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L6%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(5, 18, 19) : BV:32
21 : bvextract(1, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L7%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L8%1%1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839308 { -127988 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839308 { -127988 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839308 { -127988 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 127988 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839308 { -127988 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839308 { -127988 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 127988 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>L3%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>L9%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%0=>L9%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%0=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : retaddr_const : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 3, 6, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 5, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
14 : 127996 : BV:32
15 : bvadd(3, 14) : BV:32
16 : bvadd(9, 14) : BV:32
17 : select(13, 2, 16, 6, 7) : BV:32
18 : bvadd(8, 17) : BV:32
19 : store(13, 2, 15, 18, 6, 7) : ARRAY[BV:32 -> BV:8]
20 : 127992 : BV:32
21 : bvadd(3, 20) : BV:32
22 : bvadd(9, 20) : BV:32
23 : select(13, 2, 22, 6, 7) : BV:32
24 : bvadd(8, 23) : BV:32
25 : store(19, 2, 21, 24, 6, 7) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 127988 : BV:32
8 : bvadd(3, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 7) : BV:32
11 : select(1, 2, 10, 4, 5) : BV:32
12 : bvadd(6, 11) : BV:32
13 : store(1, 2, 8, 12, 4, 5) : ARRAY[BV:32 -> BV:8]
14 : 127992 : BV:32
15 : bvadd(9, 14) : BV:32
16 : select(13, 2, 15, 4, 5) : BV:32
17 : bvadd(6, 16) : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%1=>L10%1%1
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%1=>L11%1%1
=dst.exreg.0.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%1=>L12%1%1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : bvadd(1, 3) : BV:32
8 : 31 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(6, 9) : BOOL
11 : bvextract(3, 8, 8) : BV:1
12 : eq(6, 11) : BOOL
13 : bvextract(1, 8, 8) : BV:1
14 : eq(6, 13) : BOOL
15 : iff(12, 14) : BOOL
16 : xor(14, 10) : BOOL
17 : and(15, 16) : BOOL
18 : iff(10, 17) : BOOL
19 : not(18) : BOOL
20 : or(5, 19) : BOOL
21 : 0 : BV:1
22 : ite(20, 6, 21) : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : not(10) : BOOL
12 : ite(11, 1, 2) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.exreg.0.2 : BV:32
10 : bvextract(9, 2, 2) : BV:1
11 : eq(5, 10) : BOOL
12 : iff(8, 11) : BOOL
13 : bvadd(9, 6) : BV:32
14 : bvextract(13, 2, 2) : BV:1
15 : eq(5, 14) : BOOL
16 : xor(11, 15) : BOOL
17 : and(12, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 5, 18) : BV:1
20 : 10 : INT
21 : bvextract(1, 20, 20) : BV:1
22 : eq(5, 21) : BOOL
23 : ite(22, 5, 18) : BV:1
24 : 9 : INT
25 : 8 : INT
26 : bvextract(1, 24, 25) : BV:2
27 : ite(15, 5, 18) : BV:1
28 : 4294967295 { -1 } : BV:32
29 : bvmul(28, 6) : BV:32
30 : eq(9, 29) : BOOL
31 : ite(30, 5, 18) : BV:1
32 : 5 : INT
33 : bvextract(1, 32, 32) : BV:1
34 : 4 : INT
35 : bvextract(13, 34, 34) : BV:1
36 : eq(5, 35) : BOOL
37 : bvextract(9, 34, 34) : BV:1
38 : eq(5, 37) : BOOL
39 : xor(36, 38) : BOOL
40 : ite(39, 5, 18) : BV:1
41 : 3 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 1 : INT
44 : bvextract(1, 43, 43) : BV:1
45 : bvconcat(18, 6) : BV:33
46 : bvconcat(18, 9) : BV:33
47 : bvadd(45, 46) : BV:33
48 : 32 : INT
49 : bvextract(47, 48, 48) : BV:1
50 : eq(5, 49) : BOOL
51 : ite(50, 5, 18) : BV:1
52 : bvconcat(4, 19, 23, 26, 27, 31, 33, 40, 42, 18, 44, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : ite(10, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : not(15) : BOOL
17 : 0 : BV:1
18 : ite(16, 1, 17) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : 4294967295 { -1 } : BV:32
12 : bvmul(11, 3) : BV:32
13 : eq(5, 12) : BOOL
14 : not(13) : BOOL
15 : andnot1(10, 14) : BOOL
16 : ite(15, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : 4294967295 { -1 } : BV:32
17 : bvmul(16, 3) : BV:32
18 : eq(2, 17) : BOOL
19 : andnot2(15, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 1, 20) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : bvconcat(7, 3) : BV:33
9 : bvconcat(7, 1) : BV:33
10 : bvadd(8, 9) : BV:33
11 : 32 : INT
12 : bvextract(10, 11, 11) : BV:1
13 : eq(6, 12) : BOOL
14 : or(5, 13) : BOOL
15 : ite(14, 6, 7) : BV:1
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L12%1%1=>L13%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L13%1%1=>L14%1%1
=dst.exreg.0.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L14%1%1=>L15%1%1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : bvadd(1, 3) : BV:32
8 : 31 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(6, 9) : BOOL
11 : bvextract(3, 8, 8) : BV:1
12 : eq(6, 11) : BOOL
13 : bvextract(1, 8, 8) : BV:1
14 : eq(6, 13) : BOOL
15 : iff(12, 14) : BOOL
16 : xor(14, 10) : BOOL
17 : and(15, 16) : BOOL
18 : iff(10, 17) : BOOL
19 : not(18) : BOOL
20 : or(5, 19) : BOOL
21 : 0 : BV:1
22 : ite(20, 6, 21) : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : not(10) : BOOL
12 : ite(11, 1, 2) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.exreg.0.2 : BV:32
10 : bvextract(9, 2, 2) : BV:1
11 : eq(5, 10) : BOOL
12 : iff(8, 11) : BOOL
13 : bvadd(9, 6) : BV:32
14 : bvextract(13, 2, 2) : BV:1
15 : eq(5, 14) : BOOL
16 : xor(11, 15) : BOOL
17 : and(12, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 5, 18) : BV:1
20 : 10 : INT
21 : bvextract(1, 20, 20) : BV:1
22 : eq(5, 21) : BOOL
23 : ite(22, 5, 18) : BV:1
24 : 9 : INT
25 : 8 : INT
26 : bvextract(1, 24, 25) : BV:2
27 : ite(15, 5, 18) : BV:1
28 : 4294967295 { -1 } : BV:32
29 : bvmul(28, 6) : BV:32
30 : eq(9, 29) : BOOL
31 : ite(30, 5, 18) : BV:1
32 : 5 : INT
33 : bvextract(1, 32, 32) : BV:1
34 : 4 : INT
35 : bvextract(13, 34, 34) : BV:1
36 : eq(5, 35) : BOOL
37 : bvextract(9, 34, 34) : BV:1
38 : eq(5, 37) : BOOL
39 : xor(36, 38) : BOOL
40 : ite(39, 5, 18) : BV:1
41 : 3 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 1 : INT
44 : bvextract(1, 43, 43) : BV:1
45 : bvconcat(18, 6) : BV:33
46 : bvconcat(18, 9) : BV:33
47 : bvadd(45, 46) : BV:33
48 : 32 : INT
49 : bvextract(47, 48, 48) : BV:1
50 : eq(5, 49) : BOOL
51 : ite(50, 5, 18) : BV:1
52 : bvconcat(4, 19, 23, 26, 27, 31, 33, 40, 42, 18, 44, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : ite(10, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : not(15) : BOOL
17 : 0 : BV:1
18 : ite(16, 1, 17) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : 4294967295 { -1 } : BV:32
12 : bvmul(11, 3) : BV:32
13 : eq(5, 12) : BOOL
14 : not(13) : BOOL
15 : andnot1(10, 14) : BOOL
16 : ite(15, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : 4294967295 { -1 } : BV:32
17 : bvmul(16, 3) : BV:32
18 : eq(2, 17) : BOOL
19 : andnot2(15, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 1, 20) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : bvconcat(7, 3) : BV:33
9 : bvconcat(7, 1) : BV:33
10 : bvadd(8, 9) : BV:33
11 : 32 : INT
12 : bvextract(10, 11, 11) : BV:1
13 : eq(6, 12) : BOOL
14 : or(5, 13) : BOOL
15 : ite(14, 6, 7) : BV:1
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L15%1%1=>L16%1%1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.3 : BV:32
8 : 127996 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
11 : dst_symbol_addr.3 : BV:32
12 : 127996 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.3 : BV:32
8 : 127996 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.3 : BV:32
5 : 127996 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L16%1%1=>L17%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L17%1%1=>L18%1%1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L18%1%1=>L19%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L19%1%1=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L3%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L3%1%0 done
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%1
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%0
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%0 done
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L3%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L3%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L3%1%0
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L3%1%0 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%0
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%0 done
=graph_with_simplified_assets.simplified_assumes at L9%1%0=>L9%1%1
=graph_with_simplified_assets.simplified_assumes at L9%1%0=>L9%1%1 done
=graph_with_simplified_assets.simplified_assumes at L9%1%0=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L9%1%0=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%1
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%1 done
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>L12%1%1
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>L12%1%1 done
=graph_with_simplified_assets.simplified_assumes at L12%1%1=>L13%1%1
=graph_with_simplified_assets.simplified_assumes at L12%1%1=>L13%1%1 done
=graph_with_simplified_assets.simplified_assumes at L13%1%1=>L14%1%1
=graph_with_simplified_assets.simplified_assumes at L13%1%1=>L14%1%1 done
=graph_with_simplified_assets.simplified_assumes at L14%1%1=>L15%1%1
=graph_with_simplified_assets.simplified_assumes at L14%1%1=>L15%1%1 done
=graph_with_simplified_assets.simplified_assumes at L15%1%1=>L16%1%1
=graph_with_simplified_assets.simplified_assumes at L15%1%1=>L16%1%1 done
=graph_with_simplified_assets.simplified_assumes at L16%1%1=>L17%1%1
=graph_with_simplified_assets.simplified_assumes at L16%1%1=>L17%1%1 done
=graph_with_simplified_assets.simplified_assumes at L17%1%1=>L18%1%1
=graph_with_simplified_assets.simplified_assumes at L17%1%1=>L18%1%1 done
=graph_with_simplified_assets.simplified_assumes at L18%1%1=>L19%1%1
=graph_with_simplified_assets.simplified_assumes at L18%1%1=>L19%1%1 done
=graph_with_simplified_assets.simplified_assumes at L19%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L19%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1019
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1042
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 0
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1009
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : bvconcat(6, 6, 6, 6) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1010
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1019
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1042
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1010
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 0
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%0
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%0 for loc_id 1009
1 : input.dst.exreg.2.2 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : bvconcat(4, 4, 4, 4) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L3%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L3%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839324 { -127972 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 127972 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 127988 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839324 { -127972 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127972 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 127972 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 127988 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839324 { -127972 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127972 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 127988 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839324 { -127972 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1008
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.3 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839324 { -127972 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127972 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 127988 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 127972 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 127972 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 127988 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1031
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : memlabel-mem-heap : MEMLABEL
41 : memmask(39, 40) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : memlabel-mem-symbol.2.0 : MEMLABEL
41 : memmask(39, 40) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : memlabel-mem-symbol.3.0 : MEMLABEL
41 : memmask(39, 40) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : select(39, 2, 3, 13, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1036
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : 127992 : BV:32
41 : bvadd(3, 40) : BV:32
42 : select(39, 2, 41, 13, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : 127996 : BV:32
41 : bvadd(3, 40) : BV:32
42 : select(39, 2, 41, 13, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : 127996 : BV:32
41 : bvadd(10, 40) : BV:32
42 : select(39, 2, 41, 13, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : 127992 : BV:32
41 : bvadd(10, 40) : BV:32
42 : select(39, 2, 41, 13, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : 127988 : BV:32
41 : bvadd(3, 40) : BV:32
42 : select(39, 2, 41, 13, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvadd(9, 15) : BV:32
17 : 95 : INT
18 : 64 : INT
19 : bvextract(6, 17, 18) : BV:32
20 : 8 : BV:32
21 : bvadd(10, 4, 20) : BV:32
22 : select(1, 2, 21, 13, 14) : BV:32
23 : bvadd(19, 22) : BV:32
24 : 63 : INT
25 : 32 : INT
26 : bvextract(6, 24, 25) : BV:32
27 : 4 : BV:32
28 : bvadd(10, 27, 4) : BV:32
29 : select(1, 2, 28, 13, 14) : BV:32
30 : bvadd(26, 29) : BV:32
31 : 31 : INT
32 : 0 : INT
33 : bvextract(6, 31, 32) : BV:32
34 : bvadd(10, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvadd(33, 35) : BV:32
37 : bvconcat(16, 23, 30, 36) : BV:128
38 : 16 : INT
39 : store(1, 2, 5, 37, 38, 14) : ARRAY[BV:32 -> BV:8]
40 : 127988 : BV:32
41 : bvadd(10, 40) : BV:32
42 : select(39, 2, 41, 13, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1016
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(5, 18, 19) : BV:32
21 : bvextract(1, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1031
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-heap : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 4 : INT
12 : select(10, 2, 3, 11, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1036
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 127992 : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : select(10, 2, 12, 13, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 127996 : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : select(10, 2, 12, 13, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.3 : BV:32
12 : 127996 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : select(10, 2, 13, 14, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.3 : BV:32
12 : 127992 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : select(10, 2, 13, 14, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : 127988 : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : select(10, 2, 12, 13, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.3 : BV:32
12 : 127988 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : select(10, 2, 13, 14, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839308 { -127988 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839308 { -127988 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 127988 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(1, 2) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839308 { -127988 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839308 { -127988 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839308 { -127988 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 127988 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 127988 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1020
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1021
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1022
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1023
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1024
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1025
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1026
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1027
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1028
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1029
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 for loc_id 1030
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L3%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1020
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1021
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1022
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1023
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1024
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1025
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1026
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1027
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1028
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1029
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 for loc_id 1030
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>L9%1%1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>L9%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 127988 : BV:32
8 : bvadd(3, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 7) : BV:32
11 : select(1, 2, 10, 4, 5) : BV:32
12 : bvadd(6, 11) : BV:32
13 : store(1, 2, 8, 12, 4, 5) : ARRAY[BV:32 -> BV:8]
14 : 127992 : BV:32
15 : bvadd(9, 14) : BV:32
16 : select(13, 2, 15, 4, 5) : BV:32
17 : bvadd(6, 16) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1014
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1016
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1017
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1018
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1020
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1021
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1023
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1024
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1025
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1026
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1027
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 127988 : BV:32
8 : bvadd(3, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 7) : BV:32
11 : select(1, 2, 10, 4, 5) : BV:32
12 : bvadd(6, 11) : BV:32
13 : store(1, 2, 8, 12, 4, 5) : ARRAY[BV:32 -> BV:8]
14 : 127992 : BV:32
15 : bvadd(9, 14) : BV:32
16 : select(13, 2, 15, 4, 5) : BV:32
17 : bvadd(6, 16) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1031
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 3, 6, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 5, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
14 : 127996 : BV:32
15 : bvadd(3, 14) : BV:32
16 : bvadd(9, 14) : BV:32
17 : select(13, 2, 16, 6, 7) : BV:32
18 : bvadd(8, 17) : BV:32
19 : store(13, 2, 15, 18, 6, 7) : ARRAY[BV:32 -> BV:8]
20 : 127992 : BV:32
21 : bvadd(3, 20) : BV:32
22 : bvadd(9, 20) : BV:32
23 : select(13, 2, 22, 6, 7) : BV:32
24 : bvadd(8, 23) : BV:32
25 : store(19, 2, 21, 24, 6, 7) : ARRAY[BV:32 -> BV:8]
26 : memlabel-mem-heap : MEMLABEL
27 : memmask(25, 26) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 3, 6, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 5, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
14 : 127996 : BV:32
15 : bvadd(3, 14) : BV:32
16 : bvadd(9, 14) : BV:32
17 : select(13, 2, 16, 6, 7) : BV:32
18 : bvadd(8, 17) : BV:32
19 : store(13, 2, 15, 18, 6, 7) : ARRAY[BV:32 -> BV:8]
20 : 127992 : BV:32
21 : bvadd(3, 20) : BV:32
22 : bvadd(9, 20) : BV:32
23 : select(13, 2, 22, 6, 7) : BV:32
24 : bvadd(8, 23) : BV:32
25 : store(19, 2, 21, 24, 6, 7) : ARRAY[BV:32 -> BV:8]
26 : memlabel-mem-symbol.2.0 : MEMLABEL
27 : memmask(25, 26) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 3, 6, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 5, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
14 : 127996 : BV:32
15 : bvadd(3, 14) : BV:32
16 : bvadd(9, 14) : BV:32
17 : select(13, 2, 16, 6, 7) : BV:32
18 : bvadd(8, 17) : BV:32
19 : store(13, 2, 15, 18, 6, 7) : ARRAY[BV:32 -> BV:8]
20 : 127992 : BV:32
21 : bvadd(3, 20) : BV:32
22 : bvadd(9, 20) : BV:32
23 : select(13, 2, 22, 6, 7) : BV:32
24 : bvadd(8, 23) : BV:32
25 : store(19, 2, 21, 24, 6, 7) : ARRAY[BV:32 -> BV:8]
26 : memlabel-mem-symbol.3.0 : MEMLABEL
27 : memmask(25, 26) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1036
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 127988 : BV:32
8 : bvadd(3, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 7) : BV:32
11 : select(1, 2, 10, 4, 5) : BV:32
12 : bvadd(6, 11) : BV:32
13 : store(1, 2, 8, 12, 4, 5) : ARRAY[BV:32 -> BV:8]
14 : 127992 : BV:32
15 : bvadd(9, 14) : BV:32
16 : select(13, 2, 15, 4, 5) : BV:32
17 : bvadd(6, 16) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1037
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 127988 : BV:32
8 : bvadd(3, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 7) : BV:32
11 : select(1, 2, 10, 4, 5) : BV:32
12 : bvadd(6, 11) : BV:32
13 : store(1, 2, 8, 12, 4, 5) : ARRAY[BV:32 -> BV:8]
14 : 127996 : BV:32
15 : bvadd(9, 14) : BV:32
16 : select(13, 2, 15, 4, 5) : BV:32
17 : bvadd(6, 16) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 3, 6, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 5, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
14 : 127996 : BV:32
15 : bvadd(3, 14) : BV:32
16 : bvadd(9, 14) : BV:32
17 : select(13, 2, 16, 6, 7) : BV:32
18 : bvadd(8, 17) : BV:32
19 : store(13, 2, 15, 18, 6, 7) : ARRAY[BV:32 -> BV:8]
20 : 127992 : BV:32
21 : bvadd(3, 20) : BV:32
22 : bvadd(9, 20) : BV:32
23 : select(13, 2, 22, 6, 7) : BV:32
24 : bvadd(8, 23) : BV:32
25 : store(19, 2, 21, 24, 6, 7) : ARRAY[BV:32 -> BV:8]
26 : select(25, 2, 16, 6, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 3, 6, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 5, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
14 : 127996 : BV:32
15 : bvadd(3, 14) : BV:32
16 : bvadd(9, 14) : BV:32
17 : select(13, 2, 16, 6, 7) : BV:32
18 : bvadd(8, 17) : BV:32
19 : store(13, 2, 15, 18, 6, 7) : ARRAY[BV:32 -> BV:8]
20 : 127992 : BV:32
21 : bvadd(3, 20) : BV:32
22 : bvadd(9, 20) : BV:32
23 : select(13, 2, 22, 6, 7) : BV:32
24 : bvadd(8, 23) : BV:32
25 : store(19, 2, 21, 24, 6, 7) : ARRAY[BV:32 -> BV:8]
26 : select(25, 2, 22, 6, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1040
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : dst_symbol_addr.3 : BV:32
8 : 127988 : BV:32
9 : bvadd(7, 8) : BV:32
10 : select(1, 2, 9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 3, 6, 7) : BV:32
9 : dst_symbol_addr.3 : BV:32
10 : bvadd(9, 4) : BV:32
11 : select(1, 2, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 5, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
14 : 127996 : BV:32
15 : bvadd(3, 14) : BV:32
16 : bvadd(9, 14) : BV:32
17 : select(13, 2, 16, 6, 7) : BV:32
18 : bvadd(8, 17) : BV:32
19 : store(13, 2, 15, 18, 6, 7) : ARRAY[BV:32 -> BV:8]
20 : 127992 : BV:32
21 : bvadd(3, 20) : BV:32
22 : bvadd(9, 20) : BV:32
23 : select(13, 2, 22, 6, 7) : BV:32
24 : bvadd(8, 23) : BV:32
25 : store(19, 2, 21, 24, 6, 7) : ARRAY[BV:32 -> BV:8]
26 : select(25, 2, 10, 6, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%0=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 2
1 : input.dst.exreg.0.2 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : not(15) : BOOL
17 : 0 : BV:1
18 : ite(16, 1, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : 4294967295 { -1 } : BV:32
12 : bvmul(11, 3) : BV:32
13 : eq(5, 12) : BOOL
14 : not(13) : BOOL
15 : andnot1(10, 14) : BOOL
16 : ite(15, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : 4294967295 { -1 } : BV:32
17 : bvmul(16, 3) : BV:32
18 : eq(2, 17) : BOOL
19 : andnot2(15, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 1, 20) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1004
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : bvconcat(7, 3) : BV:33
9 : bvconcat(7, 1) : BV:33
10 : bvadd(8, 9) : BV:33
11 : 32 : INT
12 : bvextract(10, 11, 11) : BV:1
13 : eq(6, 12) : BOOL
14 : or(5, 13) : BOOL
15 : ite(14, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1005
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : bvadd(1, 3) : BV:32
8 : 31 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(6, 9) : BOOL
11 : bvextract(3, 8, 8) : BV:1
12 : eq(6, 11) : BOOL
13 : bvextract(1, 8, 8) : BV:1
14 : eq(6, 13) : BOOL
15 : iff(12, 14) : BOOL
16 : xor(14, 10) : BOOL
17 : and(15, 16) : BOOL
18 : iff(10, 17) : BOOL
19 : not(18) : BOOL
20 : or(5, 19) : BOOL
21 : 0 : BV:1
22 : ite(20, 6, 21) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : not(10) : BOOL
12 : ite(11, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.exreg.0.2 : BV:32
10 : bvextract(9, 2, 2) : BV:1
11 : eq(5, 10) : BOOL
12 : iff(8, 11) : BOOL
13 : bvadd(9, 6) : BV:32
14 : bvextract(13, 2, 2) : BV:1
15 : eq(5, 14) : BOOL
16 : xor(11, 15) : BOOL
17 : and(12, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 5, 18) : BV:1
20 : 10 : INT
21 : bvextract(1, 20, 20) : BV:1
22 : eq(5, 21) : BOOL
23 : ite(22, 5, 18) : BV:1
24 : 9 : INT
25 : 8 : INT
26 : bvextract(1, 24, 25) : BV:2
27 : ite(15, 5, 18) : BV:1
28 : 4294967295 { -1 } : BV:32
29 : bvmul(28, 6) : BV:32
30 : eq(9, 29) : BOOL
31 : ite(30, 5, 18) : BV:1
32 : 5 : INT
33 : bvextract(1, 32, 32) : BV:1
34 : 4 : INT
35 : bvextract(13, 34, 34) : BV:1
36 : eq(5, 35) : BOOL
37 : bvextract(9, 34, 34) : BV:1
38 : eq(5, 37) : BOOL
39 : xor(36, 38) : BOOL
40 : ite(39, 5, 18) : BV:1
41 : 3 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 1 : INT
44 : bvextract(1, 43, 43) : BV:1
45 : bvconcat(18, 6) : BV:33
46 : bvconcat(18, 9) : BV:33
47 : bvadd(45, 46) : BV:33
48 : 32 : INT
49 : bvextract(47, 48, 48) : BV:1
50 : eq(5, 49) : BOOL
51 : ite(50, 5, 18) : BV:1
52 : bvconcat(4, 19, 23, 26, 27, 31, 33, 40, 42, 18, 44, 51) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1014
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1015
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1016
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1031
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-heap : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.3.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.3 : BV:32
11 : 127996 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.3 : BV:32
11 : 127992 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1040
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.3 : BV:32
11 : bvadd(10, 4) : BV:32
12 : select(9, 2, 11, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 2
1 : input.dst.exreg.0.2 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : not(15) : BOOL
17 : 0 : BV:1
18 : ite(16, 1, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : 4294967295 { -1 } : BV:32
12 : bvmul(11, 3) : BV:32
13 : eq(5, 12) : BOOL
14 : not(13) : BOOL
15 : andnot1(10, 14) : BOOL
16 : ite(15, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : 4294967295 { -1 } : BV:32
17 : bvmul(16, 3) : BV:32
18 : eq(2, 17) : BOOL
19 : andnot2(15, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 1, 20) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1004
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : bvconcat(7, 3) : BV:33
9 : bvconcat(7, 1) : BV:33
10 : bvadd(8, 9) : BV:33
11 : 32 : INT
12 : bvextract(10, 11, 11) : BV:1
13 : eq(6, 12) : BOOL
14 : or(5, 13) : BOOL
15 : ite(14, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1005
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : bvadd(1, 3) : BV:32
8 : 31 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(6, 9) : BOOL
11 : bvextract(3, 8, 8) : BV:1
12 : eq(6, 11) : BOOL
13 : bvextract(1, 8, 8) : BV:1
14 : eq(6, 13) : BOOL
15 : iff(12, 14) : BOOL
16 : xor(14, 10) : BOOL
17 : and(15, 16) : BOOL
18 : iff(10, 17) : BOOL
19 : not(18) : BOOL
20 : or(5, 19) : BOOL
21 : 0 : BV:1
22 : ite(20, 6, 21) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : not(10) : BOOL
12 : ite(11, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.2 : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(3, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : bvextract(2, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : iff(9, 11) : BOOL
13 : xor(11, 7) : BOOL
14 : and(12, 13) : BOOL
15 : iff(7, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.exreg.0.2 : BV:32
10 : bvextract(9, 2, 2) : BV:1
11 : eq(5, 10) : BOOL
12 : iff(8, 11) : BOOL
13 : bvadd(9, 6) : BV:32
14 : bvextract(13, 2, 2) : BV:1
15 : eq(5, 14) : BOOL
16 : xor(11, 15) : BOOL
17 : and(12, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 5, 18) : BV:1
20 : 10 : INT
21 : bvextract(1, 20, 20) : BV:1
22 : eq(5, 21) : BOOL
23 : ite(22, 5, 18) : BV:1
24 : 9 : INT
25 : 8 : INT
26 : bvextract(1, 24, 25) : BV:2
27 : ite(15, 5, 18) : BV:1
28 : 4294967295 { -1 } : BV:32
29 : bvmul(28, 6) : BV:32
30 : eq(9, 29) : BOOL
31 : ite(30, 5, 18) : BV:1
32 : 5 : INT
33 : bvextract(1, 32, 32) : BV:1
34 : 4 : INT
35 : bvextract(13, 34, 34) : BV:1
36 : eq(5, 35) : BOOL
37 : bvextract(9, 34, 34) : BV:1
38 : eq(5, 37) : BOOL
39 : xor(36, 38) : BOOL
40 : ite(39, 5, 18) : BV:1
41 : 3 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 1 : INT
44 : bvextract(1, 43, 43) : BV:1
45 : bvconcat(18, 6) : BV:33
46 : bvconcat(18, 9) : BV:33
47 : bvadd(45, 46) : BV:33
48 : 32 : INT
49 : bvextract(47, 48, 48) : BV:1
50 : eq(5, 49) : BOOL
51 : ite(50, 5, 18) : BV:1
52 : bvconcat(4, 19, 23, 26, 27, 31, 33, 40, 42, 18, 44, 51) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1014
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1015
1 : input.dst.exreg.0.2 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : eq(1, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1016
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.exreg.0.2 : BV:32
6 : bvconcat(2, 5) : BV:33
7 : bvadd(4, 6) : BV:33
8 : 32 : INT
9 : bvextract(7, 8, 8) : BV:1
10 : eq(1, 9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.3 : BV:32
5 : 127996 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(2, 3, 6, 7, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : not(20) : BOOL
22 : andnot1(12, 21) : BOOL
23 : ite(22, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 4294967295 { -1 } : BV:32
24 : bvmul(23, 10) : BV:32
25 : eq(2, 24) : BOOL
26 : andnot2(22, 25) : BOOL
27 : 0 : BV:1
28 : ite(26, 1, 27) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : bvconcat(14, 1) : BV:33
16 : bvconcat(14, 10) : BV:33
17 : bvadd(15, 16) : BV:33
18 : 32 : INT
19 : bvextract(17, 18, 18) : BV:1
20 : eq(13, 19) : BOOL
21 : or(12, 20) : BOOL
22 : ite(21, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : not(22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 10) : BV:32
26 : eq(2, 25) : BOOL
27 : or(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.3 : BV:32
8 : 127996 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : not(17) : BOOL
19 : ite(18, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 31 : INT
13 : bvextract(11, 12, 12) : BV:1
14 : eq(1, 13) : BOOL
15 : bvextract(2, 12, 12) : BV:1
16 : eq(1, 15) : BOOL
17 : bvextract(10, 12, 12) : BV:1
18 : eq(1, 17) : BOOL
19 : iff(16, 18) : BOOL
20 : xor(16, 14) : BOOL
21 : and(19, 20) : BOOL
22 : iff(14, 21) : BOOL
23 : 0 : BV:1
24 : ite(22, 1, 23) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
11 : dst_symbol_addr.3 : BV:32
12 : 127996 : BV:32
13 : bvadd(11, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(9, 10, 13, 14, 15) : BV:32
17 : bvextract(16, 2, 2) : BV:1
18 : eq(5, 17) : BOOL
19 : iff(8, 18) : BOOL
20 : bvadd(6, 16) : BV:32
21 : bvextract(20, 2, 2) : BV:1
22 : eq(5, 21) : BOOL
23 : xor(8, 22) : BOOL
24 : and(19, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 5, 25) : BV:1
27 : 10 : INT
28 : bvextract(1, 27, 27) : BV:1
29 : eq(5, 28) : BOOL
30 : ite(29, 5, 25) : BV:1
31 : 9 : INT
32 : 8 : INT
33 : bvextract(1, 31, 32) : BV:2
34 : ite(22, 5, 25) : BV:1
35 : 4294967295 { -1 } : BV:32
36 : bvmul(35, 16) : BV:32
37 : eq(6, 36) : BOOL
38 : ite(37, 5, 25) : BV:1
39 : 5 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvextract(20, 14, 14) : BV:1
42 : eq(5, 41) : BOOL
43 : bvextract(6, 14, 14) : BV:1
44 : eq(5, 43) : BOOL
45 : xor(42, 44) : BOOL
46 : ite(45, 5, 25) : BV:1
47 : 3 : INT
48 : bvextract(1, 47, 47) : BV:1
49 : 1 : INT
50 : bvextract(1, 49, 49) : BV:1
51 : bvconcat(25, 6) : BV:33
52 : bvconcat(25, 16) : BV:33
53 : bvadd(51, 52) : BV:33
54 : 32 : INT
55 : bvextract(53, 54, 54) : BV:1
56 : eq(5, 55) : BOOL
57 : ite(56, 5, 25) : BV:1
58 : bvconcat(4, 26, 30, 33, 34, 38, 40, 46, 48, 25, 50, 57) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
5 : dst_symbol_addr.3 : BV:32
6 : 127996 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(3, 4, 7, 8, 9) : BV:32
11 : bvmul(2, 10) : BV:32
12 : eq(1, 11) : BOOL
13 : not(12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1016
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.3 : BV:32
8 : 127996 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:32
13 : bvconcat(2, 12) : BV:33
14 : bvadd(4, 13) : BV:33
15 : 32 : INT
16 : bvextract(14, 15, 15) : BV:1
17 : eq(1, 16) : BOOL
18 : ite(17, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1031
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-heap : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.3.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1037
1 : input.dst.exreg.0.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.3 : BV:32
11 : bvadd(10, 4) : BV:32
12 : select(9, 2, 11, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.3 : BV:32
11 : 127992 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.3 : BV:32
11 : 127988 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>L17%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1014
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 for loc_id 1016
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L17%1%1=>L18%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1031
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-heap : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.3.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1036
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1038
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.3 : BV:32
11 : 127996 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1039
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.3 : BV:32
11 : bvadd(10, 4) : BV:32
12 : select(9, 2, 11, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 for loc_id 1041
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.2 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : dst_symbol_addr.3 : BV:32
11 : 127988 : BV:32
12 : bvadd(10, 11) : BV:32
13 : select(9, 2, 12, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L18%1%1=>L19%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 for loc_id 1017
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 for loc_id 1018
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 for loc_id 1020
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 for loc_id 1021
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 for loc_id 1023
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 for loc_id 1024
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 for loc_id 1025
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 for loc_id 1026
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 for loc_id 1027
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L19%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in dst
=Loc 0 in dst.
REGMEM
dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=Loc 2 in dst.
REGMEM
dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=Loc 3 in dst.
REGMEM
dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=Loc 4 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 5 in dst.
REGMEM
dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=Loc 6 in dst.
REGMEM
dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=Loc 7 in dst.
REGMEM
dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=Loc 1001 in dst.
REGMEM
dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=Loc 1002 in dst.
REGMEM
dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=Loc 1003 in dst.
REGMEM
dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=Loc 1004 in dst.
REGMEM
dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=Loc 1005 in dst.
REGMEM
dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=Loc 1006 in dst.
REGMEM
dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=Loc 1007 in dst.
REGMEM
dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=Loc 1008 in dst.
REGMEM
dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=Loc 1009 in dst.
REGMEM
dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=Loc 1010 in dst.
REGMEM
dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=Loc 1011 in dst.
REGMEM
dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=Loc 1012 in dst.
REGMEM
dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=Loc 1013 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 1014 in dst.
REGMEM
dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=Loc 1015 in dst.
REGMEM
dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=Loc 1016 in dst.
REGMEM
dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=Loc 1017 in dst.
LLVMVAR
dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Loc 1018 in dst.
REGMEM
dst.esp.E0%0%1
1 : input.dst.esp.E0%0%1 : BV:32
=Loc 1019 in dst.
REGMEM
dst.esp.L0%1%1
1 : input.dst.esp.L0%1%1 : BV:32
=Loc 1020 in dst.
REGMEM
dst.hidden_reg.0
1 : input.dst.hidden_reg.0 : BV:32
=Loc 1021 in dst.
REGMEM
dst.hidden_reg.1
1 : input.dst.hidden_reg.1 : BOOL
=Loc 1022 in dst.
REGMEM
dst.hidden_reg.10
1 : input.dst.hidden_reg.10 : BOOL
=Loc 1023 in dst.
REGMEM
dst.hidden_reg.2
1 : input.dst.hidden_reg.2 : BOOL
=Loc 1024 in dst.
REGMEM
dst.hidden_reg.3
1 : input.dst.hidden_reg.3 : BOOL
=Loc 1025 in dst.
REGMEM
dst.hidden_reg.4
1 : input.dst.hidden_reg.4 : BOOL
=Loc 1026 in dst.
REGMEM
dst.hidden_reg.5
1 : input.dst.hidden_reg.5 : BOOL
=Loc 1027 in dst.
REGMEM
dst.hidden_reg.6
1 : input.dst.hidden_reg.6 : BOOL
=Loc 1028 in dst.
REGMEM
dst.hidden_reg.7
1 : input.dst.hidden_reg.7 : BOOL
=Loc 1029 in dst.
REGMEM
dst.hidden_reg.8
1 : input.dst.hidden_reg.8 : BOOL
=Loc 1030 in dst.
REGMEM
dst.hidden_reg.9
1 : input.dst.hidden_reg.9 : BOOL
=Loc 1031 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-heap
=Loc 1032 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-esp
=Loc 1033 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1034 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.3.0
=Loc 1035 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 1036 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1037 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
2 : 127996 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1038 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.3 : BV:32
2 : 127996 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1039 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.3 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1040 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1041 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.3 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
4
=bigendian
false
=Loc 1042 in dst.
SLOT
=memname
dst.mem
=addr
1 : input_stack_pointer_const : BV:32
=nbytes
4
=bigendian
false
=Loc 1043 in dst.
REGMEM
econd
1 : input.econd : BOOL

=Alias analysis results in dst
=Alias analysis result in dst at L0%0%1
=Alias analysis result in dst at L0%0%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 3 (input.dst.exreg.0.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 4 (input.dst.exreg.0.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 5 (input.dst.exreg.0.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 6 (input.dst.exreg.0.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 7 (input.dst.exreg.0.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1019 (input.dst.esp.L0%1%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1025 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1026 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1027 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1028 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1029 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1030 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1031 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1035 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127992), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127996), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127996), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127992), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127988), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1041 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127988), 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1042 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1043 (input.econd)
nullptr
=Alias analysis result in dst at L3%1%0
=Alias analysis result in dst at L3%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L3%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L3%1%0 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1025 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1026 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1027 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1028 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1029 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1030 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1031 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1035 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127992), 4, false))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127996), 4, false))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127996), 4, false))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127992), 4, false))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127988), 4, false))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1041 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127988), 4, false))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1042 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 1043 (input.econd)
nullptr
=Alias analysis result in dst at L8%1%1
=Alias analysis result in dst at L8%1%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L8%1%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L8%1%1 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1025 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1026 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1027 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1028 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1029 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1030 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1031 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1035 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127992), 4, false))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127996), 4, false))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127996), 4, false))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127992), 4, false))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127988), 4, false))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1041 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127988), 4, false))
nullptr
=Alias analysis result in dst at L8%1%1 for loc 1042 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%1 for loc 1043 (input.econd)
nullptr
=Alias analysis result in dst at L9%1%0
=Alias analysis result in dst at L9%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L9%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L9%1%0 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1025 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1026 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1027 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1028 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1029 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1030 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1031 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1035 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127992), 4, false))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127996), 4, false))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127996), 4, false))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127992), 4, false))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127988), 4, false))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1041 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127988), 4, false))
nullptr
=Alias analysis result in dst at L9%1%0 for loc 1042 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%0 for loc 1043 (input.econd)
nullptr
=Alias analysis result in dst at E0%0%1
=Alias analysis result in dst at E0%0%1 for loc 0 (input.dst.exreg.0.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1001 (input.dst.exreg.10.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1002 (input.dst.exreg.11.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1003 (input.dst.exreg.12.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1004 (input.dst.exreg.13.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1005 (input.dst.exreg.14.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1006 (input.dst.exreg.15.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1007 (input.dst.exreg.16.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1014 (input.dst.exreg.7.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1015 (input.dst.exreg.8.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1016 (input.dst.exreg.9.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1017 (input.dst.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1018 (input.dst.esp.E0%0%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1025 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1026 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1027 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1028 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1029 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1030 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1031 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1035 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1036 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127992), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1037 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127996), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1038 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127996), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1039 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127992), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1040 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.2, 127988), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1041 (select(input.dst.mem, memlabel-mem-symbol.2.0-symbol.3.0-heap, bvadd(dst_symbol_addr.3, 127988), 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1042 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1043 (input.econd)
nullptr

=Liveness in dst
=live locs at L0%0%1
1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041
=live locs at L3%1%0
0, 1009, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041
=live locs at L8%1%1
0, 1009, 1015, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041
=live locs at L9%1%0
1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041
=live locs at E0%0%1
0, 1017, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041

=Available expressions in dst

=sprel_maps in dst
=sprel_map at L0%0%1 in dst
=sprel_map at L3%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1042
17387 : retaddr_const : BV:32
=sprel_map at L8%1%1 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1042
17387 : retaddr_const : BV:32
=sprel_map at L9%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1042
17387 : retaddr_const : BV:32
=sprel_map at E0%0%1 in dst
=loc 0
17389 : 0 : BV:32
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
17423 : 4 : BV:32
18219 : bvadd(17386, 17423) : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1001
17643 : 0 : BV:1
=loc 1002
17643 : 0 : BV:1
=loc 1003
17643 : 0 : BV:1
=loc 1004
17631 : 1 : BV:1
=loc 1005
17631 : 1 : BV:1
=loc 1006
17631 : 1 : BV:1
=loc 1007
17631 : 1 : BV:1
=loc 1014
17631 : 1 : BV:1
=loc 1015
17643 : 0 : BV:1
=loc 1016
17643 : 0 : BV:1
=loc 1017
17387 : retaddr_const : BV:32
=loc 1018
17386 : input_stack_pointer_const : BV:32
17423 : 4 : BV:32
18219 : bvadd(17386, 17423) : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1042
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=eqcheck_info
=eqcheck
=proof_filename s113_s113.gcc.eqchecker.O3.i386.ALL.proof
=function_name s113
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: movd %exvr5.3w:C_SYMBOL0,%exvr2.2 #
.i1: movl $0x4,%exvr0.0d #
.i2: pshufd $0x0,%exvr2.2,%exvr2.1 #
.i3: movdqu %exvr5.3w:C_SYMBOL1(%exvr0.0d),%exvr2.0 #
.i4: addl $0x10,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i5: paddd %exvr2.1,%exvr2.0 #
.i6: movups %exvr2.0,%exvr5.3w:C_SYMBOL0*1+-16/umask/32(%exvr0.0d) #
.i7: cmpl $0x1f3f4,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i8: jne .i3 #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i9: movl %exvr5.3w:C_SYMBOL0,%exvr0.0d #
.i10: movl %exvr5.3w:C_SYMBOL1*1+127988/umask/32,%exvr0.2d #
.i11: addl %exvr0.0d,%exvr0.2d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i12: movl %exvr0.2d,%exvr5.3w:C_SYMBOL0*1+127988/umask/32 #
.i13: movl %exvr5.3w:C_SYMBOL1*1+127992/umask/32,%exvr0.2d #
.i14: addl %exvr0.0d,%exvr0.2d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i15: addl %exvr5.3w:C_SYMBOL1*1+127996/umask/32,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i16: movl %exvr0.0d,%exvr5.3w:C_SYMBOL0*1+127996/umask/32 #
.i17: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i18: movl %exvr0.2d,%exvr5.3w:C_SYMBOL0*1+127992/umask/32 #
.i19: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x4
2 : 0xc
3 : 0x11
4 : 0x16
5 : 0x1d
6 : 0x20
7 : 0x28
8 : 0x2b
9 : 0x2f
10 : 0x36
11 : 0x3b
12 : 0x3d
13 : 0x42
14 : 0x48
15 : 0x4a
16 : 0x50
17 : 0x56
18 : 0x58
19 : 0x5e
=dst_insn_pcs done
=Memlabel assertions
=Symbol-map:
C_SYMBOL2 : a : 128000 : 16 : 0
C_SYMBOL3 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.3.0_begin : BV:32
11 : memlabel-mem-symbol.3.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-esp_begin : BV:32
18 : memlabel-mem-esp_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : stack.size : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : bvuge(1, 10) : BOOL
27 : bvule(1, 11) : BOOL
28 : and(26, 27) : BOOL
29 : bvuge(2, 10) : BOOL
30 : bvule(2, 11) : BOOL
31 : and(29, 30) : BOOL
32 : not(31) : BOOL
33 : andnot1(28, 32) : BOOL
34 : bvuge(1, 17) : BOOL
35 : bvule(1, 18) : BOOL
36 : and(34, 35) : BOOL
37 : bvuge(2, 17) : BOOL
38 : bvule(2, 18) : BOOL
39 : and(37, 38) : BOOL
40 : not(39) : BOOL
41 : andnot1(36, 40) : BOOL
42 : and(33, 41) : BOOL
43 : bvuge(10, 1) : BOOL
44 : bvule(10, 2) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(11, 1) : BOOL
47 : bvule(11, 2) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(10, 17) : BOOL
53 : bvule(10, 18) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(11, 17) : BOOL
56 : bvule(11, 18) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(17, 1) : BOOL
62 : bvule(17, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(18, 1) : BOOL
65 : bvule(18, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(17, 10) : BOOL
71 : bvule(17, 11) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(18, 10) : BOOL
74 : bvule(18, 11) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : and(25, 78) : BOOL
80 : symbol.2 : BV:32
81 : 15 : BV:32
82 : bvand(80, 81) : BV:32
83 : 0 : BV:32
84 : eq(82, 83) : BOOL
85 : and(79, 84) : BOOL
86 : symbol.3 : BV:32
87 : bvand(86, 81) : BV:32
88 : eq(87, 83) : BOOL
89 : and(85, 88) : BOOL
90 : eq(80, 1) : BOOL
91 : eq(86, 10) : BOOL
92 : and(90, 91) : BOOL
93 : and(89, 92) : BOOL
94 : input_stack_pointer_const : BV:32
95 : bvule(17, 94) : BOOL
96 : bvule(94, 18) : BOOL
97 : and(95, 96) : BOOL
98 : 3 : BV:32
99 : bvadd(94, 98) : BV:32
100 : eq(99, 18) : BOOL
101 : and(97, 100) : BOOL
102 : and(93, 101) : BOOL
103 : 4294963200 { -4096 } : BV:32
104 : bvand(17, 103) : BV:32
105 : eq(104, 17) : BOOL
106 : 1 : BV:32
107 : bvadd(18, 106) : BV:32
108 : bvand(107, 103) : BV:32
109 : eq(108, 107) : BOOL
110 : and(105, 109) : BOOL
111 : and(102, 110) : BOOL
112 : dst_symbol_addr.2 : BV:32
113 : eq(80, 112) : BOOL
114 : dst_symbol_addr.3 : BV:32
115 : eq(86, 114) : BOOL
116 : and(113, 115) : BOOL
117 : and(111, 116) : BOOL
=concrete_assertion
1 : symbol.2 : BV:32
2 : 3236314128 { -1058653168 } : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.3 : BV:32
5 : 3222678528 { -1072288768 } : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : dst_symbol_addr.2 : BV:32
9 : eq(8, 2) : BOOL
10 : and(7, 9) : BOOL
11 : dst_symbol_addr.3 : BV:32
12 : eq(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : input_stack_pointer_const : BV:32
15 : 3221762044 { -1073205252 } : BV:32
16 : eq(14, 15) : BOOL
17 : and(13, 16) : BOOL
18 : memlabel-mem-symbol.2.0_begin : BV:32
19 : eq(18, 2) : BOOL
20 : and(17, 19) : BOOL
21 : memlabel-mem-symbol.2.0_end : BV:32
22 : 3236442127 { -1058525169 } : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.3.0_begin : BV:32
26 : eq(25, 5) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.3.0_end : BV:32
29 : 3222806527 { -1072160769 } : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 12845056 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 3221762047 { -1073205249 } : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 3208916992 { -1086050304 } : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
=use_concrete_assertion : 1
=Memlabel assertions done
=llvm2ir 0
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%1_L0%0%1 Lfor.body%1%1_L3%1%0 E0%0%1_E0%0%1
=Edges:
L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
Lfor.body%1%1_L3%1%0 => E0%0%1_E0%0%1
=graph done
=Node outputs: E0%0%1_E0%0%1
=Node outputs done for E0%0%1_E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL2 : a : 128000 : 16 : 0
C_SYMBOL3 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=state_end

=Node assumes and asserts: L0%0%1_L0%0%1
=L0%0%1_L0%0%1 assume pred 0
=Comment
precond-memmask-memlabel-mem-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=L0%0%1_L0%0%1 assume predicate_set done
=L0%0%1_L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1_L3%1%0
=Lfor.body%1%1_L3%1%0 assume predicate_set done
=Lfor.body%1%1_L3%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1_E0%0%1
=E0%0%1_E0%0%1 assume predicate_set done
=E0%0%1_E0%0%1 assert pred 0
=Comment
precond-memmask-memlabel-mem-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=E0%0%1_E0%0%1 assert pred 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=E0%0%1_E0%0%1 assert pred 2
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.llvm-indir_tgt : BV:32
=predicate done
=E0%0%1_E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.2
mlvar.dst.10 : memlabel-mem-esp
=memlabel_map.3
mlvar.dst.11 : memlabel-mem-esp
=memlabel_map.4
mlvar.dst.2 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.5
mlvar.dst.3 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.6
mlvar.dst.4 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.7
mlvar.dst.5 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.8
mlvar.dst.6 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.9
mlvar.dst.7 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.10
mlvar.dst.8 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.11
mlvar.dst.9 : memlabel-mem-symbol.2.0-symbol.3.0-heap
=memlabel_map.12
mlvar.llvm.s113.0 : memlabel-mem-symbol.2.0
=memlabel_map.13
mlvar.llvm.s113.1 : memlabel-mem-symbol.3.0
=memlabel_map.14
mlvar.llvm.s113.2 : memlabel-mem-symbol.2.0
=Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L3%1%0 => E0%0%1_E0%0%1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to E0%0%1 at unroll 8 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))+((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge3
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge4
=Edge.src_tfg_full_pathset.Edge: Lfor.end%1%1 => E0%0%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:  ret i32 0, !dbg !87
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L3%1%0 to E0%0%1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*((L8%1%1=>L9%1%0)*(L9%1%0=>E0%0%1)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L9%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L9%1%0 => E0%0%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.5
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
=dst.hidden_reg.6
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127988 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.4 : MEMLABEL
13 : dst_symbol_addr.3 : BV:32
14 : bvmul(13, 7) : BV:32
15 : bvadd(14, 10) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.3 : MEMLABEL
22 : select(1, 21, 3, 16, 17) : BV:32
23 : bvzero_ext(22, 19) : BV:33
24 : bvadd(20, 23) : BV:33
25 : bvextract(24, 5, 6) : BV:32
26 : store(1, 2, 11, 25, 16, 17) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.6 : MEMLABEL
28 : 127992 : BV:64
29 : bvextract(28, 5, 6) : BV:32
30 : bvadd(14, 29) : BV:32
31 : select(26, 27, 30, 16, 17) : BV:32
32 : bvzero_ext(31, 19) : BV:33
33 : bvadd(32, 23) : BV:33
34 : bvextract(33, 5, 6) : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.16.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : bvsign(35) : BV:1
37 : 1 : BV:1
38 : eq(36, 37) : BOOL
39 : not(38) : BOOL
40 : 0 : BV:1
41 : ite(39, 37, 40) : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127988 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.4 : MEMLABEL
13 : dst_symbol_addr.3 : BV:32
14 : bvmul(13, 7) : BV:32
15 : bvadd(14, 10) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.3 : MEMLABEL
22 : select(1, 21, 3, 16, 17) : BV:32
23 : bvzero_ext(22, 19) : BV:33
24 : bvadd(20, 23) : BV:33
25 : bvextract(24, 5, 6) : BV:32
26 : store(1, 2, 11, 25, 16, 17) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.8 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 5, 6) : BV:32
30 : bvadd(8, 29) : BV:32
31 : mlvar.dst.7 : MEMLABEL
32 : bvadd(14, 29) : BV:32
33 : select(26, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : bvadd(23, 34) : BV:33
36 : bvextract(35, 5, 6) : BV:32
37 : store(26, 27, 30, 36, 16, 17) : ARRAY[BV:32 -> BV:8]
38 : mlvar.dst.9 : MEMLABEL
39 : 127992 : BV:64
40 : bvextract(39, 5, 6) : BV:32
41 : bvadd(8, 40) : BV:32
42 : mlvar.dst.6 : MEMLABEL
43 : bvadd(14, 40) : BV:32
44 : select(26, 42, 43, 16, 17) : BV:32
45 : bvzero_ext(44, 19) : BV:33
46 : bvadd(45, 23) : BV:33
47 : bvextract(46, 5, 6) : BV:32
48 : store(37, 38, 41, 47, 16, 17) : ARRAY[BV:32 -> BV:8]
49 : mlvar.dst.10 : MEMLABEL
50 : input.dst.exreg.0.4 : BV:32
51 : select(48, 49, 50, 16, 17) : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127988 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.4 : MEMLABEL
13 : dst_symbol_addr.3 : BV:32
14 : bvmul(13, 7) : BV:32
15 : bvadd(14, 10) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.3 : MEMLABEL
22 : select(1, 21, 3, 16, 17) : BV:32
23 : bvzero_ext(22, 19) : BV:33
24 : bvadd(20, 23) : BV:33
25 : bvextract(24, 5, 6) : BV:32
26 : store(1, 2, 11, 25, 16, 17) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.8 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 5, 6) : BV:32
30 : bvadd(8, 29) : BV:32
31 : mlvar.dst.7 : MEMLABEL
32 : bvadd(14, 29) : BV:32
33 : select(26, 31, 32, 16, 17) : BV:32
34 : bvzero_ext(33, 19) : BV:33
35 : bvadd(23, 34) : BV:33
36 : bvextract(35, 5, 6) : BV:32
37 : store(26, 27, 30, 36, 16, 17) : ARRAY[BV:32 -> BV:8]
38 : mlvar.dst.9 : MEMLABEL
39 : 127992 : BV:64
40 : bvextract(39, 5, 6) : BV:32
41 : bvadd(8, 40) : BV:32
42 : mlvar.dst.6 : MEMLABEL
43 : bvadd(14, 40) : BV:32
44 : select(26, 42, 43, 16, 17) : BV:32
45 : bvzero_ext(44, 19) : BV:33
46 : bvadd(45, 23) : BV:33
47 : bvextract(46, 5, 6) : BV:32
48 : store(37, 38, 41, 47, 16, 17) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : bvsign(35) : BV:1
39 : 1 : BV:1
40 : eq(38, 39) : BOOL
41 : or(37, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 39, 42) : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.4 : MEMLABEL
7 : dst_symbol_addr.3 : BV:32
8 : 1 : BV:64
9 : 0 : INT
10 : bvextract(8, 2, 9) : BV:32
11 : bvmul(7, 10) : BV:32
12 : 127988 : BV:64
13 : bvextract(12, 2, 9) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(5, 6, 14, 15, 16) : BV:32
18 : bvzero_ext(17, 3) : BV:33
19 : mlvar.dst.3 : MEMLABEL
20 : dst_symbol_addr.2 : BV:32
21 : select(5, 19, 20, 15, 16) : BV:32
22 : bvzero_ext(21, 3) : BV:33
23 : bvadd(18, 22) : BV:33
24 : 32 : INT
25 : bvextract(23, 24, 24) : BV:1
26 : 1 : BV:1
27 : eq(25, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 26, 28) : BV:1
30 : bvconcat(4, 29) : BV:32
31 : 5 : INT
32 : bvextract(30, 2, 31) : BV:27
33 : bvextract(23, 2, 9) : BV:32
34 : bvextract(33, 15, 15) : BV:1
35 : eq(34, 26) : BOOL
36 : bvextract(18, 15, 15) : BV:1
37 : eq(36, 26) : BOOL
38 : xor(35, 37) : BOOL
39 : ite(38, 26, 28) : BV:1
40 : 3 : INT
41 : bvextract(30, 40, 9) : BV:4
42 : bvconcat(39, 41) : BV:5
43 : bvconcat(32, 42) : BV:32
44 : 12 : INT
45 : bvextract(43, 2, 44) : BV:20
46 : bvextract(18, 2, 2) : BV:1
47 : eq(46, 26) : BOOL
48 : bvextract(22, 2, 2) : BV:1
49 : eq(48, 26) : BOOL
50 : iff(47, 49) : BOOL
51 : bvextract(18, 2, 9) : BV:32
52 : bvextract(22, 2, 9) : BV:32
53 : bvadd(51, 52) : BV:32
54 : bvextract(53, 2, 2) : BV:1
55 : eq(54, 26) : BOOL
56 : xor(47, 55) : BOOL
57 : and(50, 56) : BOOL
58 : ite(57, 26, 28) : BV:1
59 : 10 : INT
60 : bvextract(43, 59, 9) : BV:11
61 : bvconcat(58, 60) : BV:12
62 : bvconcat(45, 61) : BV:32
63 : 8 : INT
64 : bvextract(62, 2, 63) : BV:24
65 : ite(55, 26, 28) : BV:1
66 : 6 : INT
67 : bvextract(62, 66, 9) : BV:7
68 : bvconcat(65, 67) : BV:8
69 : bvconcat(64, 68) : BV:32
70 : 7 : INT
71 : bvextract(69, 2, 70) : BV:25
72 : 0 : BV:32
73 : eq(33, 72) : BOOL
74 : ite(73, 26, 28) : BV:1
75 : bvextract(69, 31, 9) : BV:6
76 : bvconcat(74, 75) : BV:7
77 : bvconcat(71, 76) : BV:32
78 : bvextract(77, 2, 40) : BV:29
79 : bvextract(77, 3, 9) : BV:2
80 : bvconcat(28, 79) : BV:3
81 : bvconcat(78, 80) : BV:32
82 : 11 : INT
83 : bvextract(81, 2, 82) : BV:21
84 : bvextract(1, 59, 59) : BV:1
85 : eq(84, 26) : BOOL
86 : ite(85, 26, 28) : BV:1
87 : 9 : INT
88 : bvextract(81, 87, 9) : BV:10
89 : bvconcat(86, 88) : BV:11
90 : bvconcat(83, 89) : BV:32
91 : bvextract(90, 2, 3) : BV:31
92 : mlvar.dst.5 : MEMLABEL
93 : bvmul(20, 10) : BV:32
94 : bvadd(93, 13) : BV:32
95 : store(5, 92, 94, 33, 15, 16) : ARRAY[BV:32 -> BV:8]
96 : mlvar.dst.6 : MEMLABEL
97 : 127992 : BV:64
98 : bvextract(97, 2, 9) : BV:32
99 : bvadd(11, 98) : BV:32
100 : select(95, 96, 99, 15, 16) : BV:32
101 : bvzero_ext(100, 3) : BV:33
102 : bvadd(101, 22) : BV:33
103 : bvextract(102, 24, 24) : BV:1
104 : eq(103, 26) : BOOL
105 : ite(104, 26, 28) : BV:1
106 : bvconcat(91, 105) : BV:32
107 : bvextract(106, 2, 31) : BV:27
108 : bvextract(102, 2, 9) : BV:32
109 : bvextract(108, 15, 15) : BV:1
110 : eq(109, 26) : BOOL
111 : bvextract(101, 15, 15) : BV:1
112 : eq(111, 26) : BOOL
113 : xor(110, 112) : BOOL
114 : ite(113, 26, 28) : BV:1
115 : bvextract(106, 40, 9) : BV:4
116 : bvconcat(114, 115) : BV:5
117 : bvconcat(107, 116) : BV:32
118 : bvextract(117, 2, 44) : BV:20
119 : bvextract(101, 2, 2) : BV:1
120 : eq(119, 26) : BOOL
121 : iff(120, 49) : BOOL
122 : bvextract(101, 2, 9) : BV:32
123 : bvadd(122, 52) : BV:32
124 : bvextract(123, 2, 2) : BV:1
125 : eq(124, 26) : BOOL
126 : xor(120, 125) : BOOL
127 : and(121, 126) : BOOL
128 : ite(127, 26, 28) : BV:1
129 : bvextract(117, 59, 9) : BV:11
130 : bvconcat(128, 129) : BV:12
131 : bvconcat(118, 130) : BV:32
132 : bvextract(131, 2, 63) : BV:24
133 : ite(125, 26, 28) : BV:1
134 : bvextract(131, 66, 9) : BV:7
135 : bvconcat(133, 134) : BV:8
136 : bvconcat(132, 135) : BV:32
137 : bvextract(136, 2, 70) : BV:25
138 : eq(108, 72) : BOOL
139 : ite(138, 26, 28) : BV:1
140 : bvextract(136, 31, 9) : BV:6
141 : bvconcat(139, 140) : BV:7
142 : bvconcat(137, 141) : BV:32
143 : bvextract(142, 2, 40) : BV:29
144 : bvextract(142, 3, 9) : BV:2
145 : bvconcat(28, 144) : BV:3
146 : bvconcat(143, 145) : BV:32
147 : bvextract(146, 2, 82) : BV:21
148 : bvextract(90, 59, 59) : BV:1
149 : eq(148, 26) : BOOL
150 : ite(149, 26, 28) : BV:1
151 : bvextract(146, 87, 9) : BV:10
152 : bvconcat(150, 151) : BV:11
153 : bvconcat(147, 152) : BV:32
154 : bvextract(153, 2, 3) : BV:31
155 : mlvar.dst.7 : MEMLABEL
156 : 127996 : BV:64
157 : bvextract(156, 2, 9) : BV:32
158 : bvadd(11, 157) : BV:32
159 : select(95, 155, 158, 15, 16) : BV:32
160 : bvzero_ext(159, 3) : BV:33
161 : bvadd(22, 160) : BV:33
162 : bvextract(161, 24, 24) : BV:1
163 : eq(162, 26) : BOOL
164 : ite(163, 26, 28) : BV:1
165 : bvconcat(154, 164) : BV:32
166 : bvextract(165, 2, 31) : BV:27
167 : bvextract(161, 2, 9) : BV:32
168 : bvextract(167, 15, 15) : BV:1
169 : eq(168, 26) : BOOL
170 : bvextract(22, 15, 15) : BV:1
171 : eq(170, 26) : BOOL
172 : xor(169, 171) : BOOL
173 : ite(172, 26, 28) : BV:1
174 : bvextract(165, 40, 9) : BV:4
175 : bvconcat(173, 174) : BV:5
176 : bvconcat(166, 175) : BV:32
177 : bvextract(176, 2, 44) : BV:20
178 : bvextract(160, 2, 2) : BV:1
179 : eq(178, 26) : BOOL
180 : iff(49, 179) : BOOL
181 : bvextract(160, 2, 9) : BV:32
182 : bvadd(52, 181) : BV:32
183 : bvextract(182, 2, 2) : BV:1
184 : eq(183, 26) : BOOL
185 : xor(49, 184) : BOOL
186 : and(180, 185) : BOOL
187 : ite(186, 26, 28) : BV:1
188 : bvextract(176, 59, 9) : BV:11
189 : bvconcat(187, 188) : BV:12
190 : bvconcat(177, 189) : BV:32
191 : bvextract(190, 2, 63) : BV:24
192 : ite(184, 26, 28) : BV:1
193 : bvextract(190, 66, 9) : BV:7
194 : bvconcat(192, 193) : BV:8
195 : bvconcat(191, 194) : BV:32
196 : bvextract(195, 2, 70) : BV:25
197 : eq(167, 72) : BOOL
198 : ite(197, 26, 28) : BV:1
199 : bvextract(195, 31, 9) : BV:6
200 : bvconcat(198, 199) : BV:7
201 : bvconcat(196, 200) : BV:32
202 : bvextract(201, 2, 40) : BV:29
203 : bvextract(201, 3, 9) : BV:2
204 : bvconcat(28, 203) : BV:3
205 : bvconcat(202, 204) : BV:32
206 : bvextract(205, 2, 82) : BV:21
207 : bvextract(153, 59, 59) : BV:1
208 : eq(207, 26) : BOOL
209 : ite(208, 26, 28) : BV:1
210 : bvextract(205, 87, 9) : BV:10
211 : bvconcat(209, 210) : BV:11
212 : bvconcat(206, 211) : BV:32
213 : bvextract(212, 2, 3) : BV:31
214 : bvconcat(213, 28) : BV:32
215 : bvextract(214, 2, 31) : BV:27
216 : bvextract(214, 40, 9) : BV:4
217 : bvconcat(28, 216) : BV:5
218 : bvconcat(215, 217) : BV:32
219 : bvextract(218, 2, 44) : BV:20
220 : bvextract(218, 59, 9) : BV:11
221 : bvconcat(28, 220) : BV:12
222 : bvconcat(219, 221) : BV:32
223 : bvextract(222, 2, 63) : BV:24
224 : bvxor(167, 167) : BV:32
225 : bvsign(224) : BV:1
226 : eq(225, 26) : BOOL
227 : ite(226, 26, 28) : BV:1
228 : bvextract(222, 66, 9) : BV:7
229 : bvconcat(227, 228) : BV:8
230 : bvconcat(223, 229) : BV:32
231 : bvextract(230, 2, 70) : BV:25
232 : eq(224, 72) : BOOL
233 : ite(232, 26, 28) : BV:1
234 : bvextract(230, 31, 9) : BV:6
235 : bvconcat(233, 234) : BV:7
236 : bvconcat(231, 235) : BV:32
237 : bvextract(236, 2, 40) : BV:29
238 : bvextract(236, 3, 9) : BV:2
239 : bvconcat(28, 238) : BV:3
240 : bvconcat(237, 239) : BV:32
241 : bvextract(240, 2, 82) : BV:21
242 : bvextract(212, 59, 59) : BV:1
243 : eq(242, 26) : BOOL
244 : ite(243, 26, 28) : BV:1
245 : bvextract(240, 87, 9) : BV:10
246 : bvconcat(244, 245) : BV:11
247 : bvconcat(241, 246) : BV:32
=dst.exreg.7.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : 1 : BV:1
39 : 0 : BV:1
40 : ite(37, 38, 39) : BV:1
=dst.exreg.8.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : not(37) : BOOL
39 : 1 : BV:1
40 : 0 : BV:1
41 : ite(38, 39, 40) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : bvsign(35) : BV:1
37 : 1 : BV:1
38 : eq(36, 37) : BOOL
39 : 0 : BV:1
40 : ite(38, 37, 39) : BV:1
=dst.exreg.11.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : not(37) : BOOL
39 : 1 : BV:1
40 : 0 : BV:1
41 : ite(38, 39, 40) : BV:1
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.12.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : not(37) : BOOL
39 : bvsign(35) : BV:1
40 : 1 : BV:1
41 : eq(39, 40) : BOOL
42 : not(41) : BOOL
43 : and(38, 42) : BOOL
44 : 0 : BV:1
45 : ite(43, 40, 44) : BV:1
=dst.exreg.13.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
36 : 0 : BV:32
37 : eq(35, 36) : BOOL
38 : 1 : BV:1
39 : 0 : BV:1
40 : ite(37, 38, 39) : BV:1
=dst.exreg.0.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 1 : BV:64
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : bvmul(3, 7) : BV:32
9 : 127988 : BV:64
10 : bvextract(9, 5, 6) : BV:32
11 : bvadd(8, 10) : BV:32
12 : mlvar.dst.4 : MEMLABEL
13 : dst_symbol_addr.3 : BV:32
14 : bvmul(13, 7) : BV:32
15 : bvadd(14, 10) : BV:32
16 : 4 : INT
17 : 0 : BOOL
18 : select(1, 12, 15, 16, 17) : BV:32
19 : 1 : INT
20 : bvzero_ext(18, 19) : BV:33
21 : mlvar.dst.3 : MEMLABEL
22 : select(1, 21, 3, 16, 17) : BV:32
23 : bvzero_ext(22, 19) : BV:33
24 : bvadd(20, 23) : BV:33
25 : bvextract(24, 5, 6) : BV:32
26 : store(1, 2, 11, 25, 16, 17) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.6 : MEMLABEL
28 : 127992 : BV:64
29 : bvextract(28, 5, 6) : BV:32
30 : bvadd(14, 29) : BV:32
31 : select(26, 27, 30, 16, 17) : BV:32
32 : bvzero_ext(31, 19) : BV:33
33 : bvadd(32, 23) : BV:33
34 : bvextract(33, 5, 6) : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : 1 : INT
8 : bvzero_ext(6, 7) : BV:33
9 : mlvar.dst.5 : MEMLABEL
10 : 1 : BV:64
11 : 31 : INT
12 : 0 : INT
13 : bvextract(10, 11, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : 127988 : BV:64
16 : bvextract(15, 11, 12) : BV:32
17 : bvadd(14, 16) : BV:32
18 : mlvar.dst.4 : MEMLABEL
19 : dst_symbol_addr.3 : BV:32
20 : bvmul(19, 13) : BV:32
21 : bvadd(20, 16) : BV:32
22 : select(1, 18, 21, 4, 5) : BV:32
23 : bvzero_ext(22, 7) : BV:33
24 : bvadd(23, 8) : BV:33
25 : bvextract(24, 11, 12) : BV:32
26 : store(1, 9, 17, 25, 4, 5) : ARRAY[BV:32 -> BV:8]
27 : mlvar.dst.7 : MEMLABEL
28 : 127996 : BV:64
29 : bvextract(28, 11, 12) : BV:32
30 : bvadd(20, 29) : BV:32
31 : select(26, 27, 30, 4, 5) : BV:32
32 : bvzero_ext(31, 7) : BV:33
33 : bvadd(8, 32) : BV:33
34 : bvextract(33, 11, 12) : BV:32
35 : bvxor(34, 34) : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)*((te_comment_not_implemented*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented))))
=Edge.dst_tfg_full_pathset done

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicates at E0%0%1_E0%0%1
=predicates at E0%0%1_E0%0%1 predicate# 0
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 2
=Comment
precond-memmask-memlabel-mem-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicates at E0%0%1_E0%0%1 done
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in s113

=Alias analysis results in s113
=Alias analysis result in s113 at L0%0%1_L0%0%1
=Alias analysis result in s113 at Lfor.body%1%1_L3%1%0
=Alias analysis result in s113 at E0%0%1_E0%0%1

=Liveness in s113
=live locs at L0%0%1_L0%0%1

=live locs at Lfor.body%1%1_L3%1%0

=live locs at E0%0%1_E0%0%1


=Available expressions in s113

=sprel_maps in s113
=sprel_map at L0%0%1_L0%0%1 in s113
=sprel_map at Lfor.body%1%1_L3%1%0 in s113
=sprel_map at E0%0%1_E0%0%1 in s113
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL2 : a : 128000 : 16 : 0
C_SYMBOL3 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.3.0_begin : BV:32
11 : memlabel-mem-symbol.3.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-esp_begin : BV:32
18 : memlabel-mem-esp_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : stack.size : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : bvuge(1, 10) : BOOL
27 : bvule(1, 11) : BOOL
28 : and(26, 27) : BOOL
29 : bvuge(2, 10) : BOOL
30 : bvule(2, 11) : BOOL
31 : and(29, 30) : BOOL
32 : not(31) : BOOL
33 : andnot1(28, 32) : BOOL
34 : bvuge(1, 17) : BOOL
35 : bvule(1, 18) : BOOL
36 : and(34, 35) : BOOL
37 : bvuge(2, 17) : BOOL
38 : bvule(2, 18) : BOOL
39 : and(37, 38) : BOOL
40 : not(39) : BOOL
41 : andnot1(36, 40) : BOOL
42 : and(33, 41) : BOOL
43 : bvuge(10, 1) : BOOL
44 : bvule(10, 2) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(11, 1) : BOOL
47 : bvule(11, 2) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(10, 17) : BOOL
53 : bvule(10, 18) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(11, 17) : BOOL
56 : bvule(11, 18) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(17, 1) : BOOL
62 : bvule(17, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(18, 1) : BOOL
65 : bvule(18, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(17, 10) : BOOL
71 : bvule(17, 11) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(18, 10) : BOOL
74 : bvule(18, 11) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : and(25, 78) : BOOL
80 : symbol.2 : BV:32
81 : 15 : BV:32
82 : bvand(80, 81) : BV:32
83 : 0 : BV:32
84 : eq(82, 83) : BOOL
85 : and(79, 84) : BOOL
86 : symbol.3 : BV:32
87 : bvand(86, 81) : BV:32
88 : eq(87, 83) : BOOL
89 : and(85, 88) : BOOL
90 : eq(80, 1) : BOOL
91 : eq(86, 10) : BOOL
92 : and(90, 91) : BOOL
93 : and(89, 92) : BOOL
94 : input_stack_pointer_const : BV:32
95 : bvule(17, 94) : BOOL
96 : bvule(94, 18) : BOOL
97 : and(95, 96) : BOOL
98 : 3 : BV:32
99 : bvadd(94, 98) : BV:32
100 : eq(99, 18) : BOOL
101 : and(97, 100) : BOOL
102 : and(93, 101) : BOOL
103 : 4294963200 { -4096 } : BV:32
104 : bvand(17, 103) : BV:32
105 : eq(104, 17) : BOOL
106 : 1 : BV:32
107 : bvadd(18, 106) : BV:32
108 : bvand(107, 103) : BV:32
109 : eq(108, 107) : BOOL
110 : and(105, 109) : BOOL
111 : and(102, 110) : BOOL
112 : dst_symbol_addr.2 : BV:32
113 : eq(80, 112) : BOOL
114 : dst_symbol_addr.3 : BV:32
115 : eq(86, 114) : BOOL
116 : and(113, 115) : BOOL
117 : and(111, 116) : BOOL
=concrete_assertion
1 : symbol.2 : BV:32
2 : 3236314128 { -1058653168 } : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.3 : BV:32
5 : 3222678528 { -1072288768 } : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : dst_symbol_addr.2 : BV:32
9 : eq(8, 2) : BOOL
10 : and(7, 9) : BOOL
11 : dst_symbol_addr.3 : BV:32
12 : eq(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : input_stack_pointer_const : BV:32
15 : 3221762044 { -1073205252 } : BV:32
16 : eq(14, 15) : BOOL
17 : and(13, 16) : BOOL
18 : memlabel-mem-symbol.2.0_begin : BV:32
19 : eq(18, 2) : BOOL
20 : and(17, 19) : BOOL
21 : memlabel-mem-symbol.2.0_end : BV:32
22 : 3236442127 { -1058525169 } : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.3.0_begin : BV:32
26 : eq(25, 5) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.3.0_end : BV:32
29 : 3222806527 { -1072160769 } : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 12845056 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 3221762047 { -1073205249 } : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 3208916992 { -1086050304 } : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
=use_concrete_assertion : 0
=Memlabel assertions done
=counterexamples at pc L0%0%1_L0%0%1
=pc L0%0%1_L0%0%1 nodece 0
=pc L0%0%1_L0%0%1 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 0 nodece_path
=pc L0%0%1_L0%0%1 nodece 0 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 0 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1
=pc L0%0%1_L0%0%1 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1 nodece_path
=pc L0%0%1_L0%0%1 nodece 1 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 1 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2
=pc L0%0%1_L0%0%1 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2 nodece_path
=pc L0%0%1_L0%0%1 nodece 2 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 2 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3
=pc L0%0%1_L0%0%1 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1048586 : BV:32
=unaliased_memslot.0
1 : 538516741 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3 nodece_path
=pc L0%0%1_L0%0%1 nodece 3 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 3 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1048586 : BV:32
=unaliased_memslot.0
1 : 538516741 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4
=pc L0%0%1_L0%0%1 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4 nodece_path
=pc L0%0%1_L0%0%1 nodece 4 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 4 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5
=pc L0%0%1_L0%0%1 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806527 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806527 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806527 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1850952926
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5 nodece_path
=pc L0%0%1_L0%0%1 nodece 5 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 5 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806527 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806527 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806527 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1850952926
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6
=pc L0%0%1_L0%0%1 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6 nodece_path
=pc L0%0%1_L0%0%1 nodece 6 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 6 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7
=pc L0%0%1_L0%0%1 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7 nodece_path
=pc L0%0%1_L0%0%1 nodece 7 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 7 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8
=pc L0%0%1_L0%0%1 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1253207672
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8 nodece_path
=pc L0%0%1_L0%0%1 nodece 8 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 8 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1253207672
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9
=pc L0%0%1_L0%0%1 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9 nodece_path
=pc L0%0%1_L0%0%1 nodece 9 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 9 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10
=pc L0%0%1_L0%0%1 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1137949908
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10 nodece_path
=pc L0%0%1_L0%0%1 nodece 10 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 10 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1137949908
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11
=pc L0%0%1_L0%0%1 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 189 , m_adder -> 153)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 189 , m_adder -> 153)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1020722158
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11 nodece_path
=pc L0%0%1_L0%0%1 nodece 11 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 11 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 189 , m_adder -> 153)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 189 , m_adder -> 153)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1020722158
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12
=pc L0%0%1_L0%0%1 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 5 : BV:32
=unaliased_memslot.0
1 : 2305589249 { -1989378047 } : BV:32
=unaliased_memslot.2
1 : 21437446 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1192707556
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12 nodece_path
=pc L0%0%1_L0%0%1 nodece 12 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 12 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 5 : BV:32
=unaliased_memslot.0
1 : 2305589249 { -1989378047 } : BV:32
=unaliased_memslot.2
1 : 21437446 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1192707556
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13
=pc L0%0%1_L0%0%1 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
31308902
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13 nodece_path
=pc L0%0%1_L0%0%1 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 13 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
31308902
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14
=pc L0%0%1_L0%0%1 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
816504794
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14 nodece_path
=pc L0%0%1_L0%0%1 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 14 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
816504794
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15
=pc L0%0%1_L0%0%1 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1175526309
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15 nodece_path
=pc L0%0%1_L0%0%1 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 15 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1175526309
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16
=pc L0%0%1_L0%0%1 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1586903190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16 nodece_path
=pc L0%0%1_L0%0%1 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 16 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1586903190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17
=pc L0%0%1_L0%0%1 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2002495425
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17 nodece_path
=pc L0%0%1_L0%0%1 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 17 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2002495425
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18
=pc L0%0%1_L0%0%1 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873524566
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18 nodece_path
=pc L0%0%1_L0%0%1 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 18 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873524566
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19
=pc L0%0%1_L0%0%1 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
37487770
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19 nodece_path
=pc L0%0%1_L0%0%1 nodece 19 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 19 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
37487770
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20
=pc L0%0%1_L0%0%1 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2404485020
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20 nodece_path
=pc L0%0%1_L0%0%1 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 20 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2404485020
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21
=pc L0%0%1_L0%0%1 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 262144 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 3238144 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
773319847
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21 nodece_path
=pc L0%0%1_L0%0%1 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 21 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 262144 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 3238144 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
773319847
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22
=pc L0%0%1_L0%0%1 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1404196431
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22 nodece_path
=pc L0%0%1_L0%0%1 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 22 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1404196431
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23
=pc L0%0%1_L0%0%1 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678539 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678539 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678539 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 33554432 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1968217462
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23 nodece_path
=pc L0%0%1_L0%0%1 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 23 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678539 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678539 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678539 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 33554432 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1968217462
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24
=pc L0%0%1_L0%0%1 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
629593614
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24 nodece_path
=pc L0%0%1_L0%0%1 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 24 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
629593614
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25
=pc L0%0%1_L0%0%1 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
524133589
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25 nodece_path
=pc L0%0%1_L0%0%1 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 25 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
524133589
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26
=pc L0%0%1_L0%0%1 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1959343768
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26 nodece_path
=pc L0%0%1_L0%0%1 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 26 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1959343768
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27
=pc L0%0%1_L0%0%1 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
483689685
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27 nodece_path
=pc L0%0%1_L0%0%1 nodece 27 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 27 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
483689685
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28
=pc L0%0%1_L0%0%1 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
567304789
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28 nodece_path
=pc L0%0%1_L0%0%1 nodece 28 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 28 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
567304789
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29
=pc L0%0%1_L0%0%1 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 33)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 33)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3484533881
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29 nodece_path
=pc L0%0%1_L0%0%1 nodece 29 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 29 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 33)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 149 , m_adder -> 33)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3484533881
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30
=pc L0%0%1_L0%0%1 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1089653714
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30 nodece_path
=pc L0%0%1_L0%0%1 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 30 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1089653714
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31
=pc L0%0%1_L0%0%1 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1003886059
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31 nodece_path
=pc L0%0%1_L0%0%1 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 31 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1003886059
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32
=pc L0%0%1_L0%0%1 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 126 , m_adder -> 37)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 126 , m_adder -> 37)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2721615290
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32 nodece_path
=pc L0%0%1_L0%0%1 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 32 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 126 , m_adder -> 37)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 126 , m_adder -> 37)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2721615290
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33
=pc L0%0%1_L0%0%1 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
811742698
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33 nodece_path
=pc L0%0%1_L0%0%1 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 33 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
811742698
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34
=pc L0%0%1_L0%0%1 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
294110991
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34 nodece_path
=pc L0%0%1_L0%0%1 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 34 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
294110991
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35
=pc L0%0%1_L0%0%1 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 5 , m_adder -> 3)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 5 , m_adder -> 3)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1749409248
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35 nodece_path
=pc L0%0%1_L0%0%1 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 35 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 5 , m_adder -> 3)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 5 , m_adder -> 3)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1749409248
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36
=pc L0%0%1_L0%0%1 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1073610752 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 126976 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
313515824
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36 nodece_path
=pc L0%0%1_L0%0%1 nodece 36 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 36 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1073610752 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 126976 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
313515824
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37
=pc L0%0%1_L0%0%1 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4284169232 { -10798064 } : BV:32
=symbol.2
1 : 82944 : BV:32
=dst_symbol_addr.2
1 : 82944 : BV:32
=dst_symbol_addr.3
1 : 4284169232 { -10798064 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4278177788 { -16789508 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4278177791 { -16789505 } : BV:32
=memlabel-mem-esp_begin
1 : 217088 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4284169232 { -10798064 } : BV:32
=stack.size
1 : 4277960704 { -17006592 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4284297231 { -10670065 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 210943 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 82944 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2096973703
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37 nodece_path
=pc L0%0%1_L0%0%1 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 37 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4284169232 { -10798064 } : BV:32
=symbol.2
1 : 82944 : BV:32
=dst_symbol_addr.2
1 : 82944 : BV:32
=dst_symbol_addr.3
1 : 4284169232 { -10798064 } : BV:32
=input_stack_pointer_const
1 : 4278177788 { -16789508 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4278177791 { -16789505 } : BV:32
=memlabel-mem-esp_begin
1 : 217088 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4284169232 { -10798064 } : BV:32
=stack.size
1 : 4277960704 { -17006592 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4284297231 { -10670065 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 210943 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 82944 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2096973703
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38
=pc L0%0%1_L0%0%1 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3513819000
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38 nodece_path
=pc L0%0%1_L0%0%1 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 38 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3513819000
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39
=pc L0%0%1_L0%0%1 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223455 { -1073743841 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095456 { -1073871840 } : BV:32
=input.dst.mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1706790001
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39 nodece_path
=pc L0%0%1_L0%0%1 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 39 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223455 { -1073743841 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095456 { -1073871840 } : BV:32
=input.dst.mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1706790001
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40
=pc L0%0%1_L0%0%1 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1459171056 : BV:32
=symbol.2
1 : 1308232704 : BV:32
=dst_symbol_addr.2
1 : 1308232704 : BV:32
=dst_symbol_addr.3
1 : 1459171056 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3758100476 { -536866820 } : BV:32
=input.src.llvm-mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3758100479 { -536866817 } : BV:32
=memlabel-mem-esp_begin
1 : 1784672256 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1459171056 : BV:32
=stack.size
1 : 1973428224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1459299055 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1308360703 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1308232704 : BV:32
=input.dst.mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1053713271
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40 nodece_path
=pc L0%0%1_L0%0%1 nodece 40 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 40 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1459171056 : BV:32
=symbol.2
1 : 1308232704 : BV:32
=dst_symbol_addr.2
1 : 1308232704 : BV:32
=dst_symbol_addr.3
1 : 1459171056 : BV:32
=input_stack_pointer_const
1 : 3758100476 { -536866820 } : BV:32
=input.src.llvm-mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3758100479 { -536866817 } : BV:32
=memlabel-mem-esp_begin
1 : 1784672256 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1459171056 : BV:32
=stack.size
1 : 1973428224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1459299055 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1308360703 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1308232704 : BV:32
=input.dst.mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1053713271
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41
=pc L0%0%1_L0%0%1 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635051986
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41 nodece_path
=pc L0%0%1_L0%0%1 nodece 41 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 41 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635051986
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42
=pc L0%0%1_L0%0%1 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3593007392 { -701959904 } : BV:32
=symbol.2
1 : 1052509520 : BV:32
=dst_symbol_addr.2
1 : 1052509520 : BV:32
=dst_symbol_addr.3
1 : 3593007392 { -701959904 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1730162684 : BV:32
=input.src.llvm-mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1730162687 : BV:32
=memlabel-mem-esp_begin
1 : 1261699072 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3593007392 { -701959904 } : BV:32
=stack.size
1 : 468463616 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3593135391 { -701831905 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1052637519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1052509520 : BV:32
=input.dst.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2009589844
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42 nodece_path
=pc L0%0%1_L0%0%1 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 42 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3593007392 { -701959904 } : BV:32
=symbol.2
1 : 1052509520 : BV:32
=dst_symbol_addr.2
1 : 1052509520 : BV:32
=dst_symbol_addr.3
1 : 3593007392 { -701959904 } : BV:32
=input_stack_pointer_const
1 : 1730162684 : BV:32
=input.src.llvm-mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1730162687 : BV:32
=memlabel-mem-esp_begin
1 : 1261699072 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3593007392 { -701959904 } : BV:32
=stack.size
1 : 468463616 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3593135391 { -701831905 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1052637519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1052509520 : BV:32
=input.dst.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2009589844
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43
=pc L0%0%1_L0%0%1 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1333303590
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43 nodece_path
=pc L0%0%1_L0%0%1 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 43 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1333303590
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44
=pc L0%0%1_L0%0%1 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 372506628 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 372506628 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 372506628 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1799419879
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44 nodece_path
=pc L0%0%1_L0%0%1 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 44 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 372506628 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 372506628 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 372506628 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1799419879
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45
=pc L0%0%1_L0%0%1 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4287613328 { -7353968 } : BV:32
=symbol.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.3
1 : 4287613328 { -7353968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4261408764 { -33558532 } : BV:32
=input.src.llvm-mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4261408767 { -33558529 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4287613328 { -7353968 } : BV:32
=stack.size
1 : 4261408768 { -33558528 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4287741327 { -7225969 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4261540223 { -33427073 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261412224 { -33555072 } : BV:32
=input.dst.mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
436877981
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45 nodece_path
=pc L0%0%1_L0%0%1 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 45 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4287613328 { -7353968 } : BV:32
=symbol.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.3
1 : 4287613328 { -7353968 } : BV:32
=input_stack_pointer_const
1 : 4261408764 { -33558532 } : BV:32
=input.src.llvm-mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4261408767 { -33558529 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4287613328 { -7353968 } : BV:32
=stack.size
1 : 4261408768 { -33558528 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4287741327 { -7225969 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4261540223 { -33427073 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261412224 { -33555072 } : BV:32
=input.dst.mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
436877981
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46
=pc L0%0%1_L0%0%1 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1537387453
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46 nodece_path
=pc L0%0%1_L0%0%1 nodece 46 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 46 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1537387453
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47
=pc L0%0%1_L0%0%1 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 372506636 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 372506636 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 372506636 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1456764098
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47 nodece_path
=pc L0%0%1_L0%0%1 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 47 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 372506636 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 372506636 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 372506636 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1456764098
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48
=pc L0%0%1_L0%0%1 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3489596928 { -805370368 } : BV:32
=symbol.2
1 : 2053459584 : BV:32
=dst_symbol_addr.2
1 : 2053459584 : BV:32
=dst_symbol_addr.3
1 : 3489596928 { -805370368 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3471114236 { -823853060 } : BV:32
=input.src.llvm-mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3471114239 { -823853057 } : BV:32
=memlabel-mem-esp_begin
1 : 2603155456 { -1691811840 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3489596928 { -805370368 } : BV:32
=stack.size
1 : 867958784 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3489724927 { -805242369 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2053587583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2053459584 : BV:32
=input.dst.mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
87184889
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48 nodece_path
=pc L0%0%1_L0%0%1 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 48 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3489596928 { -805370368 } : BV:32
=symbol.2
1 : 2053459584 : BV:32
=dst_symbol_addr.2
1 : 2053459584 : BV:32
=dst_symbol_addr.3
1 : 3489596928 { -805370368 } : BV:32
=input_stack_pointer_const
1 : 3471114236 { -823853060 } : BV:32
=input.src.llvm-mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3471114239 { -823853057 } : BV:32
=memlabel-mem-esp_begin
1 : 2603155456 { -1691811840 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3489596928 { -805370368 } : BV:32
=stack.size
1 : 867958784 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3489724927 { -805242369 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2053587583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2053459584 : BV:32
=input.dst.mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
87184889
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49
=pc L0%0%1_L0%0%1 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
277944539
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49 nodece_path
=pc L0%0%1_L0%0%1 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 49 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
277944539
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50
=pc L0%0%1_L0%0%1 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
808697565
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50 nodece_path
=pc L0%0%1_L0%0%1 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 50 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
808697565
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51
=pc L0%0%1_L0%0%1 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1571300213
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51 nodece_path
=pc L0%0%1_L0%0%1 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 51 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1571300213
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52
=pc L0%0%1_L0%0%1 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1275035632 : BV:32
=symbol.2
1 : 1073671184 : BV:32
=dst_symbol_addr.2
1 : 1073671184 : BV:32
=dst_symbol_addr.3
1 : 1275035632 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3456651260 { -838316036 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3456651263 { -838316033 } : BV:32
=memlabel-mem-esp_begin
1 : 1277931520 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1275035632 : BV:32
=stack.size
1 : 2178719744 { -2116247552 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1275163631 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073799183 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073671184 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1598649746
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52 nodece_path
=pc L0%0%1_L0%0%1 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 52 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1275035632 : BV:32
=symbol.2
1 : 1073671184 : BV:32
=dst_symbol_addr.2
1 : 1073671184 : BV:32
=dst_symbol_addr.3
1 : 1275035632 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3456651260 { -838316036 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3456651263 { -838316033 } : BV:32
=memlabel-mem-esp_begin
1 : 1277931520 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1275035632 : BV:32
=stack.size
1 : 2178719744 { -2116247552 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1275163631 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073799183 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073671184 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1598649746
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53
=pc L0%0%1_L0%0%1 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 200)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 200)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3598068425
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53 nodece_path
=pc L0%0%1_L0%0%1 nodece 53 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 53 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 200)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 200)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3598068425
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54
=pc L0%0%1_L0%0%1 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095888 { -1073871408 } : BV:32
=dst_symbol_addr.2
1 : 3221095888 { -1073871408 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223887 { -1073743409 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095888 { -1073871408 } : BV:32
=input.dst.mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
319257917
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54 nodece_path
=pc L0%0%1_L0%0%1 nodece 54 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 54 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095888 { -1073871408 } : BV:32
=dst_symbol_addr.2
1 : 3221095888 { -1073871408 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223887 { -1073743409 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095888 { -1073871408 } : BV:32
=input.dst.mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
319257917
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55
=pc L0%0%1_L0%0%1 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 134281248 : BV:32
=symbol.2
1 : 63584 : BV:32
=dst_symbol_addr.2
1 : 63584 : BV:32
=dst_symbol_addr.3
1 : 134281248 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 134467584 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 134281248 : BV:32
=stack.size
1 : 4160499712 { -134467584 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 134409247 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 191583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 63584 : BV:32
=input.dst.mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1121569538
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55 nodece_path
=pc L0%0%1_L0%0%1 nodece 55 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 55 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 134281248 : BV:32
=symbol.2
1 : 63584 : BV:32
=dst_symbol_addr.2
1 : 63584 : BV:32
=dst_symbol_addr.3
1 : 134281248 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 134467584 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 134281248 : BV:32
=stack.size
1 : 4160499712 { -134467584 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 134409247 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 191583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 63584 : BV:32
=input.dst.mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1121569538
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56
=pc L0%0%1_L0%0%1 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562769408 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 1562769408 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1562769408 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
45491800
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56 nodece_path
=pc L0%0%1_L0%0%1 nodece 56 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 56 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562769408 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 1562769408 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1562769408 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
45491800
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57
=pc L0%0%1_L0%0%1 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294764544 { -202752 } : BV:32
=symbol.2
1 : 132096 : BV:32
=dst_symbol_addr.2
1 : 132096 : BV:32
=dst_symbol_addr.3
1 : 4294764544 { -202752 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294733820 { -233476 } : BV:32
=input.src.llvm-mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294733823 { -233473 } : BV:32
=memlabel-mem-esp_begin
1 : 270336 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294764544 { -202752 } : BV:32
=stack.size
1 : 4294463488 { -503808 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294892543 { -74753 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 260095 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 132096 : BV:32
=input.dst.mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1047924304
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57 nodece_path
=pc L0%0%1_L0%0%1 nodece 57 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 57 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294764544 { -202752 } : BV:32
=symbol.2
1 : 132096 : BV:32
=dst_symbol_addr.2
1 : 132096 : BV:32
=dst_symbol_addr.3
1 : 4294764544 { -202752 } : BV:32
=input_stack_pointer_const
1 : 4294733820 { -233476 } : BV:32
=input.src.llvm-mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294733823 { -233473 } : BV:32
=memlabel-mem-esp_begin
1 : 270336 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294764544 { -202752 } : BV:32
=stack.size
1 : 4294463488 { -503808 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294892543 { -74753 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 260095 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 132096 : BV:32
=input.dst.mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1047924304
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58
=pc L0%0%1_L0%0%1 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147481596 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223455 { -1073743841 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095456 { -1073871840 } : BV:32
=input.dst.mem
1 : (( 2147481596 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147481596 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
167435392
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58 nodece_path
=pc L0%0%1_L0%0%1 nodece 58 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 58 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147481596 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223455 { -1073743841 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095456 { -1073871840 } : BV:32
=input.dst.mem
1 : (( 2147481596 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147481596 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
167435392
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59
=pc L0%0%1_L0%0%1 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1661929472 : BV:32
=symbol.2
1 : 1728282624 : BV:32
=dst_symbol_addr.2
1 : 1728282624 : BV:32
=dst_symbol_addr.3
1 : 1661929472 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1728410612 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1661929472 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1662057471 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1728410623 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1728282624 : BV:32
=input.dst.mem
1 : (( 1728410612 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1728410612 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
627395546
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59 nodece_path
=pc L0%0%1_L0%0%1 nodece 59 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 59 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1661929472 : BV:32
=symbol.2
1 : 1728282624 : BV:32
=dst_symbol_addr.2
1 : 1728282624 : BV:32
=dst_symbol_addr.3
1 : 1661929472 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1728410612 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1661929472 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1662057471 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1728410623 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1728282624 : BV:32
=input.dst.mem
1 : (( 1728410612 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1728410612 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
627395546
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60
=pc L0%0%1_L0%0%1 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
13180653
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60 nodece_path
=pc L0%0%1_L0%0%1 nodece 60 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 60 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
13180653
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61
=pc L0%0%1_L0%0%1 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1216 : BV:32
=symbol.2
1 : 130048 : BV:32
=dst_symbol_addr.2
1 : 130048 : BV:32
=dst_symbol_addr.3
1 : 1216 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294852604 { -114692 } : BV:32
=input.src.llvm-mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294852607 { -114689 } : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1216 : BV:32
=stack.size
1 : 4294594560 { -372736 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 129215 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 258047 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130048 : BV:32
=input.dst.mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302427736
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61 nodece_path
=pc L0%0%1_L0%0%1 nodece 61 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 61 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1216 : BV:32
=symbol.2
1 : 130048 : BV:32
=dst_symbol_addr.2
1 : 130048 : BV:32
=dst_symbol_addr.3
1 : 1216 : BV:32
=input_stack_pointer_const
1 : 4294852604 { -114692 } : BV:32
=input.src.llvm-mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294852607 { -114689 } : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1216 : BV:32
=stack.size
1 : 4294594560 { -372736 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 129215 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 258047 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130048 : BV:32
=input.dst.mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302427736
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62
=pc L0%0%1_L0%0%1 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 372634620 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 372634620 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 372634620 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1166392597
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62 nodece_path
=pc L0%0%1_L0%0%1 nodece 62 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 62 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 372634620 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 372634620 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 372634620 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1166392597
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63
=pc L0%0%1_L0%0%1 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1683859015
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63 nodece_path
=pc L0%0%1_L0%0%1 nodece 63 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 63 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1683859015
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64
=pc L0%0%1_L0%0%1 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1275035632 : BV:32
=symbol.2
1 : 1073671184 : BV:32
=dst_symbol_addr.2
1 : 1073671184 : BV:32
=dst_symbol_addr.3
1 : 1275035632 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3456651260 { -838316036 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3456651263 { -838316033 } : BV:32
=memlabel-mem-esp_begin
1 : 1277931520 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1275035632 : BV:32
=stack.size
1 : 2178719744 { -2116247552 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1275163631 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073799183 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073671184 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1388165915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64 nodece_path
=pc L0%0%1_L0%0%1 nodece 64 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 64 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1275035632 : BV:32
=symbol.2
1 : 1073671184 : BV:32
=dst_symbol_addr.2
1 : 1073671184 : BV:32
=dst_symbol_addr.3
1 : 1275035632 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3456651260 { -838316036 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3456651263 { -838316033 } : BV:32
=memlabel-mem-esp_begin
1 : 1277931520 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1275035632 : BV:32
=stack.size
1 : 2178719744 { -2116247552 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1275163631 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073799183 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073671184 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1388165915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65
=pc L0%0%1_L0%0%1 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 223)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 223)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
525315809
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65 nodece_path
=pc L0%0%1_L0%0%1 nodece 65 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 65 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 223)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 223)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
525315809
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66
=pc L0%0%1_L0%0%1 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1454306681
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66 nodece_path
=pc L0%0%1_L0%0%1 nodece 66 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 66 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1454306681
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67
=pc L0%0%1_L0%0%1 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1275035632 : BV:32
=symbol.2
1 : 1073671184 : BV:32
=dst_symbol_addr.2
1 : 1073671184 : BV:32
=dst_symbol_addr.3
1 : 1275035632 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3456651260 { -838316036 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3456651263 { -838316033 } : BV:32
=memlabel-mem-esp_begin
1 : 1277931520 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1275035632 : BV:32
=stack.size
1 : 2178719744 { -2116247552 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1275163631 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073799183 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073671184 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1213223780
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67 nodece_path
=pc L0%0%1_L0%0%1 nodece 67 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 67 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1275035632 : BV:32
=symbol.2
1 : 1073671184 : BV:32
=dst_symbol_addr.2
1 : 1073671184 : BV:32
=dst_symbol_addr.3
1 : 1275035632 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3456651260 { -838316036 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3456651263 { -838316033 } : BV:32
=memlabel-mem-esp_begin
1 : 1277931520 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1275035632 : BV:32
=stack.size
1 : 2178719744 { -2116247552 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1275163631 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073799183 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073671184 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1213223780
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68
=pc L0%0%1_L0%0%1 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 133 , m_adder -> 229)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 133 , m_adder -> 229)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3484096126
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68 nodece_path
=pc L0%0%1_L0%0%1 nodece 68 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 68 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 133 , m_adder -> 229)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 133 , m_adder -> 229)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3484096126
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69
=pc L0%0%1_L0%0%1 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1834032976
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69 nodece_path
=pc L0%0%1_L0%0%1 nodece 69 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 69 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1834032976
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70
=pc L0%0%1_L0%0%1 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1275035632 : BV:32
=symbol.2
1 : 1073671184 : BV:32
=dst_symbol_addr.2
1 : 1073671184 : BV:32
=dst_symbol_addr.3
1 : 1275035632 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3456651260 { -838316036 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3456651263 { -838316033 } : BV:32
=memlabel-mem-esp_begin
1 : 1277931520 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1275035632 : BV:32
=stack.size
1 : 2178719744 { -2116247552 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1275163631 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073799183 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073671184 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1673561342
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70 nodece_path
=pc L0%0%1_L0%0%1 nodece 70 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 70 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1275035632 : BV:32
=symbol.2
1 : 1073671184 : BV:32
=dst_symbol_addr.2
1 : 1073671184 : BV:32
=dst_symbol_addr.3
1 : 1275035632 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3456651260 { -838316036 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3456651263 { -838316033 } : BV:32
=memlabel-mem-esp_begin
1 : 1277931520 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1275035632 : BV:32
=stack.size
1 : 2178719744 { -2116247552 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1275163631 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073799183 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073671184 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1673561342
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71
=pc L0%0%1_L0%0%1 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 121 , m_adder -> 214)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 121 , m_adder -> 214)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3855560924
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71 nodece_path
=pc L0%0%1_L0%0%1 nodece 71 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 71 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 121 , m_adder -> 214)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 121 , m_adder -> 214)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3855560924
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72
=pc L0%0%1_L0%0%1 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
889164757
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72 nodece_path
=pc L0%0%1_L0%0%1 nodece 72 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 72 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
889164757
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73
=pc L0%0%1_L0%0%1 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 1275035632 : BV:32
=symbol.2
1 : 1073671184 : BV:32
=dst_symbol_addr.2
1 : 1073671184 : BV:32
=dst_symbol_addr.3
1 : 1275035632 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3456651260 { -838316036 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3456651263 { -838316033 } : BV:32
=memlabel-mem-esp_begin
1 : 1277931520 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1275035632 : BV:32
=stack.size
1 : 2178719744 { -2116247552 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1275163631 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073799183 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073671184 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
666200345
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73 nodece_path
=pc L0%0%1_L0%0%1 nodece 73 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 73 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1275035632 : BV:32
=symbol.2
1 : 1073671184 : BV:32
=dst_symbol_addr.2
1 : 1073671184 : BV:32
=dst_symbol_addr.3
1 : 1275035632 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3456651260 { -838316036 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3456651263 { -838316033 } : BV:32
=memlabel-mem-esp_begin
1 : 1277931520 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1275035632 : BV:32
=stack.size
1 : 2178719744 { -2116247552 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1275163631 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073799183 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073671184 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
666200345
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74
=pc L0%0%1_L0%0%1 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 33)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 33)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3915675993
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74 nodece_path
=pc L0%0%1_L0%0%1 nodece 74 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 74 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 33)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 33)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3915675993
=counter_example_end
=counterexamples at pc Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 4929580788790547866135401034935527193 : BV:128
=input.dst.exreg.2.2
1 : 62220057 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 0, ( 3221762047 ) -> 0, ( 3221762046 ) -> 0, ( 3221762045 ) -> 0, () -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 2
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1048586 : BV:32
=unaliased_memslot.0
1 : 538516741 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 42665691882533877596347114083510197509 : BV:128
=input.dst.exreg.2.2
1 : 538516741 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 5, ( 3236314129 ) -> 29, ( 3236314130 ) -> 25, ( 3236314131 ) -> 32, ( 3222806524 ) -> 10, ( 3222806526 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1048586 : BV:32
=unaliased_memslot.0
1 : 538516741 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 3
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 340282366920938463463374607431768211455 { -1 } : BV:128
=input.dst.exreg.2.2
1 : 4294967295 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 255, ( 3236314129 ) -> 255, ( 3236314130 ) -> 255, ( 3236314131 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 4
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806524 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 5
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678532 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 6
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 7
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 189 , m_adder -> 153)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 189 , m_adder -> 153)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1020722158
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 213855909812788157428412470334790510185 { -126426457108150306034962137096977701271 } : BV:128
=input.dst.exreg.2.2
1 : 2699241065 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 189 , m_adder -> 153)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 0, ( 3221762047 ) -> 128, ( 3221762046 ) -> 0, ( 3221762045 ) -> 0, () -> (RAC: m_multiplier -> 189 , m_adder -> 153)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1020722158
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 8
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 5 : BV:32
=unaliased_memslot.0
1 : 2305589249 { -1989378047 } : BV:32
=unaliased_memslot.2
1 : 21437446 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1192707556
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 1, ( 3222678537 ) -> 128, ( 3222678538 ) -> 108, ( 3222678539 ) -> 137, ( 3222678540 ) -> 5, ( 3222806520 ) -> 6, ( 3222806521 ) -> 28, ( 3222806522 ) -> 71, ( 3222806523 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 5 : BV:32
=unaliased_memslot.0
1 : 2305589249 { -1989378047 } : BV:32
=unaliased_memslot.2
1 : 21437446 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1192707556
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 9
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
31308902
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 340282366920938463463374607431768211455 { -1 } : BV:128
=input.dst.exreg.2.2
1 : 4294967295 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 0, ( 3221762047 ) -> 0, ( 3221762046 ) -> 0, ( 3221762045 ) -> 0, ( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 0, ( 3222678537 ) -> 0, ( 3222678538 ) -> 0, ( 3222678539 ) -> 0, ( 3222678540 ) -> 0, ( 3222678541 ) -> 0, ( 3222678542 ) -> 0, ( 3222678543 ) -> 0, () -> 255) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
31308902
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 10
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
816504794
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678539 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
816504794
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 11
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1175526309
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806520 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1175526309
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 12
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1586903190
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678544 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1586903190
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 13
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873524566
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873524566
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 14
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2404485020
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 183257970545716165733357848433319097224 { -157024396375222297730016758998449114232 } : BV:128
=input.dst.exreg.2.2
1 : 2313040776 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3221762044 ) -> 0, ( 3221762047 ) -> 0, ( 3221762046 ) -> 0, ( 3221762045 ) -> 0, () -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2404485020
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 15
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 262144 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 3238144 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
773319847
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222678536 ) -> 3, ( 3222678542 ) -> 4, ( 3236442117 ) -> 105, ( 3236442118 ) -> 49, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 262144 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 3238144 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
773319847
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 16
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1404196431
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 255, ( 3236442117 ) -> 255, ( 3236442118 ) -> 255, ( 3236442119 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1404196431
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 17
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
629593614
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236442120 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
629593614
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 18
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
524133589
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
524133589
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 19
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
483689685
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
483689685
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 20
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1089653714
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1089653714
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 21
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
811742698
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
811742698
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 22
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
803590181
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
803590181
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 23
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
820097487
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
820097487
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 24
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
820097487
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 5 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 5 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222678544 { -1072288752 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx
1 : 3222678544 { -1072288752 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 5 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236314144 { -1058653152 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314144 { -1058653152 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
820097487
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 25
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
820097487
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.graph_edge_composition
((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 36 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 9 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 9 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222678560 { -1072288736 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%arrayidx
1 : 3222678560 { -1072288736 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 9 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236314160 { -1058653136 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314160 { -1058653136 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
820097487
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 26
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 52 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 13 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 0, ( 3236314129 ) -> 0, ( 3236314130 ) -> 0, ( 3236314131 ) -> 0, ( 3222678595 ) -> 64, ( 3222678593 ) -> 2, ( 3222678580 ) -> 2, ( 3222678583 ) -> 2, ( 3222678585 ) -> 32, ( 3222678592 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 13 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 0, ( 3236314129 ) -> 0, ( 3236314130 ) -> 0, ( 3236314131 ) -> 0, ( 3222678595 ) -> 64, ( 3222678593 ) -> 2, ( 3222678580 ) -> 2, ( 3222678583 ) -> 2, ( 3222678585 ) -> 32, ( 3222678592 ) -> 2, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 0, ( 3236314129 ) -> 0, ( 3236314130 ) -> 0, ( 3236314131 ) -> 0, ( 3222678595 ) -> 64, ( 3222678593 ) -> 2, ( 3222678580 ) -> 2, ( 3222678583 ) -> 2, ( 3222678585 ) -> 32, ( 3222678592 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
568062975
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 68 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 85075824750679381701868266334831313154 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 17 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 0, ( 3236314129 ) -> 0, ( 3236314130 ) -> 0, ( 3236314131 ) -> 0, ( 3222678595 ) -> 64, ( 3222678593 ) -> 2, ( 3236314183 ) -> 2, ( 3222678580 ) -> 2, ( 3236314192 ) -> 2, ( 3236314195 ) -> 64, ( 3236314193 ) -> 2, ( 3222678583 ) -> 2, ( 3236314180 ) -> 2, ( 3236314185 ) -> 32, ( 3222678585 ) -> 32, ( 3222678592 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 17 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222678592 { -1072288704 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 64 : BV:32
=input.src.llvm-%arrayidx
1 : 3222678592 { -1072288704 } : BV:32
=input.src.llvm-%add
1 : 1073807874 : BV:32
=input.src.llvm-%inc
1 : 17 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236314192 { -1058653104 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 64 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 1073807874 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314192 { -1058653104 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 0, ( 3236314129 ) -> 0, ( 3236314130 ) -> 0, ( 3236314131 ) -> 0, ( 3222678595 ) -> 64, ( 3222678593 ) -> 2, ( 3236314183 ) -> 2, ( 3222678580 ) -> 2, ( 3236314192 ) -> 2, ( 3236314195 ) -> 64, ( 3236314193 ) -> 2, ( 3222678583 ) -> 2, ( 3236314180 ) -> 2, ( 3236314185 ) -> 32, ( 3222678585 ) -> 32, ( 3222678592 ) -> 2, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 0, ( 3236314129 ) -> 0, ( 3236314130 ) -> 0, ( 3236314131 ) -> 0, ( 3222678595 ) -> 64, ( 3222678593 ) -> 2, ( 3222678580 ) -> 2, ( 3222678583 ) -> 2, ( 3222678585 ) -> 32, ( 3222678592 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
568062975
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 27
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 116 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 42836528321048498660601125514264577 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 29 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314129 ) -> 64, ( 3236314130 ) -> 8, ( 3236314131 ) -> 0, ( 3222678659 ) -> 0, ( 3222678654 ) -> 64, ( 3222678655 ) -> 0, ( 3222678644 ) -> 0, ( 3222678656 ) -> 128, ( 3222678646 ) -> 24, ( 3222678651 ) -> 0, ( 3222678658 ) -> 4, ( 3222678657 ) -> 2, ( 3222678647 ) -> 32, ( 3222678645 ) -> 64, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 29 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314129 ) -> 64, ( 3236314130 ) -> 8, ( 3236314131 ) -> 0, ( 3222678659 ) -> 0, ( 3222678654 ) -> 64, ( 3222678655 ) -> 0, ( 3222678644 ) -> 0, ( 3222678656 ) -> 128, ( 3222678646 ) -> 24, ( 3222678651 ) -> 0, ( 3222678658 ) -> 4, ( 3222678657 ) -> 2, ( 3222678647 ) -> 32, ( 3222678645 ) -> 64, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314129 ) -> 64, ( 3236314130 ) -> 8, ( 3236314131 ) -> 0, ( 3222678659 ) -> 0, ( 3222678654 ) -> 64, ( 3222678655 ) -> 0, ( 3222678644 ) -> 0, ( 3222678656 ) -> 128, ( 3222678646 ) -> 24, ( 3222678651 ) -> 0, ( 3222678658 ) -> 4, ( 3222678657 ) -> 2, ( 3222678647 ) -> 32, ( 3222678645 ) -> 64, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 540673 : BV:32
=input.dst.exreg.2.1_95_64
1 : 540673 : BV:32
=input.dst.exreg.2.1_31_0
1 : 540673 : BV:32
=input.dst.exreg.2.1_63_32
1 : 540673 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1818194011
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 132 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 63656421856572931619628768817086465 : BV:128
=input.dst.exreg.2.1
1 : 42836528321048498660601125514264577 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 33 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314129 ) -> 64, ( 3236314130 ) -> 8, ( 3236314131 ) -> 0, ( 3236314251 ) -> 0, ( 3236314258 ) -> 12, ( 3236314248 ) -> 2, ( 3236314250 ) -> 9, ( 3236314245 ) -> 128, ( 3236314247 ) -> 32, ( 3236314259 ) -> 0, ( 3236314249 ) -> 65, ( 3236314256 ) -> 129, ( 3236314255 ) -> 0, ( 3222678659 ) -> 0, ( 3236314252 ) -> 2, ( 3236314254 ) -> 72, ( 3236314253 ) -> 65, ( 3236314246 ) -> 32, ( 3222678654 ) -> 64, ( 3222678655 ) -> 0, ( 3222678644 ) -> 0, ( 3222678656 ) -> 128, ( 3222678646 ) -> 24, ( 3222678651 ) -> 0, ( 3222678658 ) -> 4, ( 3236314257 ) -> 66, ( 3222678657 ) -> 2, ( 3222678647 ) -> 32, ( 3222678645 ) -> 64, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 33 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222678656 { -1072288640 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 128 : BV:32
=input.src.llvm-%arrayidx
1 : 3222678656 { -1072288640 } : BV:32
=input.src.llvm-%add
1 : 803457 : BV:32
=input.src.llvm-%inc
1 : 33 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236314256 { -1058653040 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 128 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 262784 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314256 { -1058653040 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 540673 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314129 ) -> 64, ( 3236314130 ) -> 8, ( 3236314131 ) -> 0, ( 3236314251 ) -> 0, ( 3236314258 ) -> 12, ( 3236314248 ) -> 2, ( 3236314250 ) -> 9, ( 3236314245 ) -> 128, ( 3236314247 ) -> 32, ( 3236314259 ) -> 0, ( 3236314249 ) -> 65, ( 3236314256 ) -> 129, ( 3236314255 ) -> 0, ( 3222678659 ) -> 0, ( 3236314252 ) -> 2, ( 3236314254 ) -> 72, ( 3236314253 ) -> 65, ( 3236314246 ) -> 32, ( 3222678654 ) -> 64, ( 3222678655 ) -> 0, ( 3222678644 ) -> 0, ( 3222678656 ) -> 128, ( 3222678646 ) -> 24, ( 3222678651 ) -> 0, ( 3222678658 ) -> 4, ( 3236314257 ) -> 66, ( 3222678657 ) -> 2, ( 3222678647 ) -> 32, ( 3222678645 ) -> 64, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314129 ) -> 64, ( 3236314130 ) -> 8, ( 3236314131 ) -> 0, ( 3222678659 ) -> 0, ( 3222678654 ) -> 64, ( 3222678655 ) -> 0, ( 3222678644 ) -> 0, ( 3222678656 ) -> 128, ( 3222678646 ) -> 24, ( 3222678651 ) -> 0, ( 3222678658 ) -> 4, ( 3222678657 ) -> 2, ( 3222678647 ) -> 32, ( 3222678645 ) -> 64, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 540673 : BV:32
=input.dst.exreg.2.1_95_64
1 : 540673 : BV:32
=input.dst.exreg.2.1_31_0
1 : 540673 : BV:32
=input.dst.exreg.2.1_63_32
1 : 540673 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1818194011
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 28
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 244 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 83097111393670961922815195647836417 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 61 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222678775 ) -> 32, ( 3222678783 ) -> 2, ( 3222678787 ) -> 0, ( 3222678773 ) -> 64, ( 3222678781 ) -> 2, ( 3222678779 ) -> 0, ( 3222678772 ) -> 32, ( 3222678786 ) -> 8, ( 3222678785 ) -> 4, ( 3222678776 ) -> 2, ( 3222678784 ) -> 17, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 61 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222678775 ) -> 32, ( 3222678783 ) -> 2, ( 3222678787 ) -> 0, ( 3222678773 ) -> 64, ( 3222678781 ) -> 2, ( 3222678779 ) -> 0, ( 3222678772 ) -> 32, ( 3222678786 ) -> 8, ( 3222678785 ) -> 4, ( 3222678776 ) -> 2, ( 3222678784 ) -> 17, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222678775 ) -> 32, ( 3222678783 ) -> 2, ( 3222678787 ) -> 0, ( 3222678773 ) -> 64, ( 3222678781 ) -> 2, ( 3222678779 ) -> 0, ( 3222678772 ) -> 32, ( 3222678786 ) -> 8, ( 3222678785 ) -> 4, ( 3222678776 ) -> 2, ( 3222678784 ) -> 17, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 1048833 : BV:32
=input.dst.exreg.2.1_95_64
1 : 1048833 : BV:32
=input.dst.exreg.2.1_31_0
1 : 1048833 : BV:32
=input.dst.exreg.2.1_63_32
1 : 1048833 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1204376426
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 260 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 124717963399315340768791208773370145 : BV:128
=input.dst.exreg.2.1
1 : 83097111393670961922815195647836417 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 65 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3236314378 ) -> 17, ( 3236314374 ) -> 17, ( 3236314381 ) -> 3, ( 3236314375 ) -> 32, ( 3236314387 ) -> 0, ( 3236314373 ) -> 65, ( 3236314385 ) -> 5, ( 3236314380 ) -> 2, ( 3236314379 ) -> 0, ( 3236314382 ) -> 17, ( 3236314384 ) -> 18, ( 3222678775 ) -> 32, ( 3222678783 ) -> 2, ( 3236314377 ) -> 2, ( 3236314376 ) -> 3, ( 3236314383 ) -> 2, ( 3222678787 ) -> 0, ( 3222678773 ) -> 64, ( 3236314386 ) -> 24, ( 3222678781 ) -> 2, ( 3236314372 ) -> 33, ( 3222678779 ) -> 0, ( 3222678772 ) -> 32, ( 3222678786 ) -> 8, ( 3222678785 ) -> 4, ( 3222678776 ) -> 2, ( 3222678784 ) -> 17, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 65 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222678784 { -1072288512 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 256 : BV:32
=input.src.llvm-%arrayidx
1 : 3222678784 { -1072288512 } : BV:32
=input.src.llvm-%add
1 : 1574162 : BV:32
=input.src.llvm-%inc
1 : 65 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236314384 { -1058652912 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 256 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 525329 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314384 { -1058652912 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 1048833 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3236314378 ) -> 17, ( 3236314374 ) -> 17, ( 3236314381 ) -> 3, ( 3236314375 ) -> 32, ( 3236314387 ) -> 0, ( 3236314373 ) -> 65, ( 3236314385 ) -> 5, ( 3236314380 ) -> 2, ( 3236314379 ) -> 0, ( 3236314382 ) -> 17, ( 3236314384 ) -> 18, ( 3222678775 ) -> 32, ( 3222678783 ) -> 2, ( 3236314377 ) -> 2, ( 3236314376 ) -> 3, ( 3236314383 ) -> 2, ( 3222678787 ) -> 0, ( 3222678773 ) -> 64, ( 3236314386 ) -> 24, ( 3222678781 ) -> 2, ( 3236314372 ) -> 33, ( 3222678779 ) -> 0, ( 3222678772 ) -> 32, ( 3222678786 ) -> 8, ( 3222678785 ) -> 4, ( 3222678776 ) -> 2, ( 3222678784 ) -> 17, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222678775 ) -> 32, ( 3222678783 ) -> 2, ( 3222678787 ) -> 0, ( 3222678773 ) -> 64, ( 3222678781 ) -> 2, ( 3222678779 ) -> 0, ( 3222678772 ) -> 32, ( 3222678786 ) -> 8, ( 3222678785 ) -> 4, ( 3222678776 ) -> 2, ( 3222678784 ) -> 17, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 1048833 : BV:32
=input.dst.exreg.2.1_95_64
1 : 1048833 : BV:32
=input.dst.exreg.2.1_31_0
1 : 1048833 : BV:32
=input.dst.exreg.2.1_63_32
1 : 1048833 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1204376426
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 29
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 500 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 125 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 125 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2074941497
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 516 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 129 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 129 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222679040 { -1072288256 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 512 : BV:32
=input.src.llvm-%arrayidx
1 : 3222679040 { -1072288256 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 129 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236314640 { -1058652656 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 512 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236314640 { -1058652656 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2074941497
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 30
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1012 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 21093864449034063806396407549792258 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 253 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 2, ( 3236314129 ) -> 16, ( 3236314130 ) -> 4, ( 3222679553 ) -> 4, ( 3222679541 ) -> 1, ( 3222679548 ) -> 64, ( 3222679552 ) -> 18, ( 3222679550 ) -> 2, ( 3222679554 ) -> 16, ( 3222679544 ) -> 16, ( 3222679545 ) -> 16, ( 3222679546 ) -> 1, ( 3222679540 ) -> 32, ( 3222679549 ) -> 1, ( 3222679542 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 253 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 2, ( 3236314129 ) -> 16, ( 3236314130 ) -> 4, ( 3222679553 ) -> 4, ( 3222679541 ) -> 1, ( 3222679548 ) -> 64, ( 3222679552 ) -> 18, ( 3222679550 ) -> 2, ( 3222679554 ) -> 16, ( 3222679544 ) -> 16, ( 3222679545 ) -> 16, ( 3222679546 ) -> 1, ( 3222679540 ) -> 32, ( 3222679549 ) -> 1, ( 3222679542 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 2, ( 3236314129 ) -> 16, ( 3236314130 ) -> 4, ( 3222679553 ) -> 4, ( 3222679541 ) -> 1, ( 3222679548 ) -> 64, ( 3222679552 ) -> 18, ( 3222679550 ) -> 2, ( 3222679554 ) -> 16, ( 3222679544 ) -> 16, ( 3222679545 ) -> 16, ( 3222679546 ) -> 1, ( 3222679540 ) -> 32, ( 3222679549 ) -> 1, ( 3222679542 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 266242 : BV:32
=input.dst.exreg.2.1_95_64
1 : 266242 : BV:32
=input.dst.exreg.2.1_31_0
1 : 266242 : BV:32
=input.dst.exreg.2.1_63_32
1 : 266242 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1633238319
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1028 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 104253169933354923900288802902249762 : BV:128
=input.dst.exreg.2.1
1 : 21093864449034063806396407549792258 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 257 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 2, ( 3236314129 ) -> 16, ( 3236314130 ) -> 4, ( 3236315153 ) -> 20, ( 3222679553 ) -> 4, ( 3236315149 ) -> 17, ( 3236315145 ) -> 32, ( 3236315146 ) -> 5, ( 3236315150 ) -> 6, ( 3236315144 ) -> 18, ( 3222679541 ) -> 1, ( 3222679548 ) -> 64, ( 3236315141 ) -> 17, ( 3222679552 ) -> 18, ( 3236315148 ) -> 66, ( 3222679550 ) -> 2, ( 3236315154 ) -> 20, ( 3236315140 ) -> 34, ( 3222679554 ) -> 16, ( 3222679544 ) -> 16, ( 3236315152 ) -> 20, ( 3222679545 ) -> 16, ( 3222679546 ) -> 1, ( 3222679540 ) -> 32, ( 3222679549 ) -> 1, ( 3236315142 ) -> 12, ( 3222679542 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 257 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222679552 { -1072287744 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 1024 : BV:32
=input.src.llvm-%arrayidx
1 : 3222679552 { -1072287744 } : BV:32
=input.src.llvm-%add
1 : 1315860 : BV:32
=input.src.llvm-%inc
1 : 257 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236315152 { -1058652144 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 1024 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 1049618 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236315152 { -1058652144 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 266242 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 2, ( 3236314129 ) -> 16, ( 3236314130 ) -> 4, ( 3236315153 ) -> 20, ( 3222679553 ) -> 4, ( 3236315149 ) -> 17, ( 3236315145 ) -> 32, ( 3236315146 ) -> 5, ( 3236315150 ) -> 6, ( 3236315144 ) -> 18, ( 3222679541 ) -> 1, ( 3222679548 ) -> 64, ( 3236315141 ) -> 17, ( 3222679552 ) -> 18, ( 3236315148 ) -> 66, ( 3222679550 ) -> 2, ( 3236315154 ) -> 20, ( 3236315140 ) -> 34, ( 3222679554 ) -> 16, ( 3222679544 ) -> 16, ( 3236315152 ) -> 20, ( 3222679545 ) -> 16, ( 3222679546 ) -> 1, ( 3222679540 ) -> 32, ( 3222679549 ) -> 1, ( 3236315142 ) -> 12, ( 3222679542 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 2, ( 3236314129 ) -> 16, ( 3236314130 ) -> 4, ( 3222679553 ) -> 4, ( 3222679541 ) -> 1, ( 3222679548 ) -> 64, ( 3222679552 ) -> 18, ( 3222679550 ) -> 2, ( 3222679554 ) -> 16, ( 3222679544 ) -> 16, ( 3222679545 ) -> 16, ( 3222679546 ) -> 1, ( 3222679540 ) -> 32, ( 3222679549 ) -> 1, ( 3222679542 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 266242 : BV:32
=input.dst.exreg.2.1_95_64
1 : 266242 : BV:32
=input.dst.exreg.2.1_31_0
1 : 266242 : BV:32
=input.dst.exreg.2.1_63_32
1 : 266242 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1633238319
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 31
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2036 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 509 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 509 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
896757354
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2052 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 513 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 513 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222680576 { -1072286720 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 2048 : BV:32
=input.src.llvm-%arrayidx
1 : 3222680576 { -1072286720 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 513 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236316176 { -1058651120 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 2048 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236316176 { -1058651120 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
896757354
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 32
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4084 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 170307358549655322005806710428224454928 { -169975008371283141457567897003543756528 } : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1021 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 32, ( 3236314131 ) -> 128, ( 3222682619 ) -> 128, ( 3222682624 ) -> 48, ( 3222682615 ) -> 128, ( 3222682623 ) -> 130, ( 3222682617 ) -> 2, ( 3222682621 ) -> 2, ( 3222682613 ) -> 2, ( 3222682625 ) -> 2, ( 3222682627 ) -> 0, ( 3222682616 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1021 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 32, ( 3236314131 ) -> 128, ( 3222682619 ) -> 128, ( 3222682624 ) -> 48, ( 3222682615 ) -> 128, ( 3222682623 ) -> 130, ( 3222682617 ) -> 2, ( 3222682621 ) -> 2, ( 3222682613 ) -> 2, ( 3222682625 ) -> 2, ( 3222682627 ) -> 0, ( 3222682616 ) -> 0, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 32, ( 3236314131 ) -> 128, ( 3222682619 ) -> 128, ( 3222682624 ) -> 48, ( 3222682615 ) -> 128, ( 3222682623 ) -> 130, ( 3222682617 ) -> 2, ( 3222682621 ) -> 2, ( 3222682613 ) -> 2, ( 3222682625 ) -> 2, ( 3222682627 ) -> 0, ( 3222682616 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 2149581072 { -2145386224 } : BV:32
=input.dst.exreg.2.1_95_64
1 : 2149581072 { -2145386224 } : BV:32
=input.dst.exreg.2.1_31_0
1 : 2149581072 { -2145386224 } : BV:32
=input.dst.exreg.2.1_63_32
1 : 2149581072 { -2145386224 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1593694067
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4100 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 170312595175290971963751050727015908113 { -169969771745647491499623556704752303343 } : BV:128
=input.dst.exreg.2.1
1 : 170307358549655322005806710428224454928 { -169975008371283141457567897003543756528 } : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1025 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 32, ( 3236314131 ) -> 128, ( 3236318212 ) -> 17, ( 3236318227 ) -> 128, ( 3236318214 ) -> 33, ( 3236318216 ) -> 16, ( 3236318223 ) -> 2, ( 3236318220 ) -> 17, ( 3236318221 ) -> 3, ( 3222682619 ) -> 128, ( 3236318225 ) -> 3, ( 3236318218 ) -> 33, ( 3236318217 ) -> 3, ( 3236318213 ) -> 3, ( 3236318224 ) -> 64, ( 3236318226 ) -> 33, ( 3236318215 ) -> 0, ( 3236318219 ) -> 0, ( 3222682624 ) -> 48, ( 3222682615 ) -> 128, ( 3236318222 ) -> 33, ( 3222682623 ) -> 130, ( 3222682617 ) -> 2, ( 3222682621 ) -> 2, ( 3222682613 ) -> 2, ( 3222682625 ) -> 2, ( 3222682627 ) -> 0, ( 3222682616 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1025 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222682624 { -1072284672 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 4096 : BV:32
=input.src.llvm-%arrayidx
1 : 3222682624 { -1072284672 } : BV:32
=input.src.llvm-%add
1 : 2149647168 { -2145320128 } : BV:32
=input.src.llvm-%inc
1 : 1025 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236318224 { -1058649072 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 4096 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 66096 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236318224 { -1058649072 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 2149581072 { -2145386224 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 32, ( 3236314131 ) -> 128, ( 3236318212 ) -> 17, ( 3236318227 ) -> 128, ( 3236318214 ) -> 33, ( 3236318216 ) -> 16, ( 3236318223 ) -> 2, ( 3236318220 ) -> 17, ( 3236318221 ) -> 3, ( 3222682619 ) -> 128, ( 3236318225 ) -> 3, ( 3236318218 ) -> 33, ( 3236318217 ) -> 3, ( 3236318213 ) -> 3, ( 3236318224 ) -> 64, ( 3236318226 ) -> 33, ( 3236318215 ) -> 0, ( 3236318219 ) -> 0, ( 3222682624 ) -> 48, ( 3222682615 ) -> 128, ( 3236318222 ) -> 33, ( 3222682623 ) -> 130, ( 3222682617 ) -> 2, ( 3222682621 ) -> 2, ( 3222682613 ) -> 2, ( 3222682625 ) -> 2, ( 3222682627 ) -> 0, ( 3222682616 ) -> 0, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 32, ( 3236314131 ) -> 128, ( 3222682619 ) -> 128, ( 3222682624 ) -> 48, ( 3222682615 ) -> 128, ( 3222682623 ) -> 130, ( 3222682617 ) -> 2, ( 3222682621 ) -> 2, ( 3222682613 ) -> 2, ( 3222682625 ) -> 2, ( 3222682627 ) -> 0, ( 3222682616 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 2149581072 { -2145386224 } : BV:32
=input.dst.exreg.2.1_95_64
1 : 2149581072 { -2145386224 } : BV:32
=input.dst.exreg.2.1_31_0
1 : 2149581072 { -2145386224 } : BV:32
=input.dst.exreg.2.1_63_32
1 : 2149581072 { -2145386224 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1593694067
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 33
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8180 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 83098299816108952589040268874875152 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2045 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222686719 ) -> 2, ( 3222686713 ) -> 2, ( 3222686709 ) -> 32, ( 3222686710 ) -> 32, ( 3222686711 ) -> 2, ( 3222686720 ) -> 16, ( 3222686722 ) -> 16, ( 3222686723 ) -> 0, ( 3222686721 ) -> 16, ( 3222686715 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2045 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222686719 ) -> 2, ( 3222686713 ) -> 2, ( 3222686709 ) -> 32, ( 3222686710 ) -> 32, ( 3222686711 ) -> 2, ( 3222686720 ) -> 16, ( 3222686722 ) -> 16, ( 3222686723 ) -> 0, ( 3222686721 ) -> 16, ( 3222686715 ) -> 0, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222686719 ) -> 2, ( 3222686713 ) -> 2, ( 3222686709 ) -> 32, ( 3222686710 ) -> 32, ( 3222686711 ) -> 2, ( 3222686720 ) -> 16, ( 3222686722 ) -> 16, ( 3222686723 ) -> 0, ( 3222686721 ) -> 16, ( 3222686715 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 1048848 : BV:32
=input.dst.exreg.2.1_95_64
1 : 1048848 : BV:32
=input.dst.exreg.2.1_31_0
1 : 1048848 : BV:32
=input.dst.exreg.2.1_63_32
1 : 1048848 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
475555382
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8196 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 166500836377108535877528251175805201 : BV:128
=input.dst.exreg.2.1
1 : 83098299816108952589040268874875152 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2049 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3236322311 ) -> 2, ( 3236322312 ) -> 17, ( 3236322319 ) -> 2, ( 3236322314 ) -> 17, ( 3222686719 ) -> 2, ( 3222686713 ) -> 2, ( 3222686709 ) -> 32, ( 3236322316 ) -> 17, ( 3236322308 ) -> 17, ( 3236322309 ) -> 33, ( 3236322315 ) -> 0, ( 3236322320 ) -> 32, ( 3236322310 ) -> 48, ( 3236322313 ) -> 3, ( 3236322321 ) -> 17, ( 3222686710 ) -> 32, ( 3222686711 ) -> 2, ( 3222686720 ) -> 16, ( 3222686722 ) -> 16, ( 3236322317 ) -> 2, ( 3236322323 ) -> 0, ( 3222686723 ) -> 0, ( 3222686721 ) -> 16, ( 3236322318 ) -> 17, ( 3222686715 ) -> 0, ( 3236322322 ) -> 32, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2049 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222686720 { -1072280576 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 8192 : BV:32
=input.src.llvm-%arrayidx
1 : 3222686720 { -1072280576 } : BV:32
=input.src.llvm-%add
1 : 2101536 : BV:32
=input.src.llvm-%inc
1 : 2049 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236322320 { -1058644976 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 8192 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 1052688 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236322320 { -1058644976 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 1048848 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3236322311 ) -> 2, ( 3236322312 ) -> 17, ( 3236322319 ) -> 2, ( 3236322314 ) -> 17, ( 3222686719 ) -> 2, ( 3222686713 ) -> 2, ( 3222686709 ) -> 32, ( 3236322316 ) -> 17, ( 3236322308 ) -> 17, ( 3236322309 ) -> 33, ( 3236322315 ) -> 0, ( 3236322320 ) -> 32, ( 3236322310 ) -> 48, ( 3236322313 ) -> 3, ( 3236322321 ) -> 17, ( 3222686710 ) -> 32, ( 3222686711 ) -> 2, ( 3222686720 ) -> 16, ( 3222686722 ) -> 16, ( 3236322317 ) -> 2, ( 3236322323 ) -> 0, ( 3222686723 ) -> 0, ( 3222686721 ) -> 16, ( 3236322318 ) -> 17, ( 3222686715 ) -> 0, ( 3236322322 ) -> 32, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 16, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222686719 ) -> 2, ( 3222686713 ) -> 2, ( 3222686709 ) -> 32, ( 3222686710 ) -> 32, ( 3222686711 ) -> 2, ( 3222686720 ) -> 16, ( 3222686722 ) -> 16, ( 3222686723 ) -> 0, ( 3222686721 ) -> 16, ( 3222686715 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 1048848 : BV:32
=input.dst.exreg.2.1_95_64
1 : 1048848 : BV:32
=input.dst.exreg.2.1_31_0
1 : 1048848 : BV:32
=input.dst.exreg.2.1_63_32
1 : 1048848 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
475555382
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 34
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16372 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4093 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4093 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
646346768
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16388 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4097 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4097 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222694912 { -1072272384 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 16384 : BV:32
=input.src.llvm-%arrayidx
1 : 3222694912 { -1072272384 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4097 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236330512 { -1058636784 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 16384 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236330512 { -1058636784 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
646346768
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 35
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32756 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 85674165836372455276345652707098640 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8189 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 16, ( 3236314129 ) -> 128, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222711299 ) -> 0, ( 3222711291 ) -> 0, ( 3222711289 ) -> 16, ( 3222711294 ) -> 0, ( 3222711287 ) -> 0, ( 3222711295 ) -> 0, ( 3222711298 ) -> 48, ( 3222711297 ) -> 26, ( 3222711293 ) -> 128, ( 3222711296 ) -> 16, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8189 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 16, ( 3236314129 ) -> 128, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222711299 ) -> 0, ( 3222711291 ) -> 0, ( 3222711289 ) -> 16, ( 3222711294 ) -> 0, ( 3222711287 ) -> 0, ( 3222711295 ) -> 0, ( 3222711298 ) -> 48, ( 3222711297 ) -> 26, ( 3222711293 ) -> 128, ( 3222711296 ) -> 16, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 16, ( 3236314129 ) -> 128, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222711299 ) -> 0, ( 3222711291 ) -> 0, ( 3222711289 ) -> 16, ( 3222711294 ) -> 0, ( 3222711287 ) -> 0, ( 3222711295 ) -> 0, ( 3222711298 ) -> 48, ( 3222711297 ) -> 26, ( 3222711293 ) -> 128, ( 3222711296 ) -> 16, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 1081360 : BV:32
=input.dst.exreg.2.1_95_64
1 : 1081360 : BV:32
=input.dst.exreg.2.1_31_0
1 : 1081360 : BV:32
=input.dst.exreg.2.1_63_32
1 : 1081360 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1874586284
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32772 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 335433025346943834463084061500997905 : BV:128
=input.dst.exreg.2.1
1 : 85674165836372455276345652707098640 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8193 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 16, ( 3236314129 ) -> 128, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222711299 ) -> 0, ( 3236346890 ) -> 17, ( 3236346899 ) -> 0, ( 3236346886 ) -> 17, ( 3236346893 ) -> 0, ( 3236346891 ) -> 0, ( 3236346894 ) -> 17, ( 3236346895 ) -> 0, ( 3236346896 ) -> 32, ( 3222711291 ) -> 0, ( 3222711289 ) -> 16, ( 3222711294 ) -> 0, ( 3222711287 ) -> 0, ( 3236346884 ) -> 17, ( 3236346887 ) -> 0, ( 3236346892 ) -> 17, ( 3222711295 ) -> 0, ( 3236346898 ) -> 64, ( 3236346889 ) -> 144, ( 3236346897 ) -> 154, ( 3236346888 ) -> 17, ( 3222711298 ) -> 48, ( 3222711297 ) -> 26, ( 3236346885 ) -> 129, ( 3222711293 ) -> 128, ( 3222711296 ) -> 16, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8193 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222711296 { -1072256000 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 32768 : BV:32
=input.src.llvm-%arrayidx
1 : 3222711296 { -1072256000 } : BV:32
=input.src.llvm-%add
1 : 4233760 : BV:32
=input.src.llvm-%inc
1 : 8193 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236346896 { -1058620400 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 32768 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 3152400 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236346896 { -1058620400 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 1081360 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 16, ( 3236314129 ) -> 128, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222711299 ) -> 0, ( 3236346890 ) -> 17, ( 3236346899 ) -> 0, ( 3236346886 ) -> 17, ( 3236346893 ) -> 0, ( 3236346891 ) -> 0, ( 3236346894 ) -> 17, ( 3236346895 ) -> 0, ( 3236346896 ) -> 32, ( 3222711291 ) -> 0, ( 3222711289 ) -> 16, ( 3222711294 ) -> 0, ( 3222711287 ) -> 0, ( 3236346884 ) -> 17, ( 3236346887 ) -> 0, ( 3236346892 ) -> 17, ( 3222711295 ) -> 0, ( 3236346898 ) -> 64, ( 3236346889 ) -> 144, ( 3236346897 ) -> 154, ( 3236346888 ) -> 17, ( 3222711298 ) -> 48, ( 3222711297 ) -> 26, ( 3236346885 ) -> 129, ( 3222711293 ) -> 128, ( 3222711296 ) -> 16, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 16, ( 3236314129 ) -> 128, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222711299 ) -> 0, ( 3222711291 ) -> 0, ( 3222711289 ) -> 16, ( 3222711294 ) -> 0, ( 3222711287 ) -> 0, ( 3222711295 ) -> 0, ( 3222711298 ) -> 48, ( 3222711297 ) -> 26, ( 3222711293 ) -> 128, ( 3222711296 ) -> 16, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 1081360 : BV:32
=input.dst.exreg.2.1_95_64
1 : 1081360 : BV:32
=input.dst.exreg.2.1_31_0
1 : 1081360 : BV:32
=input.dst.exreg.2.1_63_32
1 : 1081360 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1874586284
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 36
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65524 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 83083088008902672061359331568779344 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16381 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 80, ( 3236314129 ) -> 0, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222744064 ) -> 208, ( 3222744063 ) -> 0, ( 3222744062 ) -> 0, ( 3222744066 ) -> 48, ( 3222744061 ) -> 4, ( 3222744067 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16381 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 80, ( 3236314129 ) -> 0, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222744064 ) -> 208, ( 3222744063 ) -> 0, ( 3222744062 ) -> 0, ( 3222744066 ) -> 48, ( 3222744061 ) -> 4, ( 3222744067 ) -> 0, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 80, ( 3236314129 ) -> 0, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222744064 ) -> 208, ( 3222744063 ) -> 0, ( 3222744062 ) -> 0, ( 3222744066 ) -> 48, ( 3222744061 ) -> 4, ( 3222744067 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 1048656 : BV:32
=input.dst.exreg.2.1_95_64
1 : 1048656 : BV:32
=input.dst.exreg.2.1_31_0
1 : 1048656 : BV:32
=input.dst.exreg.2.1_63_32
1 : 1048656 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1994675953
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65540 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 332350099085999924868482284892782929 : BV:128
=input.dst.exreg.2.1
1 : 83083088008902672061359331568779344 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16385 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (( 3236314128 ) -> 80, ( 3236314129 ) -> 0, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3236379660 ) -> 81, ( 3236379661 ) -> 4, ( 3236379664 ) -> 32, ( 3236379652 ) -> 81, ( 3236379663 ) -> 0, ( 3236379667 ) -> 0, ( 3236379662 ) -> 16, ( 3236379665 ) -> 2, ( 3222744064 ) -> 208, ( 3222744063 ) -> 0, ( 3236379654 ) -> 17, ( 3222744062 ) -> 0, ( 3236379658 ) -> 17, ( 3236379666 ) -> 64, ( 3236379656 ) -> 81, ( 3222744066 ) -> 48, ( 3222744061 ) -> 4, ( 3222744067 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16385 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3222744064 { -1072223232 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 65536 : BV:32
=input.src.llvm-%arrayidx
1 : 3222744064 { -1072223232 } : BV:32
=input.src.llvm-%add
1 : 4194848 : BV:32
=input.src.llvm-%inc
1 : 16385 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3236379664 { -1058587632 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 65536 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%1
1 : 3146192 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236379664 { -1058587632 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 1048656 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (( 3236314128 ) -> 80, ( 3236314129 ) -> 0, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3236379660 ) -> 81, ( 3236379661 ) -> 4, ( 3236379664 ) -> 32, ( 3236379652 ) -> 81, ( 3236379663 ) -> 0, ( 3236379667 ) -> 0, ( 3236379662 ) -> 16, ( 3236379665 ) -> 2, ( 3222744064 ) -> 208, ( 3222744063 ) -> 0, ( 3236379654 ) -> 17, ( 3222744062 ) -> 0, ( 3236379658 ) -> 17, ( 3236379666 ) -> 64, ( 3236379656 ) -> 81, ( 3222744066 ) -> 48, ( 3222744061 ) -> 4, ( 3222744067 ) -> 0, [ 12845056; 3221762047 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3236314128 ) -> 80, ( 3236314129 ) -> 0, ( 3236314130 ) -> 16, ( 3236314131 ) -> 0, ( 3222744064 ) -> 208, ( 3222744063 ) -> 0, ( 3222744062 ) -> 0, ( 3222744066 ) -> 48, ( 3222744061 ) -> 4, ( 3222744067 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 1048656 : BV:32
=input.dst.exreg.2.1_95_64
1 : 1048656 : BV:32
=input.dst.exreg.2.1_31_0
1 : 1048656 : BV:32
=input.dst.exreg.2.1_63_32
1 : 1048656 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1994675953
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 37
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127972 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31993 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31993 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
934695984
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127972 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31993 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31993 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
934695984
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 38
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127972 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31993 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31993 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1774922909
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127972 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31993 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31993 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1774922909
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 39
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127972 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31993 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31993 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
255168164
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127972 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.3
1 : 3222678528 { -1072288768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 31993 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31993 : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222806527 { -1072160769 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
255168164
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 40
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1073610752 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 126976 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
313515824
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1073610752 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 126976 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
313515824
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 41
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1073610752 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 126976 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
313515824
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 5 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 5 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3221097472 { -1073869824 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 2147355664 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx
1 : 2147355664 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 5 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3221097488 { -1073869808 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1073610752 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 126976 : BV:32
=input.src.llvm-%arrayidx1
1 : 3221097488 { -1073869808 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3221097472 { -1073869824 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
313515824
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 42
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1073610752 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 126976 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
313515824
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 36 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 9 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 9 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3221097472 { -1073869824 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 2147355680 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%arrayidx
1 : 2147355680 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 9 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3221097504 { -1073869792 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1073610752 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 126976 : BV:32
=input.src.llvm-%arrayidx1
1 : 3221097504 { -1073869792 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3221097472 { -1073869824 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
313515824
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 43
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4284169232 { -10798064 } : BV:32
=symbol.2
1 : 82944 : BV:32
=dst_symbol_addr.2
1 : 82944 : BV:32
=dst_symbol_addr.3
1 : 4284169232 { -10798064 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4278177788 { -16789508 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4278177791 { -16789505 } : BV:32
=memlabel-mem-esp_begin
1 : 217088 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4284169232 { -10798064 } : BV:32
=stack.size
1 : 4277960704 { -17006592 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4284297231 { -10670065 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 210943 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 82944 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2096973703
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4278177788 { -16789508 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 4284169232 { -10798064 } : BV:32
=symbol.2
1 : 82944 : BV:32
=dst_symbol_addr.2
1 : 82944 : BV:32
=dst_symbol_addr.3
1 : 4284169232 { -10798064 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4278177788 { -16789508 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4278177788 { -16789508 } : BV:32
=memlabel-mem-esp_end
1 : 4278177791 { -16789505 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 217088 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4284169232 { -10798064 } : BV:32
=stack.size
1 : 4277960704 { -17006592 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4284297231 { -10670065 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 210943 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 82944 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2096973703
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 44
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3513819000
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 273727813891067121474839063122120937264 { -66554553029871341988535544309647274192 } : BV:128
=input.dst.exreg.2.2
1 : 3454930736 : BV:128
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3513819000
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 45
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3513819000
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 185827402566830080861768628417209080540 { -154454964354108382601605979014559130916 } : BV:128
=input.dst.exreg.2.1
1 : 273727813891067121474839063122120937264 { -66554553029871341988535544309647274192 } : BV:128
=input.dst.exreg.2.2
1 : 3454930736 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 5 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562769427 ) -> 139, ( 1562769415 ) -> 23, ( 1562769416 ) -> 88, ( 1562769424 ) -> 80, ( 1562769418 ) -> 212, ( 1562769413 ) -> 154, ( 1562769412 ) -> 220, ( 1562769414 ) -> 88, ( 1562769426 ) -> 205, ( 1562769422 ) -> 80, ( 1562769425 ) -> 14, ( 1562769420 ) -> 212, ( 1562769417 ) -> 22, ( 1562769419 ) -> 147, ( 1562769421 ) -> 146, ( 1562769423 ) -> 15, () -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 5 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 1562769408 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 372506640 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx
1 : 372506640 : BV:32
=input.src.llvm-%add
1 : 2345471568 { -1949495728 } : BV:32
=input.src.llvm-%inc
1 : 5 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 1562769424 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%1
1 : 3185508128 { -1109459168 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%arrayidx1
1 : 1562769424 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 1562769408 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 3454930736 { -840036560 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 1562769427 ) -> 139, ( 1562769415 ) -> 23, ( 4294967293 ) -> 0, ( 1562769416 ) -> 88, ( 1562769424 ) -> 80, ( 1562769418 ) -> 212, ( 4294967294 ) -> 0, ( 1562769413 ) -> 154, ( 1562769412 ) -> 220, ( 1562769414 ) -> 88, ( 1562769426 ) -> 205, ( 1562769422 ) -> 80, ( 1562769425 ) -> 14, ( 1562769420 ) -> 212, ( 1562769417 ) -> 22, ( 1562769419 ) -> 147, ( 1562769421 ) -> 146, ( 1562769423 ) -> 15, () -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3513819000
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 46
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3513819000
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 36 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 164476352172587594688135232901775657676 : BV:128
=input.dst.exreg.2.1
1 : 273727813891067121474839063122120937264 { -66554553029871341988535544309647274192 } : BV:128
=input.dst.exreg.2.2
1 : 3454930736 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 9 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562769440 ) -> 64, ( 1562769441 ) -> 254, ( 1562769427 ) -> 139, ( 1562769415 ) -> 23, ( 1562769429 ) -> 138, ( 1562769416 ) -> 88, ( 1562769442 ) -> 188, ( 1562769424 ) -> 80, ( 1562769418 ) -> 212, ( 1562769431 ) -> 7, ( 1562769413 ) -> 154, ( 1562769412 ) -> 220, ( 1562769414 ) -> 88, ( 1562769437 ) -> 130, ( 1562769432 ) -> 72, ( 1562769435 ) -> 131, ( 1562769439 ) -> 255, ( 1562769434 ) -> 197, ( 1562769433 ) -> 6, ( 1562769438 ) -> 64, ( 1562769428 ) -> 204, ( 1562769443 ) -> 123, ( 1562769436 ) -> 196, ( 1562769426 ) -> 205, ( 1562769430 ) -> 72, ( 1562769422 ) -> 80, ( 1562769425 ) -> 14, ( 1562769420 ) -> 212, ( 1562769417 ) -> 22, ( 1562769419 ) -> 147, ( 1562769421 ) -> 146, ( 1562769423 ) -> 15, () -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 9 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 1562769408 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 372506656 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%arrayidx
1 : 372506656 : BV:32
=input.src.llvm-%add
1 : 2075983424 : BV:32
=input.src.llvm-%inc
1 : 9 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 1562769440 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%1
1 : 2916019984 { -1378947312 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%arrayidx1
1 : 1562769440 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 1562769408 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 3454930736 { -840036560 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 1562769440 ) -> 64, ( 4294967292 ) -> 0, ( 1562769441 ) -> 254, ( 1562769427 ) -> 139, ( 1562769415 ) -> 23, ( 1562769429 ) -> 138, ( 4294967293 ) -> 0, ( 1562769416 ) -> 88, ( 1562769442 ) -> 188, ( 1562769424 ) -> 80, ( 1562769418 ) -> 212, ( 1562769431 ) -> 7, ( 4294967294 ) -> 0, ( 1562769413 ) -> 154, ( 1562769412 ) -> 220, ( 1562769414 ) -> 88, ( 1562769437 ) -> 130, ( 1562769432 ) -> 72, ( 1562769435 ) -> 131, ( 1562769439 ) -> 255, ( 1562769434 ) -> 197, ( 1562769433 ) -> 6, ( 1562769438 ) -> 64, ( 1562769428 ) -> 204, ( 1562769443 ) -> 123, ( 1562769436 ) -> 196, ( 1562769426 ) -> 205, ( 1562769430 ) -> 72, ( 1562769422 ) -> 80, ( 1562769425 ) -> 14, ( 1562769420 ) -> 212, ( 1562769417 ) -> 22, ( 1562769419 ) -> 147, ( 1562769421 ) -> 146, ( 1562769423 ) -> 15, () -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3513819000
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 47
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3513819000
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 52 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 143125301699116946000237218322116541116 : BV:128
=input.dst.exreg.2.1
1 : 273727813891067121474839063122120937264 { -66554553029871341988535544309647274192 } : BV:128
=input.dst.exreg.2.2
1 : 3454930736 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 13 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562769454 ) -> 48, ( 1562769440 ) -> 64, ( 1562769441 ) -> 254, ( 1562769427 ) -> 139, ( 1562769415 ) -> 23, ( 1562769429 ) -> 138, ( 1562769416 ) -> 88, ( 1562769442 ) -> 188, ( 1562769424 ) -> 80, ( 1562769418 ) -> 212, ( 1562769458 ) -> 172, ( 1562769452 ) -> 180, ( 1562769431 ) -> 7, ( 1562769457 ) -> 238, ( 1562769413 ) -> 154, ( 1562769450 ) -> 180, ( 1562769412 ) -> 220, ( 1562769414 ) -> 88, ( 1562769437 ) -> 130, ( 1562769432 ) -> 72, ( 1562769446 ) -> 56, ( 1562769435 ) -> 131, ( 1562769439 ) -> 255, ( 1562769434 ) -> 197, ( 1562769433 ) -> 6, ( 1562769438 ) -> 64, ( 1562769445 ) -> 122, ( 1562769428 ) -> 204, ( 1562769453 ) -> 114, ( 1562769443 ) -> 123, ( 1562769456 ) -> 48, ( 1562769459 ) -> 107, ( 1562769449 ) -> 246, ( 1562769436 ) -> 196, ( 1562769426 ) -> 205, ( 1562769430 ) -> 72, ( 1562769422 ) -> 80, ( 1562769448 ) -> 56, ( 1562769425 ) -> 14, ( 1562769420 ) -> 212, ( 1562769444 ) -> 188, ( 1562769455 ) -> 239, ( 1562769447 ) -> 247, ( 1562769417 ) -> 22, ( 1562769419 ) -> 147, ( 1562769421 ) -> 146, ( 1562769423 ) -> 15, ( 1562769451 ) -> 115, () -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 13 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 1562769408 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 372506672 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 48 : BV:32
=input.src.llvm-%arrayidx
1 : 372506672 : BV:32
=input.src.llvm-%add
1 : 1806495280 : BV:32
=input.src.llvm-%inc
1 : 13 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 1562769456 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 48 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%1
1 : 2646531840 { -1648435456 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%arrayidx1
1 : 1562769456 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 1562769408 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 48 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 48 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 3454930736 { -840036560 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 1562769454 ) -> 48, ( 1562769440 ) -> 64, ( 4294967292 ) -> 0, ( 1562769441 ) -> 254, ( 1562769427 ) -> 139, ( 1562769415 ) -> 23, ( 1562769429 ) -> 138, ( 4294967293 ) -> 0, ( 1562769416 ) -> 88, ( 1562769442 ) -> 188, ( 1562769424 ) -> 80, ( 1562769418 ) -> 212, ( 1562769458 ) -> 172, ( 1562769452 ) -> 180, ( 1562769431 ) -> 7, ( 1562769457 ) -> 238, ( 4294967294 ) -> 0, ( 1562769413 ) -> 154, ( 1562769450 ) -> 180, ( 1562769412 ) -> 220, ( 1562769414 ) -> 88, ( 1562769437 ) -> 130, ( 1562769432 ) -> 72, ( 1562769446 ) -> 56, ( 1562769435 ) -> 131, ( 1562769439 ) -> 255, ( 1562769434 ) -> 197, ( 1562769433 ) -> 6, ( 1562769438 ) -> 64, ( 1562769445 ) -> 122, ( 1562769428 ) -> 204, ( 1562769453 ) -> 114, ( 1562769443 ) -> 123, ( 1562769456 ) -> 48, ( 1562769459 ) -> 107, ( 1562769449 ) -> 246, ( 1562769436 ) -> 196, ( 1562769426 ) -> 205, ( 1562769430 ) -> 72, ( 1562769422 ) -> 80, ( 1562769448 ) -> 56, ( 1562769425 ) -> 14, ( 1562769420 ) -> 212, ( 1562769444 ) -> 188, ( 1562769455 ) -> 239, ( 1562769447 ) -> 247, ( 1562769417 ) -> 22, ( 1562769419 ) -> 147, ( 1562769421 ) -> 146, ( 1562769423 ) -> 15, ( 1562769451 ) -> 115, () -> (RAC: m_multiplier -> 223 , m_adder -> 48)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3513819000
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 48
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223455 { -1073743841 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095456 { -1073871840 } : BV:32
=input.dst.mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1706790001
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.2
1 : 3221095456 { -1073871840 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223455 { -1073743841 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095456 { -1073871840 } : BV:32
=input.dst.mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3221223451 ) -> 255, ( 3221223450 ) -> 255, ( 3221223449 ) -> 255, ( 3221223448 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1706790001
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 49
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1459171056 : BV:32
=symbol.2
1 : 1308232704 : BV:32
=dst_symbol_addr.2
1 : 1308232704 : BV:32
=dst_symbol_addr.3
1 : 1459171056 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3758100476 { -536866820 } : BV:32
=input.src.llvm-mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3758100479 { -536866817 } : BV:32
=memlabel-mem-esp_begin
1 : 1784672256 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1459171056 : BV:32
=stack.size
1 : 1973428224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1459299055 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1308360703 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1308232704 : BV:32
=input.dst.mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1053713271
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3758100476 { -536866820 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1459171056 : BV:32
=symbol.2
1 : 1308232704 : BV:32
=dst_symbol_addr.2
1 : 1308232704 : BV:32
=dst_symbol_addr.3
1 : 1459171056 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3758100476 { -536866820 } : BV:32
=input.src.llvm-mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3758100476 { -536866820 } : BV:32
=memlabel-mem-esp_end
1 : 3758100479 { -536866817 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1784672256 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1459171056 : BV:32
=stack.size
1 : 1973428224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1459299055 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1308360703 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1308232704 : BV:32
=input.dst.mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1308360697 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1053713271
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 50
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635051986
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1562897403 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635051986
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 51
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3593007392 { -701959904 } : BV:32
=symbol.2
1 : 1052509520 : BV:32
=dst_symbol_addr.2
1 : 1052509520 : BV:32
=dst_symbol_addr.3
1 : 3593007392 { -701959904 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1730162684 : BV:32
=input.src.llvm-mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1730162687 : BV:32
=memlabel-mem-esp_begin
1 : 1261699072 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3593007392 { -701959904 } : BV:32
=stack.size
1 : 468463616 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3593135391 { -701831905 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1052637519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1052509520 : BV:32
=input.dst.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2009589844
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1730162684 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 3593007392 { -701959904 } : BV:32
=symbol.2
1 : 1052509520 : BV:32
=dst_symbol_addr.2
1 : 1052509520 : BV:32
=dst_symbol_addr.3
1 : 3593007392 { -701959904 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1730162684 : BV:32
=input.src.llvm-mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1730162684 : BV:32
=memlabel-mem-esp_end
1 : 1730162687 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1261699072 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3593007392 { -701959904 } : BV:32
=stack.size
1 : 468463616 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3593135391 { -701831905 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1052637519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1052509520 : BV:32
=input.dst.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2009589844
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 52
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3593007392 { -701959904 } : BV:32
=symbol.2
1 : 1052509520 : BV:32
=dst_symbol_addr.2
1 : 1052509520 : BV:32
=dst_symbol_addr.3
1 : 3593007392 { -701959904 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1730162684 : BV:32
=input.src.llvm-mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1730162687 : BV:32
=memlabel-mem-esp_begin
1 : 1261699072 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3593007392 { -701959904 } : BV:32
=stack.size
1 : 468463616 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3593135391 { -701831905 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1052637519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1052509520 : BV:32
=input.dst.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2009589844
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1730162684 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 115964117013 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3593007392 { -701959904 } : BV:32
=symbol.2
1 : 1052509520 : BV:32
=dst_symbol_addr.2
1 : 1052509520 : BV:32
=dst_symbol_addr.3
1 : 3593007392 { -701959904 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 5 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1730162684 : BV:32
=input.src.llvm-mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 1052509524 ) -> 21, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, ( 1052509528 ) -> 27, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1730162684 : BV:32
=memlabel-mem-esp_end
1 : 1730162687 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 5 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 1052509520 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3593007408 { -701959888 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx
1 : 3593007408 { -701959888 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 5 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 1052509536 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1261699072 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3593007392 { -701959904 } : BV:32
=stack.size
1 : 468463616 : BV:32
=input.src.llvm-%arrayidx1
1 : 1052509536 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3593135391 { -701831905 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 1052509520 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1052637519 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1052509520 : BV:32
=input.dst.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 1052509524 ) -> 21, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, ( 1052509528 ) -> 27, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1052637518 ) -> 2, ( 3593135386 ) -> 181, ( 3593007396 ) -> 21, ( 1052637517 ) -> 29, ( 3593007400 ) -> 27, ( 3593135384 ) -> 222, ( 3593135387 ) -> 2, ( 3593135385 ) -> 170, ( 1052637516 ) -> 81, ( 1052637519 ) -> 80, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2009589844
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 53
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1333303590
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1333303590
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 54
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1333303590
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 30064771072 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 5 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353624 ) -> 7, ( 3221095448 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 5 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3221095440 { -1073871856 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 2147353632 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx
1 : 2147353632 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 5 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3221095456 { -1073871840 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=input.src.llvm-%arrayidx1
1 : 3221095456 { -1073871840 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3221095440 { -1073871856 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353624 ) -> 7, ( 3221095448 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353624 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1333303590
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 55
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4287613328 { -7353968 } : BV:32
=symbol.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.3
1 : 4287613328 { -7353968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4261408764 { -33558532 } : BV:32
=input.src.llvm-mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4261408767 { -33558529 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4287613328 { -7353968 } : BV:32
=stack.size
1 : 4261408768 { -33558528 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4287741327 { -7225969 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4261540223 { -33427073 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261412224 { -33555072 } : BV:32
=input.dst.mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
436877981
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4261408764 { -33558532 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 10675525236735324343949007291977041928 : BV:128
=input.dst.exreg.2.2
1 : 134744072 : BV:128
=symbol.3
1 : 4287613328 { -7353968 } : BV:32
=symbol.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.3
1 : 4287613328 { -7353968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4261408764 { -33558532 } : BV:32
=input.src.llvm-mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4261408764 { -33558532 } : BV:32
=memlabel-mem-esp_end
1 : 4261408767 { -33558529 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4287613328 { -7353968 } : BV:32
=stack.size
1 : 4261408768 { -33558528 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4287741327 { -7225969 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4261540223 { -33427073 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261412224 { -33555072 } : BV:32
=input.dst.mem
1 : (( 4261408766 ) -> 0, ( 4261408765 ) -> 0, ( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, ( 4261408764 ) -> 0, ( 4261408767 ) -> 0, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
436877981
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 56
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4287613328 { -7353968 } : BV:32
=symbol.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.3
1 : 4287613328 { -7353968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4261408764 { -33558532 } : BV:32
=input.src.llvm-mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4261408767 { -33558529 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4287613328 { -7353968 } : BV:32
=stack.size
1 : 4261408768 { -33558528 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4287741327 { -7225969 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4261540223 { -33427073 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261412224 { -33555072 } : BV:32
=input.dst.mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
436877981
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4261408764 { -33558532 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 10675525255003567835125243160925573136 : BV:128
=input.dst.exreg.2.1
1 : 10675525236735324343949007291977041928 : BV:128
=input.dst.exreg.2.2
1 : 134744072 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4287613328 { -7353968 } : BV:32
=symbol.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.2
1 : 4261412224 { -33555072 } : BV:32
=dst_symbol_addr.3
1 : 4287613328 { -7353968 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 5 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4261408764 { -33558532 } : BV:32
=input.src.llvm-mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4261412228 ) -> 16, ( 4261412231 ) -> 16, ( 4261412230 ) -> 16, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, ( 4261412229 ) -> 16, ( 4261412232 ) -> 16, ( 4261412235 ) -> 16, ( 4261412234 ) -> 16, ( 4261412233 ) -> 16, ( 4261412236 ) -> 16, ( 4261412239 ) -> 67, ( 4261412238 ) -> 15, ( 4261412237 ) -> 43, () -> 8) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4261408764 { -33558532 } : BV:32
=memlabel-mem-esp_end
1 : 4261408767 { -33558529 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 5 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4261412224 { -33555072 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 4287613344 { -7353952 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx
1 : 4287613344 { -7353952 } : BV:32
=input.src.llvm-%add
1 : 134744072 : BV:32
=input.src.llvm-%inc
1 : 5 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 4261412240 { -33555056 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4287613328 { -7353968 } : BV:32
=stack.size
1 : 4261408768 { -33558528 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4261412240 { -33555056 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4287741327 { -7225969 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4261412224 { -33555072 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 134744072 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4261540223 { -33427073 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4261412224 { -33555072 } : BV:32
=input.dst.mem
1 : (( 4261408766 ) -> 0, ( 4261408765 ) -> 0, ( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4261412228 ) -> 16, ( 4261412231 ) -> 16, ( 4261412230 ) -> 16, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, ( 4261408764 ) -> 0, ( 4261408767 ) -> 0, ( 4261412229 ) -> 16, ( 4261412232 ) -> 16, ( 4261412235 ) -> 16, ( 4261412234 ) -> 16, ( 4261412233 ) -> 16, ( 4261412236 ) -> 16, ( 4261412239 ) -> 67, ( 4261412238 ) -> 15, ( 4261412237 ) -> 43, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4287613347 ) -> 0, ( 4261540223 ) -> 59, ( 4287613345 ) -> 0, ( 4287741320 ) -> 18, ( 4261540220 ) -> 55, ( 4261540212 ) -> 0, ( 4287613346 ) -> 0, ( 4287613344 ) -> 0, ( 4261540222 ) -> 47, ( 4261540213 ) -> 0, ( 4287613343 ) -> 59, ( 4287613342 ) -> 7, ( 4287741323 ) -> 36, ( 4287741321 ) -> 0, ( 4261540214 ) -> 0, ( 4287741322 ) -> 0, ( 4261540221 ) -> 35, ( 4287613341 ) -> 35, ( 4261540215 ) -> 28, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
436877981
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 57
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1537387453
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353632 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1537387453
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 58
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3489596928 { -805370368 } : BV:32
=symbol.2
1 : 2053459584 : BV:32
=dst_symbol_addr.2
1 : 2053459584 : BV:32
=dst_symbol_addr.3
1 : 3489596928 { -805370368 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3471114236 { -823853060 } : BV:32
=input.src.llvm-mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3471114239 { -823853057 } : BV:32
=memlabel-mem-esp_begin
1 : 2603155456 { -1691811840 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3489596928 { -805370368 } : BV:32
=stack.size
1 : 867958784 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3489724927 { -805242369 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2053587583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2053459584 : BV:32
=input.dst.mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
87184889
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3471114236 { -823853060 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 633825300261688653372387753992 : BV:128
=input.dst.exreg.2.2
1 : 8 : BV:128
=symbol.3
1 : 3489596928 { -805370368 } : BV:32
=symbol.2
1 : 2053459584 : BV:32
=dst_symbol_addr.2
1 : 2053459584 : BV:32
=dst_symbol_addr.3
1 : 3489596928 { -805370368 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3471114236 { -823853060 } : BV:32
=input.src.llvm-mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3471114236 { -823853060 } : BV:32
=memlabel-mem-esp_end
1 : 3471114239 { -823853057 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 2603155456 { -1691811840 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3489596928 { -805370368 } : BV:32
=stack.size
1 : 867958784 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3489724927 { -805242369 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2053587583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2053459584 : BV:32
=input.dst.mem
1 : (( 3471114237 ) -> 0, ( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3471114238 ) -> 0, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, ( 3471114236 ) -> 0, ( 3471114239 ) -> 0, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
87184889
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 59
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3489596928 { -805370368 } : BV:32
=symbol.2
1 : 2053459584 : BV:32
=dst_symbol_addr.2
1 : 2053459584 : BV:32
=dst_symbol_addr.3
1 : 3489596928 { -805370368 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3471114236 { -823853060 } : BV:32
=input.src.llvm-mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3471114239 { -823853057 } : BV:32
=memlabel-mem-esp_begin
1 : 2603155456 { -1691811840 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3489596928 { -805370368 } : BV:32
=stack.size
1 : 867958784 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3489724927 { -805242369 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2053587583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2053459584 : BV:32
=input.dst.mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
87184889
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3471114236 { -823853060 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 10675525946142629493287527405152897040 : BV:128
=input.dst.exreg.2.1
1 : 633825300261688653372387753992 : BV:128
=input.dst.exreg.2.2
1 : 8 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3489596928 { -805370368 } : BV:32
=symbol.2
1 : 2053459584 : BV:32
=dst_symbol_addr.2
1 : 2053459584 : BV:32
=dst_symbol_addr.3
1 : 3489596928 { -805370368 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 5 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3471114236 { -823853060 } : BV:32
=input.src.llvm-mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459588 ) -> 16, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, ( 2053459592 ) -> 16, ( 2053459596 ) -> 39, ( 2053459599 ) -> 252, ( 2053459600 ) -> 16, ( 2053459598 ) -> 64, ( 2053459597 ) -> 0, () -> 8) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3471114236 { -823853060 } : BV:32
=memlabel-mem-esp_end
1 : 3471114239 { -823853057 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 5 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 2053459584 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3489596944 { -805370352 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%arrayidx
1 : 3489596944 { -805370352 } : BV:32
=input.src.llvm-%add
1 : 134744080 : BV:32
=input.src.llvm-%inc
1 : 5 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 2053459600 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2603155456 { -1691811840 } : BV:32
=input.src.llvm-%1
1 : 134744072 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3489596928 { -805370368 } : BV:32
=stack.size
1 : 867958784 : BV:32
=input.src.llvm-%arrayidx1
1 : 2053459600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3489724927 { -805242369 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 2053459584 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 8 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2053587583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2053459584 : BV:32
=input.dst.mem
1 : (( 3471114237 ) -> 0, ( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3471114238 ) -> 0, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459588 ) -> 16, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, ( 3471114236 ) -> 0, ( 3471114239 ) -> 0, ( 2053459592 ) -> 16, ( 2053459596 ) -> 39, ( 2053459599 ) -> 252, ( 2053459600 ) -> 16, ( 2053459598 ) -> 64, ( 2053459597 ) -> 0, () -> 8) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3489724921 ) -> 128, ( 3489596940 ) -> 31, ( 2053459587 ) -> 0, ( 2053587580 ) -> 31, ( 2053587572 ) -> 71, ( 3489596941 ) -> 0, ( 3489596942 ) -> 64, ( 3489724922 ) -> 65, ( 3489724920 ) -> 64, ( 2053587582 ) -> 128, ( 3489596943 ) -> 252, ( 3489724923 ) -> 16, ( 2053587573 ) -> 199, ( 2053459585 ) -> 0, ( 2053587574 ) -> 65, ( 2053459586 ) -> 0, ( 2053587575 ) -> 1, ( 2053587581 ) -> 0, ( 2053587583 ) -> 252, () -> 8) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
87184889
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 60
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
277944539
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147353616 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353616 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353616 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481615 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147353628 ) -> 1, ( 3221223428 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
277944539
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 61
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
808697565
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 5070602402093509226979102031936 : BV:128
=input.dst.exreg.2.2
1 : 64 : BV:128
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1562769408 ) -> 64, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
808697565
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 62
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1571300213
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (( 1073737724 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1571300213
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 63
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 200)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 200)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3598068425
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 186926353630137138012217376568445547720 { -153356013290801325451157230863322663736 } : BV:128
=input.dst.exreg.2.2
1 : 2359342280 : BV:128
=symbol.3
1 : 372506624 : BV:32
=symbol.2
1 : 1562769408 : BV:32
=dst_symbol_addr.2
1 : 1562769408 : BV:32
=dst_symbol_addr.3
1 : 372506624 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 236 , m_adder -> 200)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 372506624 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 372634623 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1562897407 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1562769408 : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 128, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 236 , m_adder -> 200)) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3598068425
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 64
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095888 { -1073871408 } : BV:32
=dst_symbol_addr.2
1 : 3221095888 { -1073871408 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223887 { -1073743409 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095888 { -1073871408 } : BV:32
=input.dst.mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
319257917
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 237684487598133245014645407747 : BV:128
=input.dst.exreg.2.2
1 : 3 : BV:128
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095888 { -1073871408 } : BV:32
=dst_symbol_addr.2
1 : 3221095888 { -1073871408 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223887 { -1073743409 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095888 { -1073871408 } : BV:32
=input.dst.mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3221095888 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
319257917
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 65
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 134281248 : BV:32
=symbol.2
1 : 63584 : BV:32
=dst_symbol_addr.2
1 : 63584 : BV:32
=dst_symbol_addr.3
1 : 134281248 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-esp_begin
1 : 134467584 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 134281248 : BV:32
=stack.size
1 : 4160499712 { -134467584 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 134409247 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 191583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 63584 : BV:32
=input.dst.mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1121569538
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 1334440575363753010282544239948660992 : BV:128
=input.dst.exreg.2.2
1 : 16843008 : BV:128
=symbol.3
1 : 134281248 : BV:32
=symbol.2
1 : 63584 : BV:32
=dst_symbol_addr.2
1 : 63584 : BV:32
=dst_symbol_addr.3
1 : 134281248 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 134467584 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 134281248 : BV:32
=stack.size
1 : 4160499712 { -134467584 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 134409247 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 191583 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 63584 : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, ( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 63584 ) -> 0, ( 191580 ) -> 0, ( 191572 ) -> 2, ( 134409236 ) -> 2, () -> 1) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1121569538
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 66
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294764544 { -202752 } : BV:32
=symbol.2
1 : 132096 : BV:32
=dst_symbol_addr.2
1 : 132096 : BV:32
=dst_symbol_addr.3
1 : 4294764544 { -202752 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294733820 { -233476 } : BV:32
=input.src.llvm-mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294733823 { -233473 } : BV:32
=memlabel-mem-esp_begin
1 : 270336 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294764544 { -202752 } : BV:32
=stack.size
1 : 4294463488 { -503808 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294892543 { -74753 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 260095 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 132096 : BV:32
=input.dst.mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1047924304
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294733820 { -233476 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 1334440654591915542993625911497130241 : BV:128
=input.dst.exreg.2.2
1 : 16843009 : BV:128
=symbol.3
1 : 4294764544 { -202752 } : BV:32
=symbol.2
1 : 132096 : BV:32
=dst_symbol_addr.2
1 : 132096 : BV:32
=dst_symbol_addr.3
1 : 4294764544 { -202752 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294733820 { -233476 } : BV:32
=input.src.llvm-mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294733820 { -233476 } : BV:32
=memlabel-mem-esp_end
1 : 4294733823 { -233473 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 270336 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294764544 { -202752 } : BV:32
=stack.size
1 : 4294463488 { -503808 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294892543 { -74753 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 260095 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 132096 : BV:32
=input.dst.mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294733822 ) -> 0, ( 4294733821 ) -> 0, ( 4294733823 ) -> 0, ( 4294733820 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 260092 ) -> 0, ( 260093 ) -> 0, ( 4294892532 ) -> 0, ( 260085 ) -> 0, ( 260084 ) -> 0, ( 4294892537 ) -> 0, ( 4294892533 ) -> 0, ( 4294892541 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1047924304
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 67
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
13180653
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147355648 : BV:32
=symbol.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.2
1 : 3221097472 { -1073869824 } : BV:32
=dst_symbol_addr.3
1 : 2147355648 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147355648 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147483647 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221225471 { -1073741825 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221097472 { -1073869824 } : BV:32
=input.dst.mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2147483644 ) -> 1, ( 2147483636 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
13180653
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 68
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1216 : BV:32
=symbol.2
1 : 130048 : BV:32
=dst_symbol_addr.2
1 : 130048 : BV:32
=dst_symbol_addr.3
1 : 1216 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294852604 { -114692 } : BV:32
=input.src.llvm-mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294852607 { -114689 } : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1216 : BV:32
=stack.size
1 : 4294594560 { -372736 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 129215 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 258047 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130048 : BV:32
=input.dst.mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302427736
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294852604 { -114692 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 1216 : BV:32
=symbol.2
1 : 130048 : BV:32
=dst_symbol_addr.2
1 : 130048 : BV:32
=dst_symbol_addr.3
1 : 1216 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294852604 { -114692 } : BV:32
=input.src.llvm-mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294852604 { -114692 } : BV:32
=memlabel-mem-esp_end
1 : 4294852607 { -114689 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1216 : BV:32
=stack.size
1 : 4294594560 { -372736 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 129215 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 258047 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 130048 : BV:32
=input.dst.mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 129212 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302427736
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 69
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1683859015
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1683859015
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 70
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1454306681
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1454306681
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 71
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1834032976
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1834032976
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 72
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
889164757
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 1 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !72)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !72))*(  br label %for.cond, !dbg !72*  br label %for.cond, !dbg !72))
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 4 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.11 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073737724 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 1 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=symbol.3
1 : 2147353600 : BV:32
=symbol.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.2
1 : 3221095440 { -1073871856 } : BV:32
=dst_symbol_addr.3
1 : 2147353600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073737724 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 1073737724 : BV:32
=memlabel-mem-esp_end
1 : 1073737727 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1 : BV:32
=memlabel-mem-esp_begin
1 : 1069416448 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147353600 : BV:32
=stack.size
1 : 4321280 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147481599 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221223439 { -1073743857 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221095440 { -1073871856 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
889164757
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 73
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 52 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 5217887556241819127806510636269891 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4269801456 { -25165840 } : BV:32
=symbol.2
1 : 2826960896 { -1468006400 } : BV:32
=dst_symbol_addr.2
1 : 2826960896 { -1468006400 } : BV:32
=dst_symbol_addr.3
1 : 4269801456 { -25165840 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 13 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4269801515 ) -> 0, ( 4269801516 ) -> 4, ( 2826960898 ) -> 1, ( 4269801520 ) -> 16, ( 4269801509 ) -> 15, ( 4269801519 ) -> 0, ( 2826960896 ) -> 67, ( 2826960897 ) -> 1, ( 4269801523 ) -> 0, ( 4269801511 ) -> 0, ( 4269801521 ) -> 8, ( 4269801512 ) -> 4, ( 4269801508 ) -> 64, ( 2826960899 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 13 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4269801456 { -25165840 } : BV:32
=stack.size
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4269929455 { -25037841 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2827088895 { -1467878401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2826960896 { -1468006400 } : BV:32
=input.dst.mem
1 : (( 4269801515 ) -> 0, ( 4269801516 ) -> 4, ( 2826960898 ) -> 1, ( 4269801520 ) -> 16, ( 4269801509 ) -> 15, ( 4269801519 ) -> 0, ( 2826960896 ) -> 67, ( 2826960897 ) -> 1, ( 4269801523 ) -> 0, ( 4269801511 ) -> 0, ( 4269801521 ) -> 8, ( 4269801512 ) -> 4, ( 4269801508 ) -> 64, ( 2826960899 ) -> 0, [ 4294963200; 4294967295 ] -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4269801515 ) -> 0, ( 4269801516 ) -> 4, ( 2826960898 ) -> 1, ( 4269801520 ) -> 16, ( 4269801509 ) -> 15, ( 4269801519 ) -> 0, ( 2826960896 ) -> 67, ( 2826960897 ) -> 1, ( 4269801523 ) -> 0, ( 4269801511 ) -> 0, ( 4269801521 ) -> 8, ( 4269801512 ) -> 4, ( 4269801508 ) -> 64, ( 2826960899 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 65859 : BV:32
=input.dst.exreg.2.1_95_64
1 : 65859 : BV:32
=input.dst.exreg.2.1_31_0
1 : 65859 : BV:32
=input.dst.exreg.2.1_63_32
1 : 65859 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
108335066
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 68 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 15766008203168286137397036642930819 : BV:128
=input.dst.exreg.2.1
1 : 5217887556241819127806510636269891 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4269801456 { -25165840 } : BV:32
=symbol.2
1 : 2826960896 { -1468006400 } : BV:32
=dst_symbol_addr.2
1 : 2826960896 { -1468006400 } : BV:32
=dst_symbol_addr.3
1 : 4269801456 { -25165840 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 17 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2826960961 ) -> 9, ( 2826960962 ) -> 3, ( 2826960959 ) -> 0, ( 2826960949 ) -> 16, ( 2826960960 ) -> 83, ( 2826960953 ) -> 3, ( 2826960956 ) -> 71, ( 2826960951 ) -> 0, ( 2826960948 ) -> 131, ( 4269801515 ) -> 0, ( 4269801516 ) -> 4, ( 2826960898 ) -> 1, ( 2826960952 ) -> 71, ( 4269801520 ) -> 16, ( 2826960957 ) -> 3, ( 4269801509 ) -> 15, ( 4269801519 ) -> 0, ( 2826960955 ) -> 0, ( 2826960963 ) -> 0, ( 2826960958 ) -> 3, ( 2826960950 ) -> 3, ( 2826960896 ) -> 67, ( 2826960954 ) -> 3, ( 2826960897 ) -> 1, ( 4269801523 ) -> 0, ( 4269801511 ) -> 0, ( 4269801521 ) -> 8, ( 4269801512 ) -> 4, ( 4269801508 ) -> 64, ( 2826960899 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 17 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 2826960896 { -1468006400 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 4269801520 { -25165776 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 64 : BV:32
=input.src.llvm-%arrayidx
1 : 4269801520 { -25165776 } : BV:32
=input.src.llvm-%add
1 : 198995 : BV:32
=input.src.llvm-%inc
1 : 17 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 2826960960 { -1468006336 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 64 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=input.src.llvm-%1
1 : 133136 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4269801456 { -25165840 } : BV:32
=stack.size
1 : 4096 : BV:32
=input.src.llvm-%arrayidx1
1 : 2826960960 { -1468006336 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4269929455 { -25037841 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 2826960896 { -1468006400 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 65859 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2827088895 { -1467878401 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2826960896 { -1468006400 } : BV:32
=input.dst.mem
1 : (( 2826960961 ) -> 9, ( 2826960962 ) -> 3, ( 2826960959 ) -> 0, ( 2826960949 ) -> 16, ( 2826960960 ) -> 83, ( 2826960953 ) -> 3, ( 2826960956 ) -> 71, ( 2826960951 ) -> 0, ( 2826960948 ) -> 131, ( 4269801515 ) -> 0, ( 4269801516 ) -> 4, ( 2826960898 ) -> 1, ( 2826960952 ) -> 71, ( 4269801520 ) -> 16, ( 2826960957 ) -> 3, ( 4269801509 ) -> 15, ( 4269801519 ) -> 0, ( 2826960955 ) -> 0, ( 2826960963 ) -> 0, ( 2826960958 ) -> 3, ( 2826960950 ) -> 3, ( 2826960896 ) -> 67, ( 2826960954 ) -> 3, ( 2826960897 ) -> 1, ( 4269801523 ) -> 0, ( 4269801511 ) -> 0, ( 4269801521 ) -> 8, ( 4269801512 ) -> 4, ( 4269801508 ) -> 64, ( 2826960899 ) -> 0, [ 4294963200; 4294967295 ] -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4269801515 ) -> 0, ( 4269801516 ) -> 4, ( 2826960898 ) -> 1, ( 4269801520 ) -> 16, ( 4269801509 ) -> 15, ( 4269801519 ) -> 0, ( 2826960896 ) -> 67, ( 2826960897 ) -> 1, ( 4269801523 ) -> 0, ( 4269801511 ) -> 0, ( 4269801521 ) -> 8, ( 4269801512 ) -> 4, ( 4269801508 ) -> 64, ( 2826960899 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 65859 : BV:32
=input.dst.exreg.2.1_95_64
1 : 65859 : BV:32
=input.dst.exreg.2.1_31_0
1 : 65859 : BV:32
=input.dst.exreg.2.1_63_32
1 : 65859 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
108335066
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 74
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 116 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 166195331981617381800773792974242320 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4160749552 { -134217744 } : BV:32
=symbol.2
1 : 3123710928 { -1171256368 } : BV:32
=dst_symbol_addr.2
1 : 3123710928 { -1171256368 } : BV:32
=dst_symbol_addr.3
1 : 4160749552 { -134217744 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 29 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4160749682 ) -> 32, ( 3123710928 ) -> 16, ( 3123710929 ) -> 2, ( 4160749671 ) -> 0, ( 4160749679 ) -> 0, ( 3123710930 ) -> 32, ( 4160749680 ) -> 0, ( 3123710931 ) -> 0, ( 4160749683 ) -> 0, ( 4160749675 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 29 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4160749552 { -134217744 } : BV:32
=stack.size
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4160877551 { -134089745 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3123838927 { -1171128369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3123710928 { -1171256368 } : BV:32
=input.dst.mem
1 : (( 4160749682 ) -> 32, ( 3123710928 ) -> 16, ( 3123710929 ) -> 2, ( 4160749671 ) -> 0, ( 4160749679 ) -> 0, ( 3123710930 ) -> 32, ( 4160749680 ) -> 0, ( 3123710931 ) -> 0, ( 4160749683 ) -> 0, ( 4160749675 ) -> 0, [ 4294963200; 4294967295 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4160749682 ) -> 32, ( 3123710928 ) -> 16, ( 3123710929 ) -> 2, ( 4160749671 ) -> 0, ( 4160749679 ) -> 0, ( 3123710930 ) -> 32, ( 4160749680 ) -> 0, ( 3123710931 ) -> 0, ( 4160749683 ) -> 0, ( 4160749675 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 2097680 : BV:32
=input.dst.exreg.2.1_95_64
1 : 2097680 : BV:32
=input.dst.exreg.2.1_31_0
1 : 2097680 : BV:32
=input.dst.exreg.2.1_63_32
1 : 2097680 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014428725
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 132 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 332369113865549184217297774073414417 : BV:128
=input.dst.exreg.2.1
1 : 166195331981617381800773792974242320 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4160749552 { -134217744 } : BV:32
=symbol.2
1 : 3123710928 { -1171256368 } : BV:32
=dst_symbol_addr.2
1 : 3123710928 { -1171256368 } : BV:32
=dst_symbol_addr.3
1 : 4160749552 { -134217744 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 33 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 3123711050 ) -> 33, ( 3123711047 ) -> 0, ( 4160749682 ) -> 32, ( 3123710928 ) -> 16, ( 3123710929 ) -> 2, ( 4160749671 ) -> 0, ( 4160749679 ) -> 0, ( 3123711058 ) -> 64, ( 3123711049 ) -> 3, ( 3123711046 ) -> 33, ( 3123710930 ) -> 32, ( 3123711044 ) -> 17, ( 3123711055 ) -> 0, ( 3123711051 ) -> 0, ( 3123711056 ) -> 16, ( 3123711053 ) -> 3, ( 3123711059 ) -> 0, ( 3123711048 ) -> 17, ( 3123711045 ) -> 3, ( 3123711054 ) -> 33, ( 4160749680 ) -> 0, ( 3123710931 ) -> 0, ( 3123711057 ) -> 3, ( 4160749683 ) -> 0, ( 4160749675 ) -> 0, ( 3123711052 ) -> 17, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 33 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3123710928 { -1171256368 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 4160749680 { -134217616 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 128 : BV:32
=input.src.llvm-%arrayidx
1 : 4160749680 { -134217616 } : BV:32
=input.src.llvm-%add
1 : 4195088 : BV:32
=input.src.llvm-%inc
1 : 33 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 3123711056 { -1171256240 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 128 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=input.src.llvm-%1
1 : 2097408 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4160749552 { -134217744 } : BV:32
=stack.size
1 : 4096 : BV:32
=input.src.llvm-%arrayidx1
1 : 3123711056 { -1171256240 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4160877551 { -134089745 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3123710928 { -1171256368 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 2097680 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3123838927 { -1171128369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3123710928 { -1171256368 } : BV:32
=input.dst.mem
1 : (( 3123711050 ) -> 33, ( 3123711047 ) -> 0, ( 4160749682 ) -> 32, ( 3123710928 ) -> 16, ( 3123710929 ) -> 2, ( 4160749671 ) -> 0, ( 4160749679 ) -> 0, ( 3123711058 ) -> 64, ( 3123711049 ) -> 3, ( 3123711046 ) -> 33, ( 3123710930 ) -> 32, ( 3123711044 ) -> 17, ( 3123711055 ) -> 0, ( 3123711051 ) -> 0, ( 3123711056 ) -> 16, ( 3123711053 ) -> 3, ( 3123711059 ) -> 0, ( 3123711048 ) -> 17, ( 3123711045 ) -> 3, ( 3123711054 ) -> 33, ( 4160749680 ) -> 0, ( 3123710931 ) -> 0, ( 3123711057 ) -> 3, ( 4160749683 ) -> 0, ( 4160749675 ) -> 0, ( 3123711052 ) -> 17, [ 4294963200; 4294967295 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4160749682 ) -> 32, ( 3123710928 ) -> 16, ( 3123710929 ) -> 2, ( 4160749671 ) -> 0, ( 4160749679 ) -> 0, ( 3123710930 ) -> 32, ( 4160749680 ) -> 0, ( 3123710931 ) -> 0, ( 4160749683 ) -> 0, ( 4160749675 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 2097680 : BV:32
=input.dst.exreg.2.1_95_64
1 : 2097680 : BV:32
=input.dst.exreg.2.1_31_0
1 : 2097680 : BV:32
=input.dst.exreg.2.1_63_32
1 : 2097680 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2014428725
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 75
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 244 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 5217887556241819127806510636269891 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294442992 { -524304 } : BV:32
=symbol.2
1 : 4185476592 { -109490704 } : BV:32
=dst_symbol_addr.2
1 : 4185476592 { -109490704 } : BV:32
=dst_symbol_addr.3
1 : 4294442992 { -524304 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 61 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4294443243 ) -> 0, ( 4294443251 ) -> 0, ( 4185476593 ) -> 1, ( 4294443247 ) -> 0, ( 4294443239 ) -> 0, ( 4294443240 ) -> 4, ( 4294443248 ) -> 16, ( 4294443249 ) -> 64, ( 4185476592 ) -> 67, ( 4294443242 ) -> 1, ( 4294443238 ) -> 1, ( 4294443244 ) -> 4, ( 4294443236 ) -> 8, ( 4185476595 ) -> 0, ( 4185476594 ) -> 1, () -> 2) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 61 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294442992 { -524304 } : BV:32
=stack.size
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294570991 { -396305 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4185604591 { -109362705 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4185476592 { -109490704 } : BV:32
=input.dst.mem
1 : (( 4294443243 ) -> 0, ( 4294443251 ) -> 0, ( 4185476593 ) -> 1, ( 4294443247 ) -> 0, ( 4294443239 ) -> 0, ( 4294443240 ) -> 4, ( 4294443248 ) -> 16, ( 4294443249 ) -> 64, ( 4185476592 ) -> 67, ( 4294443242 ) -> 1, ( 4294443238 ) -> 1, ( 4294443244 ) -> 4, ( 4294443236 ) -> 8, ( 4185476595 ) -> 0, ( 4185476594 ) -> 1, [ 4294963200; 4294967295 ] -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294443243 ) -> 0, ( 4294443251 ) -> 0, ( 4185476593 ) -> 1, ( 4294443247 ) -> 0, ( 4294443239 ) -> 0, ( 4294443240 ) -> 4, ( 4294443248 ) -> 16, ( 4294443249 ) -> 64, ( 4185476592 ) -> 67, ( 4294443242 ) -> 1, ( 4294443238 ) -> 1, ( 4294443244 ) -> 4, ( 4294443236 ) -> 8, ( 4185476595 ) -> 0, ( 4185476594 ) -> 1, () -> 2) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 65859 : BV:32
=input.dst.exreg.2.1_95_64
1 : 65859 : BV:32
=input.dst.exreg.2.1_31_0
1 : 65859 : BV:32
=input.dst.exreg.2.1_63_32
1 : 65859 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1214969796
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 260 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 16901823140972779680856607738168139 : BV:128
=input.dst.exreg.2.1
1 : 5217887556241819127806510636269891 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4294442992 { -524304 } : BV:32
=symbol.2
1 : 4185476592 { -109490704 } : BV:32
=dst_symbol_addr.2
1 : 4185476592 { -109490704 } : BV:32
=dst_symbol_addr.3
1 : 4294442992 { -524304 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 65 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4185476845 ) -> 3, ( 4185476846 ) -> 3, ( 4185476836 ) -> 75, ( 4185476849 ) -> 65, ( 4294443243 ) -> 0, ( 4294443251 ) -> 0, ( 4185476851 ) -> 0, ( 4185476847 ) -> 0, ( 4185476593 ) -> 1, ( 4294443247 ) -> 0, ( 4185476844 ) -> 71, ( 4294443239 ) -> 0, ( 4185476850 ) -> 3, ( 4294443240 ) -> 4, ( 4185476841 ) -> 3, ( 4294443248 ) -> 16, ( 4294443249 ) -> 64, ( 4185476592 ) -> 67, ( 4294443242 ) -> 1, ( 4294443238 ) -> 1, ( 4294443244 ) -> 4, ( 4185476848 ) -> 83, ( 4294443236 ) -> 8, ( 4185476595 ) -> 0, ( 4185476594 ) -> 1, ( 4185476837 ) -> 3, ( 4185476839 ) -> 0, ( 4185476840 ) -> 71, ( 4185476843 ) -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 65 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4185476592 { -109490704 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 4294443248 { -524048 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 256 : BV:32
=input.src.llvm-%arrayidx
1 : 4294443248 { -524048 } : BV:32
=input.src.llvm-%add
1 : 213331 : BV:32
=input.src.llvm-%inc
1 : 65 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 4185476848 { -109490448 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 256 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=input.src.llvm-%1
1 : 147472 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294442992 { -524304 } : BV:32
=stack.size
1 : 4096 : BV:32
=input.src.llvm-%arrayidx1
1 : 4185476848 { -109490448 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294570991 { -396305 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4185476592 { -109490704 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 65859 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4185604591 { -109362705 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4185476592 { -109490704 } : BV:32
=input.dst.mem
1 : (( 4185476845 ) -> 3, ( 4185476846 ) -> 3, ( 4185476836 ) -> 75, ( 4185476849 ) -> 65, ( 4294443243 ) -> 0, ( 4294443251 ) -> 0, ( 4185476851 ) -> 0, ( 4185476847 ) -> 0, ( 4185476593 ) -> 1, ( 4294443247 ) -> 0, ( 4185476844 ) -> 71, ( 4294443239 ) -> 0, ( 4185476850 ) -> 3, ( 4294443240 ) -> 4, ( 4185476841 ) -> 3, ( 4294443248 ) -> 16, ( 4294443249 ) -> 64, ( 4185476592 ) -> 67, ( 4294443242 ) -> 1, ( 4294443238 ) -> 1, ( 4294443244 ) -> 4, ( 4185476848 ) -> 83, ( 4294443236 ) -> 8, ( 4185476595 ) -> 0, ( 4185476594 ) -> 1, ( 4185476837 ) -> 3, ( 4185476839 ) -> 0, ( 4185476840 ) -> 71, ( 4185476843 ) -> 0, [ 4294963200; 4294967295 ] -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294443243 ) -> 0, ( 4294443251 ) -> 0, ( 4185476593 ) -> 1, ( 4294443247 ) -> 0, ( 4294443239 ) -> 0, ( 4294443240 ) -> 4, ( 4294443248 ) -> 16, ( 4294443249 ) -> 64, ( 4185476592 ) -> 67, ( 4294443242 ) -> 1, ( 4294443238 ) -> 1, ( 4294443244 ) -> 4, ( 4294443236 ) -> 8, ( 4185476595 ) -> 0, ( 4185476594 ) -> 1, () -> 2) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 65859 : BV:32
=input.dst.exreg.2.1_95_64
1 : 65859 : BV:32
=input.dst.exreg.2.1_31_0
1 : 65859 : BV:32
=input.dst.exreg.2.1_63_32
1 : 65859 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1214969796
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 76
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 500 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 5212658497514660196416188437299457 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4261412832 { -33554464 } : BV:32
=symbol.2
1 : 290453504 : BV:32
=dst_symbol_addr.2
1 : 290453504 : BV:32
=dst_symbol_addr.3
1 : 4261412832 { -33554464 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 125 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4261413339 ) -> 0, ( 4261413347 ) -> 0, ( 290453504 ) -> 1, ( 4261413346 ) -> 64, ( 4261413344 ) -> 16, ( 4261413332 ) -> 1, ( 290453507 ) -> 0, ( 290453505 ) -> 1, ( 4261413345 ) -> 64, ( 4261413343 ) -> 0, ( 4261413335 ) -> 0, ( 4261413342 ) -> 1, ( 290453506 ) -> 1, () -> 2) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 125 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4261412832 { -33554464 } : BV:32
=stack.size
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4261540831 { -33426465 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 290581503 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 290453504 : BV:32
=input.dst.mem
1 : (( 4261413339 ) -> 0, ( 4261413347 ) -> 0, ( 290453504 ) -> 1, ( 4261413346 ) -> 64, ( 4261413344 ) -> 16, ( 4261413332 ) -> 1, ( 290453507 ) -> 0, ( 290453505 ) -> 1, ( 4261413345 ) -> 64, ( 4261413343 ) -> 0, ( 4261413335 ) -> 0, ( 4261413342 ) -> 1, ( 290453506 ) -> 1, [ 4294963200; 4294967295 ] -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4261413339 ) -> 0, ( 4261413347 ) -> 0, ( 290453504 ) -> 1, ( 4261413346 ) -> 64, ( 4261413344 ) -> 16, ( 4261413332 ) -> 1, ( 290453507 ) -> 0, ( 290453505 ) -> 1, ( 4261413345 ) -> 64, ( 4261413343 ) -> 0, ( 4261413335 ) -> 0, ( 4261413342 ) -> 1, ( 290453506 ) -> 1, () -> 2) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 65793 : BV:32
=input.dst.exreg.2.1_95_64
1 : 65793 : BV:32
=input.dst.exreg.2.1_31_0
1 : 65793 : BV:32
=input.dst.exreg.2.1_63_32
1 : 65793 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1392052732
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 516 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 338818999310195971005535747743875842 : BV:128
=input.dst.exreg.2.1
1 : 5212658497514660196416188437299457 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4261412832 { -33554464 } : BV:32
=symbol.2
1 : 290453504 : BV:32
=dst_symbol_addr.2
1 : 290453504 : BV:32
=dst_symbol_addr.3
1 : 4261412832 { -33554464 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 129 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4261413339 ) -> 0, ( 290454013 ) -> 3, ( 4261413347 ) -> 0, ( 290454007 ) -> 0, ( 290453504 ) -> 1, ( 4261413346 ) -> 64, ( 290454017 ) -> 65, ( 4261413344 ) -> 16, ( 290454005 ) -> 3, ( 290454010 ) -> 3, ( 290454011 ) -> 0, ( 4261413332 ) -> 1, ( 290453507 ) -> 0, ( 290454016 ) -> 17, ( 290453505 ) -> 1, ( 290454018 ) -> 65, ( 4261413345 ) -> 64, ( 290454015 ) -> 0, ( 290454006 ) -> 3, ( 4261413343 ) -> 0, ( 290454019 ) -> 0, ( 290454008 ) -> 3, ( 4261413335 ) -> 0, ( 4261413342 ) -> 1, ( 290453506 ) -> 1, ( 290454009 ) -> 3, ( 290454012 ) -> 3, () -> 2) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 129 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 290453504 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 4261413344 { -33553952 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 512 : BV:32
=input.src.llvm-%arrayidx
1 : 4261413344 { -33553952 } : BV:32
=input.src.llvm-%add
1 : 4276497 : BV:32
=input.src.llvm-%inc
1 : 129 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 290454016 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 512 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=input.src.llvm-%1
1 : 4210704 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4261412832 { -33554464 } : BV:32
=stack.size
1 : 4096 : BV:32
=input.src.llvm-%arrayidx1
1 : 290454016 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4261540831 { -33426465 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 290453504 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 65793 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 290581503 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 290453504 : BV:32
=input.dst.mem
1 : (( 4261413339 ) -> 0, ( 290454013 ) -> 3, ( 4261413347 ) -> 0, ( 290454007 ) -> 0, ( 290453504 ) -> 1, ( 4261413346 ) -> 64, ( 290454017 ) -> 65, ( 4261413344 ) -> 16, ( 290454005 ) -> 3, ( 290454010 ) -> 3, ( 290454011 ) -> 0, ( 4261413332 ) -> 1, ( 290453507 ) -> 0, ( 290454016 ) -> 17, ( 290453505 ) -> 1, ( 290454018 ) -> 65, ( 4261413345 ) -> 64, ( 290454015 ) -> 0, ( 290454006 ) -> 3, ( 4261413343 ) -> 0, ( 290454019 ) -> 0, ( 290454008 ) -> 3, ( 4261413335 ) -> 0, ( 4261413342 ) -> 1, ( 290453506 ) -> 1, ( 290454009 ) -> 3, ( 290454012 ) -> 3, [ 4294963200; 4294967295 ] -> 0, () -> 2) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4261413339 ) -> 0, ( 4261413347 ) -> 0, ( 290453504 ) -> 1, ( 4261413346 ) -> 64, ( 4261413344 ) -> 16, ( 4261413332 ) -> 1, ( 290453507 ) -> 0, ( 290453505 ) -> 1, ( 4261413345 ) -> 64, ( 4261413343 ) -> 0, ( 4261413335 ) -> 0, ( 4261413342 ) -> 1, ( 290453506 ) -> 1, () -> 2) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 65793 : BV:32
=input.dst.exreg.2.1_95_64
1 : 65793 : BV:32
=input.dst.exreg.2.1_31_0
1 : 65793 : BV:32
=input.dst.exreg.2.1_63_32
1 : 65793 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1392052732
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 77
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1012 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 170309608629471251000526182404751126528 { -169972758291467212462848425027017084928 } : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3901029888 { -393937408 } : BV:32
=symbol.2
1 : 2357260288 { -1937707008 } : BV:32
=dst_symbol_addr.2
1 : 2357260288 { -1937707008 } : BV:32
=dst_symbol_addr.3
1 : 3901029888 { -393937408 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 253 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 3901030912 ) -> 0, ( 2357260289 ) -> 112, ( 3901030911 ) -> 129, ( 3901030915 ) -> 128, ( 3901030900 ) -> 64, ( 2357260290 ) -> 32, ( 3901030901 ) -> 16, ( 3901030914 ) -> 16, ( 3901030903 ) -> 129, ( 2357260291 ) -> 128, ( 2357260288 ) -> 0, ( 3901030907 ) -> 129, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 253 : BV:32
=memlabel-mem-esp_begin
1 : 4294959104 { -8192 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3901029888 { -393937408 } : BV:32
=stack.size
1 : 8192 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3901157887 { -393809409 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2357388287 { -1937579009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2357260288 { -1937707008 } : BV:32
=input.dst.mem
1 : (( 3901030912 ) -> 0, ( 2357260289 ) -> 112, ( 3901030911 ) -> 129, ( 3901030915 ) -> 128, ( 3901030900 ) -> 64, ( 2357260290 ) -> 32, ( 3901030901 ) -> 16, ( 3901030914 ) -> 16, ( 3901030903 ) -> 129, ( 2357260291 ) -> 128, ( 2357260288 ) -> 0, ( 3901030907 ) -> 129, [ 4294959104; 4294967295 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3901030912 ) -> 0, ( 2357260289 ) -> 112, ( 3901030911 ) -> 129, ( 3901030915 ) -> 128, ( 3901030900 ) -> 64, ( 2357260290 ) -> 32, ( 3901030901 ) -> 16, ( 3901030914 ) -> 16, ( 3901030903 ) -> 129, ( 2357260291 ) -> 128, ( 2357260288 ) -> 0, ( 3901030907 ) -> 129, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 2149609472 { -2145357824 } : BV:32
=input.dst.exreg.2.1_95_64
1 : 2149609472 { -2145357824 } : BV:32
=input.dst.exreg.2.1_31_0
1 : 2149609472 { -2145357824 } : BV:32
=input.dst.exreg.2.1_63_32
1 : 2149609472 { -2145357824 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1838823352
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1028 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 251522161844797572736776555703926848 : BV:128
=input.dst.exreg.2.1
1 : 170309608629471251000526182404751126528 { -169972758291467212462848425027017084928 } : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3901029888 { -393937408 } : BV:32
=symbol.2
1 : 2357260288 { -1937707008 } : BV:32
=dst_symbol_addr.2
1 : 2357260288 { -1937707008 } : BV:32
=dst_symbol_addr.3
1 : 3901029888 { -393937408 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 257 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 3901030912 ) -> 0, ( 2357260289 ) -> 112, ( 2357261310 ) -> 33, ( 3901030911 ) -> 129, ( 3901030915 ) -> 128, ( 3901030900 ) -> 64, ( 2357261302 ) -> 33, ( 2357261314 ) -> 48, ( 2357260290 ) -> 32, ( 2357261305 ) -> 113, ( 3901030901 ) -> 16, ( 2357261313 ) -> 113, ( 2357261301 ) -> 128, ( 3901030914 ) -> 16, ( 2357261315 ) -> 0, ( 3901030903 ) -> 129, ( 2357260291 ) -> 128, ( 2357261300 ) -> 64, ( 2357261312 ) -> 0, ( 2357261309 ) -> 113, ( 2357260288 ) -> 0, ( 3901030907 ) -> 129, ( 2357261306 ) -> 33, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 257 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 2357260288 { -1937707008 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 3901030912 { -393936384 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 1024 : BV:32
=input.src.llvm-%arrayidx
1 : 3901030912 { -393936384 } : BV:32
=input.src.llvm-%add
1 : 3174656 : BV:32
=input.src.llvm-%inc
1 : 257 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 2357261312 { -1937705984 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 1024 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 4294959104 { -8192 } : BV:32
=input.src.llvm-%1
1 : 2148532480 { -2146434816 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3901029888 { -393937408 } : BV:32
=stack.size
1 : 8192 : BV:32
=input.src.llvm-%arrayidx1
1 : 2357261312 { -1937705984 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3901157887 { -393809409 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 2357260288 { -1937707008 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 2149609472 { -2145357824 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2357388287 { -1937579009 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2357260288 { -1937707008 } : BV:32
=input.dst.mem
1 : (( 3901030912 ) -> 0, ( 2357260289 ) -> 112, ( 2357261310 ) -> 33, ( 3901030911 ) -> 129, ( 3901030915 ) -> 128, ( 3901030900 ) -> 64, ( 2357261302 ) -> 33, ( 2357261314 ) -> 48, ( 2357260290 ) -> 32, ( 2357261305 ) -> 113, ( 3901030901 ) -> 16, ( 2357261313 ) -> 113, ( 2357261301 ) -> 128, ( 3901030914 ) -> 16, ( 2357261315 ) -> 0, ( 3901030903 ) -> 129, ( 2357260291 ) -> 128, ( 2357261300 ) -> 64, ( 2357261312 ) -> 0, ( 2357261309 ) -> 113, ( 2357260288 ) -> 0, ( 3901030907 ) -> 129, ( 2357261306 ) -> 33, [ 4294959104; 4294967295 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3901030912 ) -> 0, ( 2357260289 ) -> 112, ( 3901030911 ) -> 129, ( 3901030915 ) -> 128, ( 3901030900 ) -> 64, ( 2357260290 ) -> 32, ( 3901030901 ) -> 16, ( 3901030914 ) -> 16, ( 3901030903 ) -> 129, ( 2357260291 ) -> 128, ( 2357260288 ) -> 0, ( 3901030907 ) -> 129, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 2149609472 { -2145357824 } : BV:32
=input.dst.exreg.2.1_95_64
1 : 2149609472 { -2145357824 } : BV:32
=input.dst.exreg.2.1_31_0
1 : 2149609472 { -2145357824 } : BV:32
=input.dst.exreg.2.1_63_32
1 : 2149609472 { -2145357824 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1838823352
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 78
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2036 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3825205244 { -469762052 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 171366158009314770546067403819778305 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4293737920 { -1229376 } : BV:32
=symbol.2
1 : 1477314000 : BV:32
=dst_symbol_addr.2
1 : 1477314000 : BV:32
=dst_symbol_addr.3
1 : 4293737920 { -1229376 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 509 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3825205244 { -469762052 } : BV:32
=input.src.llvm-mem
1 : (( 4293739961 ) -> 2, ( 4293739959 ) -> 0, ( 4293739960 ) -> 2, ( 4293739971 ) -> 0, ( 4293739969 ) -> 8, ( 4293739966 ) -> 2, ( 1477314002 ) -> 33, ( 4293739967 ) -> 0, ( 1477314003 ) -> 0, ( 4293739965 ) -> 2, ( 4293739964 ) -> 2, ( 4293739968 ) -> 16, ( 4293739970 ) -> 32, ( 4293739963 ) -> 0, ( 4293739956 ) -> 4, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3825205244 { -469762052 } : BV:32
=memlabel-mem-esp_end
1 : 3825205247 { -469762049 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 509 : BV:32
=memlabel-mem-esp_begin
1 : 3756851200 { -538116096 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4293737920 { -1229376 } : BV:32
=stack.size
1 : 68354048 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4293865919 { -1101377 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1477441999 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1477314000 : BV:32
=input.dst.mem
1 : (( 4293739961 ) -> 2, ( 4293739959 ) -> 0, ( 4293739960 ) -> 2, ( 4293739971 ) -> 0, ( 4293739969 ) -> 8, ( 4293739966 ) -> 2, ( 1477314002 ) -> 33, ( 4293739967 ) -> 0, ( 1477314003 ) -> 0, ( 4293739965 ) -> 2, ( 4293739964 ) -> 2, ( 4293739968 ) -> 16, ( 4293739970 ) -> 32, ( 4293739963 ) -> 0, ( 4293739956 ) -> 4, [ 3756851200; 3825205247 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4293739961 ) -> 2, ( 4293739959 ) -> 0, ( 4293739960 ) -> 2, ( 4293739971 ) -> 0, ( 4293739969 ) -> 8, ( 4293739966 ) -> 2, ( 1477314002 ) -> 33, ( 4293739967 ) -> 0, ( 1477314003 ) -> 0, ( 4293739965 ) -> 2, ( 4293739964 ) -> 2, ( 4293739968 ) -> 16, ( 4293739970 ) -> 32, ( 4293739963 ) -> 0, ( 4293739956 ) -> 4, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 2162945 : BV:32
=input.dst.exreg.2.1_95_64
1 : 2162945 : BV:32
=input.dst.exreg.2.1_31_0
1 : 2162945 : BV:32
=input.dst.exreg.2.1_63_32
1 : 2162945 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
423260674
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2052 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3825205244 { -469762052 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 337683184412286029517803188717224453 : BV:128
=input.dst.exreg.2.1
1 : 171366158009314770546067403819778305 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4293737920 { -1229376 } : BV:32
=symbol.2
1 : 1477314000 : BV:32
=dst_symbol_addr.2
1 : 1477314000 : BV:32
=dst_symbol_addr.3
1 : 4293737920 { -1229376 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 513 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3825205244 { -469762052 } : BV:32
=input.src.llvm-mem
1 : (( 1477316044 ) -> 3, ( 4293739961 ) -> 2, ( 1477316037 ) -> 2, ( 4293739959 ) -> 0, ( 1477316040 ) -> 3, ( 1477316039 ) -> 0, ( 1477316038 ) -> 34, ( 1477316046 ) -> 35, ( 1477316047 ) -> 0, ( 4293739960 ) -> 2, ( 1477316048 ) -> 17, ( 4293739971 ) -> 0, ( 1477316049 ) -> 9, ( 1477316050 ) -> 65, ( 1477316043 ) -> 0, ( 1477316042 ) -> 34, ( 4293739969 ) -> 8, ( 1477316045 ) -> 3, ( 4293739966 ) -> 2, ( 1477314002 ) -> 33, ( 4293739967 ) -> 0, ( 1477316041 ) -> 3, ( 1477314003 ) -> 0, ( 1477316036 ) -> 5, ( 4293739965 ) -> 2, ( 4293739964 ) -> 2, ( 4293739968 ) -> 16, ( 4293739970 ) -> 32, ( 4293739963 ) -> 0, ( 4293739956 ) -> 4, ( 1477316051 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 3825205244 { -469762052 } : BV:32
=memlabel-mem-esp_end
1 : 3825205247 { -469762049 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 513 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 1477314000 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 4293739968 { -1227328 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 2048 : BV:32
=input.src.llvm-%arrayidx
1 : 4293739968 { -1227328 } : BV:32
=input.src.llvm-%add
1 : 4262161 : BV:32
=input.src.llvm-%inc
1 : 513 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 1477316048 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 2048 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 3756851200 { -538116096 } : BV:32
=input.src.llvm-%1
1 : 2099216 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4293737920 { -1229376 } : BV:32
=stack.size
1 : 68354048 : BV:32
=input.src.llvm-%arrayidx1
1 : 1477316048 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4293865919 { -1101377 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 1477314000 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 2162945 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1477441999 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1477314000 : BV:32
=input.dst.mem
1 : (( 1477316044 ) -> 3, ( 4293739961 ) -> 2, ( 1477316037 ) -> 2, ( 4293739959 ) -> 0, ( 1477316040 ) -> 3, ( 1477316039 ) -> 0, ( 1477316038 ) -> 34, ( 1477316046 ) -> 35, ( 1477316047 ) -> 0, ( 4293739960 ) -> 2, ( 1477316048 ) -> 17, ( 4293739971 ) -> 0, ( 1477316049 ) -> 9, ( 1477316050 ) -> 65, ( 1477316043 ) -> 0, ( 1477316042 ) -> 34, ( 4293739969 ) -> 8, ( 1477316045 ) -> 3, ( 4293739966 ) -> 2, ( 1477314002 ) -> 33, ( 4293739967 ) -> 0, ( 1477316041 ) -> 3, ( 1477314003 ) -> 0, ( 1477316036 ) -> 5, ( 4293739965 ) -> 2, ( 4293739964 ) -> 2, ( 4293739968 ) -> 16, ( 4293739970 ) -> 32, ( 4293739963 ) -> 0, ( 4293739956 ) -> 4, ( 1477316051 ) -> 0, [ 3756851200; 3825205247 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4293739961 ) -> 2, ( 4293739959 ) -> 0, ( 4293739960 ) -> 2, ( 4293739971 ) -> 0, ( 4293739969 ) -> 8, ( 4293739966 ) -> 2, ( 1477314002 ) -> 33, ( 4293739967 ) -> 0, ( 1477314003 ) -> 0, ( 4293739965 ) -> 2, ( 4293739964 ) -> 2, ( 4293739968 ) -> 16, ( 4293739970 ) -> 32, ( 4293739963 ) -> 0, ( 4293739956 ) -> 4, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 2162945 : BV:32
=input.dst.exreg.2.1_95_64
1 : 2162945 : BV:32
=input.dst.exreg.2.1_31_0
1 : 2162945 : BV:32
=input.dst.exreg.2.1_63_32
1 : 2162945 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
423260674
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 79
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4084 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 10410184415985572576233111116972355 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1912600592 : BV:32
=symbol.2
1 : 4085253136 { -209714160 } : BV:32
=dst_symbol_addr.2
1 : 4085253136 { -209714160 } : BV:32
=dst_symbol_addr.3
1 : 1912600592 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1021 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1912604689 ) -> 2, ( 1912604680 ) -> 4, ( 1912604681 ) -> 2, ( 1912604683 ) -> 0, ( 4085253136 ) -> 67, ( 1912604676 ) -> 4, ( 4085253138 ) -> 2, ( 1912604684 ) -> 4, ( 1912604677 ) -> 2, ( 1912604685 ) -> 2, ( 1912604691 ) -> 0, ( 4085253139 ) -> 0, ( 1912604679 ) -> 3, ( 1912604688 ) -> 16, ( 1912604687 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1021 : BV:32
=memlabel-mem-esp_begin
1 : 4223664128 { -71303168 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1912600592 : BV:32
=stack.size
1 : 71303168 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1912728591 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4085381135 { -209586161 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4085253136 { -209714160 } : BV:32
=input.dst.mem
1 : (( 1912604689 ) -> 2, ( 1912604680 ) -> 4, ( 1912604681 ) -> 2, ( 1912604683 ) -> 0, ( 4085253136 ) -> 67, ( 1912604676 ) -> 4, ( 4085253138 ) -> 2, ( 1912604684 ) -> 4, ( 1912604677 ) -> 2, ( 1912604685 ) -> 2, ( 1912604691 ) -> 0, ( 4085253139 ) -> 0, ( 1912604679 ) -> 3, ( 1912604688 ) -> 16, ( 1912604687 ) -> 0, [ 4223664128; 4294967295 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1912604689 ) -> 2, ( 1912604680 ) -> 4, ( 1912604681 ) -> 2, ( 1912604683 ) -> 0, ( 4085253136 ) -> 67, ( 1912604676 ) -> 4, ( 4085253138 ) -> 2, ( 1912604684 ) -> 4, ( 1912604677 ) -> 2, ( 1912604685 ) -> 2, ( 1912604691 ) -> 0, ( 4085253139 ) -> 0, ( 1912604679 ) -> 3, ( 1912604688 ) -> 16, ( 1912604687 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 131395 : BV:32
=input.dst.exreg.2.1_95_64
1 : 131395 : BV:32
=input.dst.exreg.2.1_31_0
1 : 131395 : BV:32
=input.dst.exreg.2.1_63_32
1 : 131395 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1740903352
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4100 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 15644313745546376114853353185542983 : BV:128
=input.dst.exreg.2.1
1 : 10410184415985572576233111116972355 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1912600592 : BV:32
=symbol.2
1 : 4085253136 { -209714160 } : BV:32
=dst_symbol_addr.2
1 : 4085253136 { -209714160 } : BV:32
=dst_symbol_addr.3
1 : 1912600592 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 1025 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1912604689 ) -> 2, ( 1912604680 ) -> 4, ( 1912604681 ) -> 2, ( 4085257222 ) -> 3, ( 4085257228 ) -> 71, ( 1912604683 ) -> 0, ( 4085253136 ) -> 67, ( 1912604676 ) -> 4, ( 4085257220 ) -> 71, ( 4085253138 ) -> 2, ( 4085257232 ) -> 83, ( 1912604684 ) -> 4, ( 1912604677 ) -> 2, ( 4085257235 ) -> 0, ( 1912604685 ) -> 2, ( 4085257233 ) -> 3, ( 4085257229 ) -> 3, ( 4085257231 ) -> 0, ( 1912604691 ) -> 0, ( 4085257234 ) -> 3, ( 4085257224 ) -> 71, ( 4085257227 ) -> 0, ( 4085253139 ) -> 0, ( 4085257230 ) -> 3, ( 4085257223 ) -> 3, ( 1912604679 ) -> 3, ( 1912604688 ) -> 16, ( 1912604687 ) -> 0, ( 4085257221 ) -> 3, ( 4085257226 ) -> 3, ( 4085257225 ) -> 3, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1025 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4085253136 { -209714160 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 1912604688 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 4096 : BV:32
=input.src.llvm-%arrayidx
1 : 1912604688 : BV:32
=input.src.llvm-%add
1 : 197459 : BV:32
=input.src.llvm-%inc
1 : 1025 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 4085257232 { -209710064 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 4096 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 4223664128 { -71303168 } : BV:32
=input.src.llvm-%1
1 : 66064 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1912600592 : BV:32
=stack.size
1 : 71303168 : BV:32
=input.src.llvm-%arrayidx1
1 : 4085257232 { -209710064 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1912728591 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4085253136 { -209714160 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 131395 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4085381135 { -209586161 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4085253136 { -209714160 } : BV:32
=input.dst.mem
1 : (( 1912604689 ) -> 2, ( 1912604680 ) -> 4, ( 1912604681 ) -> 2, ( 4085257222 ) -> 3, ( 4085257228 ) -> 71, ( 1912604683 ) -> 0, ( 4085253136 ) -> 67, ( 1912604676 ) -> 4, ( 4085257220 ) -> 71, ( 4085253138 ) -> 2, ( 4085257232 ) -> 83, ( 1912604684 ) -> 4, ( 1912604677 ) -> 2, ( 4085257235 ) -> 0, ( 1912604685 ) -> 2, ( 4085257233 ) -> 3, ( 4085257229 ) -> 3, ( 4085257231 ) -> 0, ( 1912604691 ) -> 0, ( 4085257234 ) -> 3, ( 4085257224 ) -> 71, ( 4085257227 ) -> 0, ( 4085253139 ) -> 0, ( 4085257230 ) -> 3, ( 4085257223 ) -> 3, ( 1912604679 ) -> 3, ( 1912604688 ) -> 16, ( 1912604687 ) -> 0, ( 4085257221 ) -> 3, ( 4085257226 ) -> 3, ( 4085257225 ) -> 3, [ 4223664128; 4294967295 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1912604689 ) -> 2, ( 1912604680 ) -> 4, ( 1912604681 ) -> 2, ( 1912604683 ) -> 0, ( 4085253136 ) -> 67, ( 1912604676 ) -> 4, ( 4085253138 ) -> 2, ( 1912604684 ) -> 4, ( 1912604677 ) -> 2, ( 1912604685 ) -> 2, ( 1912604691 ) -> 0, ( 4085253139 ) -> 0, ( 1912604679 ) -> 3, ( 1912604688 ) -> 16, ( 1912604687 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 131395 : BV:32
=input.dst.exreg.2.1_95_64
1 : 131395 : BV:32
=input.dst.exreg.2.1_31_0
1 : 131395 : BV:32
=input.dst.exreg.2.1_63_32
1 : 131395 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1740903352
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 80
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8180 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 10410184415985572576233111116972355 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4234151888 { -60815408 } : BV:32
=symbol.2
1 : 4236140640 { -58826656 } : BV:32
=dst_symbol_addr.2
1 : 4236140640 { -58826656 } : BV:32
=dst_symbol_addr.3
1 : 4234151888 { -60815408 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2045 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4234160077 ) -> 2, ( 4234160081 ) -> 16, ( 4236140640 ) -> 67, ( 4234160073 ) -> 2, ( 4234160069 ) -> 2, ( 4234160072 ) -> 4, ( 4234160074 ) -> 1, ( 4234160068 ) -> 4, ( 4236140642 ) -> 2, ( 4236140641 ) -> 1, ( 4234160078 ) -> 1, ( 4234160080 ) -> 16, ( 4234160070 ) -> 1, ( 4234160082 ) -> 1, ( 4234160076 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2045 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4234151888 { -60815408 } : BV:32
=stack.size
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4234279887 { -60687409 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4236268639 { -58698657 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4236140640 { -58826656 } : BV:32
=input.dst.mem
1 : (( 4234160077 ) -> 2, ( 4234160081 ) -> 16, ( 4236140640 ) -> 67, ( 4234160073 ) -> 2, ( 4234160069 ) -> 2, ( 4234160072 ) -> 4, ( 4234160074 ) -> 1, ( 4234160068 ) -> 4, ( 4236140642 ) -> 2, ( 4236140641 ) -> 1, ( 4234160078 ) -> 1, ( 4234160080 ) -> 16, ( 4234160070 ) -> 1, ( 4234160082 ) -> 1, ( 4234160076 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4234160077 ) -> 2, ( 4234160081 ) -> 16, ( 4236140640 ) -> 67, ( 4234160073 ) -> 2, ( 4234160069 ) -> 2, ( 4234160072 ) -> 4, ( 4234160074 ) -> 1, ( 4234160068 ) -> 4, ( 4236140642 ) -> 2, ( 4236140641 ) -> 1, ( 4234160078 ) -> 1, ( 4234160080 ) -> 16, ( 4234160070 ) -> 1, ( 4234160082 ) -> 1, ( 4234160076 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 131395 : BV:32
=input.dst.exreg.2.1_95_64
1 : 131395 : BV:32
=input.dst.exreg.2.1_31_0
1 : 131395 : BV:32
=input.dst.exreg.2.1_63_32
1 : 131395 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
550087688
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8196 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 15928267479997499500788614653215559 : BV:128
=input.dst.exreg.2.1
1 : 10410184415985572576233111116972355 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4234151888 { -60815408 } : BV:32
=symbol.2
1 : 4236140640 { -58826656 } : BV:32
=dst_symbol_addr.2
1 : 4236140640 { -58826656 } : BV:32
=dst_symbol_addr.3
1 : 4234151888 { -60815408 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 2049 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4234160077 ) -> 2, ( 4234160081 ) -> 16, ( 4236140640 ) -> 67, ( 4236148832 ) -> 83, ( 4236148829 ) -> 3, ( 4234160073 ) -> 2, ( 4234160069 ) -> 2, ( 4236148828 ) -> 71, ( 4234160072 ) -> 4, ( 4234160074 ) -> 1, ( 4234160068 ) -> 4, ( 4236148825 ) -> 3, ( 4236140642 ) -> 2, ( 4236148820 ) -> 71, ( 4236140641 ) -> 1, ( 4234160078 ) -> 1, ( 4234160080 ) -> 16, ( 4236148834 ) -> 3, ( 4234160070 ) -> 1, ( 4234160082 ) -> 1, ( 4236148833 ) -> 17, ( 4236148826 ) -> 3, ( 4234160076 ) -> 4, ( 4236148824 ) -> 71, ( 4236148821 ) -> 3, ( 4236148822 ) -> 3, ( 4236148830 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2049 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4236140640 { -58826656 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 4234160080 { -60807216 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 8192 : BV:32
=input.src.llvm-%arrayidx
1 : 4234160080 { -60807216 } : BV:32
=input.src.llvm-%add
1 : 201043 : BV:32
=input.src.llvm-%inc
1 : 2049 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 4236148832 { -58818464 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 8192 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=input.src.llvm-%1
1 : 69648 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4234151888 { -60815408 } : BV:32
=stack.size
1 : 4096 : BV:32
=input.src.llvm-%arrayidx1
1 : 4236148832 { -58818464 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4234279887 { -60687409 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4236140640 { -58826656 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 131395 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4236268639 { -58698657 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4236140640 { -58826656 } : BV:32
=input.dst.mem
1 : (( 4234160077 ) -> 2, ( 4234160081 ) -> 16, ( 4236140640 ) -> 67, ( 4236148832 ) -> 83, ( 4236148829 ) -> 3, ( 4234160073 ) -> 2, ( 4234160069 ) -> 2, ( 4236148828 ) -> 71, ( 4234160072 ) -> 4, ( 4234160074 ) -> 1, ( 4234160068 ) -> 4, ( 4236148825 ) -> 3, ( 4236140642 ) -> 2, ( 4236148820 ) -> 71, ( 4236140641 ) -> 1, ( 4234160078 ) -> 1, ( 4234160080 ) -> 16, ( 4236148834 ) -> 3, ( 4234160070 ) -> 1, ( 4234160082 ) -> 1, ( 4236148833 ) -> 17, ( 4236148826 ) -> 3, ( 4234160076 ) -> 4, ( 4236148824 ) -> 71, ( 4236148821 ) -> 3, ( 4236148822 ) -> 3, ( 4236148830 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4234160077 ) -> 2, ( 4234160081 ) -> 16, ( 4236140640 ) -> 67, ( 4234160073 ) -> 2, ( 4234160069 ) -> 2, ( 4234160072 ) -> 4, ( 4234160074 ) -> 1, ( 4234160068 ) -> 4, ( 4236140642 ) -> 2, ( 4236140641 ) -> 1, ( 4234160078 ) -> 1, ( 4234160080 ) -> 16, ( 4234160070 ) -> 1, ( 4234160082 ) -> 1, ( 4234160076 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 131395 : BV:32
=input.dst.exreg.2.1_95_64
1 : 131395 : BV:32
=input.dst.exreg.2.1_31_0
1 : 131395 : BV:32
=input.dst.exreg.2.1_63_32
1 : 131395 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
550087688
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 81
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16372 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2126454780 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2130510976 : BV:32
=symbol.2
1 : 4293919488 { -1047808 } : BV:32
=dst_symbol_addr.2
1 : 4293919488 { -1047808 } : BV:32
=dst_symbol_addr.3
1 : 2130510976 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4093 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2126454780 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 2126454780 : BV:32
=memlabel-mem-esp_end
1 : 2126454783 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4093 : BV:32
=memlabel-mem-esp_begin
1 : 2126426112 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2130510976 : BV:32
=stack.size
1 : 28672 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2130638975 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294047487 { -919809 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293919488 { -1047808 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
456849177
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16388 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2126454780 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2130510976 : BV:32
=symbol.2
1 : 4293919488 { -1047808 } : BV:32
=dst_symbol_addr.2
1 : 4293919488 { -1047808 } : BV:32
=dst_symbol_addr.3
1 : 2130510976 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 4097 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2126454780 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 2126454780 : BV:32
=memlabel-mem-esp_end
1 : 2126454783 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4097 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4293919488 { -1047808 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 2130527360 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 16384 : BV:32
=input.src.llvm-%arrayidx
1 : 2130527360 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4097 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 4293935872 { -1031424 } : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 16384 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2126426112 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2130510976 : BV:32
=stack.size
1 : 28672 : BV:32
=input.src.llvm-%arrayidx1
1 : 4293935872 { -1031424 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2130638975 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4293919488 { -1047808 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294047487 { -919809 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4293919488 { -1047808 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
456849177
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 82
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32756 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 42837716743486489326826198741303312 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294709200 { -258096 } : BV:32
=symbol.2
1 : 1600 : BV:32
=dst_symbol_addr.2
1 : 1600 : BV:32
=dst_symbol_addr.3
1 : 4294709200 { -258096 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8189 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4294741967 ) -> 64, ( 4294741969 ) -> 16, ( 1602 ) -> 8, ( 1603 ) -> 0, ( 4294741968 ) -> 16, ( 4294741963 ) -> 0, ( 4294741964 ) -> 240, ( 4294741959 ) -> 0, ( 4294741965 ) -> 0, ( 1600 ) -> 16, ( 4294741971 ) -> 0, ( 1601 ) -> 64, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8189 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294709200 { -258096 } : BV:32
=stack.size
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294837199 { -130097 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 129599 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1600 : BV:32
=input.dst.mem
1 : (( 4294741967 ) -> 64, ( 4294741969 ) -> 16, ( 1602 ) -> 8, ( 1603 ) -> 0, ( 4294741968 ) -> 16, ( 4294741963 ) -> 0, ( 4294741964 ) -> 240, ( 4294741959 ) -> 0, ( 4294741965 ) -> 0, ( 1600 ) -> 16, ( 4294741971 ) -> 0, ( 1601 ) -> 64, [ 4294963200; 4294967295 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294741967 ) -> 64, ( 4294741969 ) -> 16, ( 1602 ) -> 8, ( 1603 ) -> 0, ( 4294741968 ) -> 16, ( 4294741963 ) -> 0, ( 4294741964 ) -> 240, ( 4294741959 ) -> 0, ( 4294741965 ) -> 0, ( 1600 ) -> 16, ( 4294741971 ) -> 0, ( 1601 ) -> 64, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 540688 : BV:32
=input.dst.exreg.2.1_95_64
1 : 540688 : BV:32
=input.dst.exreg.2.1_31_0
1 : 540688 : BV:32
=input.dst.exreg.2.1_63_32
1 : 540688 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
982455411
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32772 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 48355819614533953516100644430758161 : BV:128
=input.dst.exreg.2.1
1 : 42837716743486489326826198741303312 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4294709200 { -258096 } : BV:32
=symbol.2
1 : 1600 : BV:32
=dst_symbol_addr.2
1 : 1600 : BV:32
=dst_symbol_addr.3
1 : 4294709200 { -258096 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 8193 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 34363 ) -> 0, ( 34368 ) -> 32, ( 34366 ) -> 9, ( 4294741967 ) -> 64, ( 4294741969 ) -> 16, ( 1602 ) -> 8, ( 1603 ) -> 0, ( 34360 ) -> 17, ( 4294741968 ) -> 16, ( 4294741963 ) -> 0, ( 34359 ) -> 0, ( 34371 ) -> 0, ( 34365 ) -> 65, ( 4294741964 ) -> 240, ( 4294741959 ) -> 0, ( 34367 ) -> 64, ( 4294741965 ) -> 0, ( 34370 ) -> 9, ( 34358 ) -> 9, ( 34356 ) -> 17, ( 34364 ) -> 0, ( 34369 ) -> 80, ( 1600 ) -> 16, ( 34362 ) -> 9, ( 34357 ) -> 65, ( 4294741971 ) -> 0, ( 1601 ) -> 64, ( 34361 ) -> 65, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8193 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 1600 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 4294741968 { -225328 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 32768 : BV:32
=input.src.llvm-%arrayidx
1 : 4294741968 { -225328 } : BV:32
=input.src.llvm-%add
1 : 610336 : BV:32
=input.src.llvm-%inc
1 : 8193 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 34368 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 32768 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=input.src.llvm-%1
1 : 69648 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294709200 { -258096 } : BV:32
=stack.size
1 : 4096 : BV:32
=input.src.llvm-%arrayidx1
1 : 34368 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294837199 { -130097 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 1600 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 540688 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 129599 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1600 : BV:32
=input.dst.mem
1 : (( 34363 ) -> 0, ( 34368 ) -> 32, ( 34366 ) -> 9, ( 4294741967 ) -> 64, ( 4294741969 ) -> 16, ( 1602 ) -> 8, ( 1603 ) -> 0, ( 34360 ) -> 17, ( 4294741968 ) -> 16, ( 4294741963 ) -> 0, ( 34359 ) -> 0, ( 34371 ) -> 0, ( 34365 ) -> 65, ( 4294741964 ) -> 240, ( 4294741959 ) -> 0, ( 34367 ) -> 64, ( 4294741965 ) -> 0, ( 34370 ) -> 9, ( 34358 ) -> 9, ( 34356 ) -> 17, ( 34364 ) -> 0, ( 34369 ) -> 80, ( 1600 ) -> 16, ( 34362 ) -> 9, ( 34357 ) -> 65, ( 4294741971 ) -> 0, ( 1601 ) -> 64, ( 34361 ) -> 65, [ 4294963200; 4294967295 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294741967 ) -> 64, ( 4294741969 ) -> 16, ( 1602 ) -> 8, ( 1603 ) -> 0, ( 4294741968 ) -> 16, ( 4294741963 ) -> 0, ( 4294741964 ) -> 240, ( 4294741959 ) -> 0, ( 4294741965 ) -> 0, ( 1600 ) -> 16, ( 4294741971 ) -> 0, ( 1601 ) -> 64, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 540688 : BV:32
=input.dst.exreg.2.1_95_64
1 : 540688 : BV:32
=input.dst.exreg.2.1_31_0
1 : 540688 : BV:32
=input.dst.exreg.2.1_63_32
1 : 540688 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
982455411
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 83
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65524 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 332469892125767474683219134417733640 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4261284880 { -33682416 } : BV:32
=symbol.2
1 : 986368 : BV:32
=dst_symbol_addr.2
1 : 986368 : BV:32
=dst_symbol_addr.3
1 : 4261284880 { -33682416 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16381 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4261350419 ) -> 0, ( 986368 ) -> 8, ( 4261350405 ) -> 248, ( 4261350417 ) -> 64, ( 4261350416 ) -> 16, ( 4261350406 ) -> 0, ( 4261350415 ) -> 0, ( 986370 ) -> 64, ( 4261350418 ) -> 8, ( 986371 ) -> 0, ( 4261350407 ) -> 0, ( 986369 ) -> 8, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16381 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4261284880 { -33682416 } : BV:32
=stack.size
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4261412879 { -33554417 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1114367 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 986368 : BV:32
=input.dst.mem
1 : (( 4261350419 ) -> 0, ( 986368 ) -> 8, ( 4261350405 ) -> 248, ( 4261350417 ) -> 64, ( 4261350416 ) -> 16, ( 4261350406 ) -> 0, ( 4261350415 ) -> 0, ( 986370 ) -> 64, ( 4261350418 ) -> 8, ( 986371 ) -> 0, ( 4261350407 ) -> 0, ( 986369 ) -> 8, [ 4294963200; 4294967295 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4261350419 ) -> 0, ( 986368 ) -> 8, ( 4261350405 ) -> 248, ( 4261350417 ) -> 64, ( 4261350416 ) -> 16, ( 4261350406 ) -> 0, ( 4261350415 ) -> 0, ( 986370 ) -> 64, ( 4261350418 ) -> 8, ( 986371 ) -> 0, ( 4261350407 ) -> 0, ( 986369 ) -> 8, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 4196360 : BV:32
=input.dst.exreg.2.1_95_64
1 : 4196360 : BV:32
=input.dst.exreg.2.1_31_0
1 : 4196360 : BV:32
=input.dst.exreg.2.1_63_32
1 : 4196360 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
793447534
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.2 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.s113.0 : MEMLABEL
14 : bvmul(4, 9) : BV:32
15 : bvadd(7, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 13, 16, 17, 18) : BV:32
20 : mlvar.llvm.s113.1 : MEMLABEL
21 : symbol.3 : BV:32
22 : bvadd(21, 11) : BV:32
23 : select(1, 20, 22, 17, 18) : BV:32
24 : bvadd(19, 23) : BV:32
25 : store(1, 2, 12, 24, 17, 18) : ARRAY[BV:32 -> BV:8]
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.1 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s113.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(4, 8) : BV:32
10 : bvadd(7, 9) : BV:32
11 : bvadd(3, 10) : BV:32
12 : 4 : INT
13 : 0 : BOOL
14 : select(1, 2, 11, 12, 13) : BV:32
15 : mlvar.llvm.s113.1 : MEMLABEL
16 : symbol.3 : BV:32
17 : input.src.llvm-%i.0 : BV:32
18 : bvmul(17, 8) : BV:32
19 : bvadd(7, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : select(1, 15, 20, 12, 13) : BV:32
22 : bvadd(14, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : 16 : INT
12 : islangaligned(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:((((badref*(badref*(badref*badref)))*((  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76*  %0 = load i32, i32* getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), align 16, !dbg !76)*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78))*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !78)))*(((((  %1 = load i32, i32* %arrayidx, align 4, !dbg !78*  %1 = load i32, i32* %arrayidx, align 4, !dbg !78)*  %add = add nsw i32 %0, %1, !dbg !79)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !80)))*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !81*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*  br label %for.inc, !dbg !82)*(((  %inc = add nsw i32 %i.0, 1, !dbg !83*  br label %for.cond, !dbg !84, !llvm.loop !85)*(  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !71*  br label %for.cond, !dbg !84, !llvm.loop !85))*(  br label %for.cond, !dbg !84, !llvm.loop !85*  br label %for.cond, !dbg !84, !llvm.loop !85)))))
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !73)
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !75*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)*  br i1 %cmp, label %for.body, label %for.end, !dbg !75)
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L8%1%1)*(L8%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L8%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.2 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvadd(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvadd(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvadd(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : store(1, 2, 19, 47, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 127988 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 127988 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 127988 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 127988 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvadd(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvadd(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge: L8%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65540 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 375307608860493697553178971187773449 : BV:128
=input.dst.exreg.2.1
1 : 332469892125767474683219134417733640 : BV:128
=input.dst.exreg.6.0
1 : 145 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4261284880 { -33682416 } : BV:32
=symbol.2
1 : 986368 : BV:32
=dst_symbol_addr.2
1 : 986368 : BV:32
=dst_symbol_addr.3
1 : 4261284880 { -33682416 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 16385 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 4261350419 ) -> 0, ( 1051907 ) -> 0, ( 1051906 ) -> 72, ( 986368 ) -> 8, ( 4261350405 ) -> 248, ( 1051904 ) -> 24, ( 1051900 ) -> 9, ( 1051905 ) -> 72, ( 4261350417 ) -> 64, ( 1051892 ) -> 9, ( 4261350416 ) -> 16, ( 4261350406 ) -> 0, ( 4261350415 ) -> 0, ( 1051901 ) -> 9, ( 986370 ) -> 64, ( 1051894 ) -> 65, ( 4261350418 ) -> 8, ( 986371 ) -> 0, ( 1051902 ) -> 65, ( 1051897 ) -> 9, ( 4261350407 ) -> 0, ( 1051903 ) -> 0, ( 1051896 ) -> 9, ( 1051893 ) -> 0, ( 986369 ) -> 8, ( 1051898 ) -> 65, ( 1051895 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16385 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 986368 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.3.total_offset
1 : 4261350416 { -33616880 } : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.2.total_offset
1 : 65536 : BV:32
=input.src.llvm-%arrayidx
1 : 4261350416 { -33616880 } : BV:32
=input.src.llvm-%add
1 : 4737048 : BV:32
=input.src.llvm-%inc
1 : 16385 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.3.total_offset
1 : 1051904 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.2.total_offset
1 : 65536 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 4294963200 { -4096 } : BV:32
=input.src.llvm-%1
1 : 540688 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4261284880 { -33682416 } : BV:32
=stack.size
1 : 4096 : BV:32
=input.src.llvm-%arrayidx1
1 : 1051904 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4261412879 { -33554417 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 986368 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%85d8843941d0873deb59f7b61ead9e.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 4196360 : BV:32
=input.src.llvm-%152d6c23f9399bd6fa1e96545d8cda.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1114367 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 986368 : BV:32
=input.dst.mem
1 : (( 4261350419 ) -> 0, ( 1051907 ) -> 0, ( 1051906 ) -> 72, ( 986368 ) -> 8, ( 4261350405 ) -> 248, ( 1051904 ) -> 24, ( 1051900 ) -> 9, ( 1051905 ) -> 72, ( 4261350417 ) -> 64, ( 1051892 ) -> 9, ( 4261350416 ) -> 16, ( 4261350406 ) -> 0, ( 4261350415 ) -> 0, ( 1051901 ) -> 9, ( 986370 ) -> 64, ( 1051894 ) -> 65, ( 4261350418 ) -> 8, ( 986371 ) -> 0, ( 1051902 ) -> 65, ( 1051897 ) -> 9, ( 4261350407 ) -> 0, ( 1051903 ) -> 0, ( 1051896 ) -> 9, ( 1051893 ) -> 0, ( 986369 ) -> 8, ( 1051898 ) -> 65, ( 1051895 ) -> 0, [ 4294963200; 4294967295 ] -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4261350419 ) -> 0, ( 986368 ) -> 8, ( 4261350405 ) -> 248, ( 4261350417 ) -> 64, ( 4261350416 ) -> 16, ( 4261350406 ) -> 0, ( 4261350415 ) -> 0, ( 986370 ) -> 64, ( 4261350418 ) -> 8, ( 986371 ) -> 0, ( 4261350407 ) -> 0, ( 986369 ) -> 8, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_127_96
1 : 4196360 : BV:32
=input.dst.exreg.2.1_95_64
1 : 4196360 : BV:32
=input.dst.exreg.2.1_31_0
1 : 4196360 : BV:32
=input.dst.exreg.2.1_63_32
1 : 4196360 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
793447534
=counter_example_end
=graph_with_ce done
=graph_with_guessing begin
=Invariant states
=Invariant state at node L0%0%1_L0%0%1:
=pc L0%0%1_L0%0%1 invariant_state
is_top 0
is_stable 1
=pc L0%0%1_L0%0%1 invariant_state done
=Invariant state at node Lfor.body%1%1_L3%1%0:
=pc Lfor.body%1%1_L3%1%0 invariant_state
is_top 0
is_stable 1
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr expr_group_type ARR_EQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr expr 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr pred 0
=Comment
precond-memmask-memlabel-mem-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr_group_type BV_EQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 0
1 : symbol.2 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 1
1 : symbol.3 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 2
1 : retaddr_const : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 3
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 4
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 5
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 3, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
16 : store(1, 2, 7, 15, 8, 9) : ARRAY[BV:32 -> BV:8]
17 : select(16, 2, 3, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 9
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 10
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 3, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
16 : store(1, 2, 7, 15, 8, 9) : ARRAY[BV:32 -> BV:8]
17 : bvadd(3, 5, 6) : BV:32
18 : select(16, 2, 3, 8, 9) : BV:32
19 : bvadd(12, 5, 6) : BV:32
20 : select(1, 11, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(16, 2, 17, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : select(22, 2, 3, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 11
1 : 1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 12
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 13
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 3, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
16 : store(1, 2, 7, 15, 8, 9) : ARRAY[BV:32 -> BV:8]
17 : bvadd(3, 5, 6) : BV:32
18 : select(16, 2, 3, 8, 9) : BV:32
19 : bvadd(12, 5, 6) : BV:32
20 : select(1, 11, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(16, 2, 17, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : 8 : BV:32
24 : bvadd(3, 6, 23) : BV:32
25 : select(22, 2, 3, 8, 9) : BV:32
26 : bvadd(12, 6, 23) : BV:32
27 : select(1, 11, 26, 8, 9) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 24, 28, 8, 9) : ARRAY[BV:32 -> BV:8]
30 : select(29, 2, 3, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 14
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 15
1 : input.src.llvm-%i.0 : BV:32
2 : 2 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 16
1 : input.src.llvm-%i.0 : BV:32
2 : 3 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 17
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 3, 8, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
16 : store(1, 2, 7, 15, 8, 9) : ARRAY[BV:32 -> BV:8]
17 : bvadd(3, 5, 6) : BV:32
18 : select(16, 2, 3, 8, 9) : BV:32
19 : bvadd(12, 5, 6) : BV:32
20 : select(1, 11, 19, 8, 9) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(16, 2, 17, 21, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : 8 : BV:32
24 : bvadd(3, 6, 23) : BV:32
25 : select(22, 2, 3, 8, 9) : BV:32
26 : bvadd(12, 6, 23) : BV:32
27 : select(1, 11, 26, 8, 9) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 24, 28, 8, 9) : ARRAY[BV:32 -> BV:8]
30 : 12 : BV:32
31 : bvadd(3, 6, 30) : BV:32
32 : select(29, 2, 3, 8, 9) : BV:32
33 : bvadd(12, 6, 30) : BV:32
34 : select(1, 11, 33, 8, 9) : BV:32
35 : bvadd(32, 34) : BV:32
36 : store(29, 2, 31, 35, 8, 9) : ARRAY[BV:32 -> BV:8]
37 : select(36, 2, 3, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 18
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 19
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 20
1 : input.dst.exreg.0.6 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 21
1 : input.dst.exreg.0.7 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 22
1 : input.dst.exreg.0.3 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 23
1 : input.dst.exreg.0.5 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 24
1 : input.dst.exreg.0.4 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 25
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 26
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 27
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 28
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 29
1 : input.dst.exreg.2.1 : BV:128
2 : 95 : INT
3 : 64 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 30
1 : input.dst.exreg.2.1 : BV:128
2 : 63 : INT
3 : 32 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 31
1 : input.dst.exreg.2.1 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 32
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 33
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : 127988 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 34
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : 127992 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 35
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : 127996 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 36
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 37
1 : input.dst.esp.L0%1%1 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 0
=Comment
linear2-32-free_var_idx.37
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.esp.L0%1%1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 1
=Comment
linear2-32-free_var_idx.32
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 2
=Comment
linear2-32-free_var_idx.30
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 63 : INT
3 : 32 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 3
=Comment
linear2-32-free_var_idx.29
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 95 : INT
3 : 64 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 4
=Comment
linear2-32-free_var_idx.28
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 5
=Comment
linear4-12-free_var_idx.24
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 3584 { -512 } : BV:12
2 : symbol.3 : BV:32
3 : 11 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:12
6 : bvmul(1, 5) : BV:12
7 : 1020 : BV:12
8 : 3072 { -1024 } : BV:12
9 : input.src.llvm-%i.0 : BV:32
10 : bvextract(9, 3, 4) : BV:12
11 : bvmul(8, 10) : BV:12
12 : symbol.2 : BV:32
13 : bvextract(12, 3, 4) : BV:12
14 : 256 : BV:12
15 : bvmul(13, 14) : BV:12
16 : bvadd(6, 7, 11, 15) : BV:12
=RhsExpr
1 : input.dst.exreg.0.4 : BV:32
2 : 11 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:12
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 6
=Comment
linear2-32-free_var_idx.19
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 7
=Comment
linear2-4-free_var_idx.0
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : symbol.3 : BV:32
7 : bvextract(6, 2, 3) : BV:4
8 : 9 { -7 } : BV:4
9 : bvmul(7, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 8
=Comment
linear1-32-free_var_idx.3
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%cmp : BOOL
4 : bool_to_bv(3) : BV:1
5 : bvconcat(2, 4) : BV:32
6 : bvneg(5) : BV:32
7 : bvadd(1, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 9
=Comment
linear1-4-free_var_idx.1
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 10
=Comment
linear2-32-free_var_idx.8
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(3, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 9) : BV:32
14 : select(1, 11, 13, 4, 5) : BV:32
15 : bvadd(6, 14) : BV:32
16 : store(1, 2, 10, 15, 4, 5) : ARRAY[BV:32 -> BV:8]
17 : select(16, 2, 3, 4, 5) : BV:32
18 : bvneg(17) : BV:32
19 : bvadd(6, 18) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 11
=Comment
linear2-32-free_var_idx.31
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 12
=Comment
linear1-2-free_var_idx.4
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:2
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:2
6 : bvneg(5) : BV:2
7 : bvadd(1, 6) : BV:2
=RhsExpr
1 : 0 : BV:2
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 13
=Comment
linear2-32-free_var_idx.5
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : input.src.llvm-%i.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 14
=Comment
linear2-32-free_var_idx.16
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 3 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 15
=Comment
linear2-32-free_var_idx.18
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%cmp : BOOL
3 : bool_to_bv(2) : BV:1
4 : bvconcat(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 32000 : BV:32
9 : bvslt(7, 8) : BOOL
10 : bool_to_bv(9) : BV:1
11 : bvconcat(1, 10) : BV:32
12 : bvneg(11) : BV:32
13 : bvadd(4, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 16
=Comment
linear2-32-free_var_idx.11
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : 1 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 17
=Comment
linear2-32-free_var_idx.13
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(3, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 9) : BV:32
14 : select(1, 11, 13, 4, 5) : BV:32
15 : bvadd(6, 14) : BV:32
16 : store(1, 2, 10, 15, 4, 5) : ARRAY[BV:32 -> BV:8]
17 : bvadd(3, 8, 9) : BV:32
18 : select(16, 2, 3, 4, 5) : BV:32
19 : bvadd(12, 8, 9) : BV:32
20 : select(1, 11, 19, 4, 5) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(16, 2, 17, 21, 4, 5) : ARRAY[BV:32 -> BV:8]
23 : 8 : BV:32
24 : bvadd(3, 9, 23) : BV:32
25 : select(22, 2, 3, 4, 5) : BV:32
26 : bvadd(12, 9, 23) : BV:32
27 : select(1, 11, 26, 4, 5) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 24, 28, 4, 5) : ARRAY[BV:32 -> BV:8]
30 : select(29, 2, 3, 4, 5) : BV:32
31 : bvneg(30) : BV:32
32 : bvadd(6, 31) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 18
=Comment
linear2-32-free_var_idx.36
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 19
=Comment
linear2-32-free_var_idx.10
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(3, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 9) : BV:32
14 : select(1, 11, 13, 4, 5) : BV:32
15 : bvadd(6, 14) : BV:32
16 : store(1, 2, 10, 15, 4, 5) : ARRAY[BV:32 -> BV:8]
17 : bvadd(3, 8, 9) : BV:32
18 : select(16, 2, 3, 4, 5) : BV:32
19 : bvadd(12, 8, 9) : BV:32
20 : select(1, 11, 19, 4, 5) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(16, 2, 17, 21, 4, 5) : ARRAY[BV:32 -> BV:8]
23 : select(22, 2, 3, 4, 5) : BV:32
24 : bvneg(23) : BV:32
25 : bvadd(6, 24) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 20
=Comment
linear2-32-free_var_idx.15
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 2 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 21
=Comment
linear2-32-free_var_idx.17
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(3, 9) : BV:32
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : symbol.3 : BV:32
13 : bvadd(12, 9) : BV:32
14 : select(1, 11, 13, 4, 5) : BV:32
15 : bvadd(6, 14) : BV:32
16 : store(1, 2, 10, 15, 4, 5) : ARRAY[BV:32 -> BV:8]
17 : bvadd(3, 8, 9) : BV:32
18 : select(16, 2, 3, 4, 5) : BV:32
19 : bvadd(12, 8, 9) : BV:32
20 : select(1, 11, 19, 4, 5) : BV:32
21 : bvadd(18, 20) : BV:32
22 : store(16, 2, 17, 21, 4, 5) : ARRAY[BV:32 -> BV:8]
23 : 8 : BV:32
24 : bvadd(3, 9, 23) : BV:32
25 : select(22, 2, 3, 4, 5) : BV:32
26 : bvadd(12, 9, 23) : BV:32
27 : select(1, 11, 26, 4, 5) : BV:32
28 : bvadd(25, 27) : BV:32
29 : store(22, 2, 24, 28, 4, 5) : ARRAY[BV:32 -> BV:8]
30 : 12 : BV:32
31 : bvadd(3, 9, 30) : BV:32
32 : select(29, 2, 3, 4, 5) : BV:32
33 : bvadd(12, 9, 30) : BV:32
34 : select(1, 11, 33, 4, 5) : BV:32
35 : bvadd(32, 34) : BV:32
36 : store(29, 2, 31, 35, 4, 5) : ARRAY[BV:32 -> BV:8]
37 : select(36, 2, 3, 4, 5) : BV:32
38 : bvneg(37) : BV:32
39 : bvadd(6, 38) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose expr 0
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 1
=Comment
lb-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvuge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 2
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 3
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose expr 0
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose pred 1
=Comment
lb-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose pred 2
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose pred 3
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr_group_type HOUDINI
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 0
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 1
1 : dst_symbol_addr.2 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 2
1 : dst_symbol_addr.2 : BV:32
2 : 127996 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 3
1 : dst_symbol_addr.2 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 4
1 : dst_symbol_addr.2 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 5
1 : dst_symbol_addr.3 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 6
1 : dst_symbol_addr.3 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 7
1 : dst_symbol_addr.3 : BV:32
2 : 127996 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 8
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 9
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 10
1 : symbol.3 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 11
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 12
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 13
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 14
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 15
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 0
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 1
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 2
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 3
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 4
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 5
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 6
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.3 : BV:32
2 : 127996 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 7
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.3 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 8
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 9
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 127992 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 10
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 11
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 127996 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 12
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.3 : BV:32
2 : 127988 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 13
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 14
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 15
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state done
=Invariant state at node E0%0%1_E0%0%1:
=pc E0%0%1_E0%0%1 invariant_state
is_top 0
is_stable 1
=pc E0%0%1_E0%0%1 invariant_state done
=graph_with_guessing done
=corr_graph_done
