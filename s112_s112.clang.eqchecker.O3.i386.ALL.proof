=FunctionName: s112
=result: 1
=corr_graph s112
=src_tfg
=TFG_LLVM llvm.s112:
=TFG:
=Nodes: L0%0%1 Lfor.cond%1%0 Lfor.cond%2%1 Lfor.body%1%1 Lfor.end%1%1 E0%0%1
=Edges:
Lfor.end%1%1 => E0%0%1
Lfor.cond%2%1 => Lfor.body%1%1
Lfor.cond%2%1 => Lfor.end%1%1
L0%0%1 => Lfor.cond%1%0
Lfor.cond%1%0 => Lfor.cond%2%1
Lfor.body%1%1 => Lfor.cond%1%0
=graph done
=Node outputs: E0%0%1
=Output: symbol.2.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.1.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : 0 : BV:32
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.cond%1%0
=Lfor.cond%1%0 assume predicate_set done
=Lfor.cond%1%0 assert predicate_set done
=Node assumes and asserts: Lfor.cond%2%1
=Lfor.cond%2%1 assume predicate_set done
=Lfor.cond%2%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1
=Lfor.body%1%1 assume predicate_set done
=Lfor.body%1%1 assert predicate_set done
=Node assumes and asserts: Lfor.end%1%1
=Lfor.end%1%1 assume predicate_set done
=Lfor.end%1%1 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.llvm.s112.0 : memlabel-mem-symbol.1.0
=memlabel_map.1
mlvar.llvm.s112.1 : memlabel-mem-symbol.2.0
=memlabel_map.2
mlvar.llvm.s112.2 : memlabel-mem-symbol.1.0
=Edge: Lfor.end%1%1 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  ret i32 0, !dbg !32

=Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: L0%0%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))

=Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)

=Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lentry%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%1=>Lentry%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100003=>Lentry%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100004=>Lentry%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100005=>Lentry%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%1=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100003
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100005
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.body%1%1
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.end%1%1
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100003=>Lfor.cond%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100004=>Lfor.body%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100005=>Lfor.cond%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100006=>Lfor.end%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.body%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100003=>Lfor.body%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100004=>Lfor.body%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100005=>Lfor.body%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%1=>Lfor.body%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100003=>Lfor.body%3%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%1=>Lfor.body%3%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100003=>Lfor.body%3%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100004=>Lfor.body%3%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100005=>Lfor.body%4%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%1=>Lfor.body%4%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%100003=>Lfor.body%5%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%1=>Lfor.body%6%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%1=>Lfor.body%7%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%1=>Lfor.body%7%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100003=>Lfor.body%7%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100004=>Lfor.body%7%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100005=>Lfor.body%8%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%8%1=>Lfor.body%9%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%1=>Lfor.body%9%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%100003=>Lfor.body%9%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%100004=>Lfor.inc%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%1%1=>Lfor.inc%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%1=>Lfor.inc%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100003=>Lfor.inc%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100004=>Lfor.inc%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100005=>Lfor.inc%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lentry%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lfor.cond%1%0
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%1=>Lentry%1%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100003=>Lentry%1%100004
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100004=>Lentry%1%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100005=>Lentry%1%100006
=src.llvm-%i.0
1 : 31998 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%1=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100003=>Lfor.cond%2%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100004=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100005=>Lfor.cond%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100006=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.cond%1%0
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : bvadd(3, 6) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvadd(11, 15) : BV:32
17 : store(1, 2, 7, 16, 9, 10) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.body%1%100003
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100003=>Lfor.body%1%100004
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100004=>Lfor.body%1%100005
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100005=>Lfor.body%2%1
=src.llvm-%arrayidx
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%1=>Lfor.body%2%100003
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100003=>Lfor.body%3%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%1=>Lfor.body%3%100003
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100003=>Lfor.body%3%100004
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100004=>Lfor.body%3%100005
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100005=>Lfor.body%4%1
=src.llvm-%arrayidx1
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%1=>Lfor.body%4%100003
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%100003=>Lfor.body%5%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%1=>Lfor.body%6%1
=src.llvm-%add
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%1=>Lfor.body%7%1
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%1=>Lfor.body%7%100003
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100003=>Lfor.body%7%100004
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%add2 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 4 : BV:32
2 : input.src.llvm-%add2 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100004=>Lfor.body%7%100005
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100005=>Lfor.body%8%1
=src.llvm-%arrayidx3
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%8%1=>Lfor.body%9%1
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%1=>Lfor.body%9%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%100003=>Lfor.body%9%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%100004=>Lfor.inc%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%1%1=>Lfor.inc%2%1
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%1=>Lfor.inc%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100003=>Lfor.inc%2%100004
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%dec : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100004=>Lfor.inc%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100005=>Lfor.inc%2%100006
=src.llvm-%i.0
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 0
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 2
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 3
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : bvadd(2, 4) : BV:32
7 : isgepoffset(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 4
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 5
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 6
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 7
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 8
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 9
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 10
1 : 0 : BV:32
2 : 4 : BV:64
3 : input.src.llvm-%i.0 : BV:32
4 : 1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 32 : INT
7 : bvsign_ext(5, 6) : BV:64
8 : bvmul(2, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 6) : BV:32
11 : eq(1, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 0
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 0
1 : input.src.llvm-%arrayidx : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 assume# 0
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100004=>Lfor.body%3%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100004=>Lfor.body%3%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100005=>Lfor.body%4%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100005=>Lfor.body%4%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 assume# 0
1 : input.src.llvm-%arrayidx1 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%5%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%5%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%6%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%6%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 assume# 0
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%add2 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%add2 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.body%7%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.body%7%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100005=>Lfor.body%8%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100005=>Lfor.body%8%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 assume# 0
1 : input.src.llvm-%arrayidx3 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%9%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%9%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100003=>Lfor.body%9%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100003=>Lfor.body%9%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1027
1 : 31998 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1028
1 : 31998 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 for loc_id 1028
1 : 31998 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 for loc_id 1027
1 : 31998 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 for loc_id 1014
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 for loc_id 1014
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1005
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1006
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1008
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1009
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvadd(10, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1010
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1011
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1012
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1013
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1015
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1016
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1017
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1019
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1020
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1022
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1023
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1024
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1025
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1027
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1028
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1034
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : bvadd(3, 6) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvadd(11, 15) : BV:32
17 : store(1, 2, 7, 16, 9, 10) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1020
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1023
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1024
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 for loc_id 1022
1 : symbol.1 : BV:32
2 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 for loc_id 1011
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 for loc_id 1005
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 for loc_id 1008
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005 for loc_id 1006
1 : symbol.2 : BV:32
2 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1 for loc_id 1012
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%5%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%5%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%6%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%6%1 for loc_id 1009
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%6%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 for loc_id 1010
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 for loc_id 1015
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 for loc_id 1016
1 : 4 : BV:32
2 : input.src.llvm-%add2 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 for loc_id 1019
1 : 4 : BV:32
2 : input.src.llvm-%add2 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005 for loc_id 1017
1 : symbol.1 : BV:32
2 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%7%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1 for loc_id 1013
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100005=>Lfor.body%8%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 for loc_id 1034
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx3 : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%9%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%9%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100003=>Lfor.body%9%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100003=>Lfor.body%9%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1026
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1029
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 for loc_id 1025
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 for loc_id 1028
1 : input.src.llvm-%dec : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 for loc_id 1027
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in llvm.s112
=Loc 1001 in llvm.s112.
LLVMVAR
llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Loc 1002 in llvm.s112.
LLVMVAR
src.llvm-%0
1 : input.src.llvm-%0 : BV:32
=Loc 1003 in llvm.s112.
LLVMVAR
src.llvm-%1
1 : input.src.llvm-%1 : BV:32
=Loc 1004 in llvm.s112.
LLVMVAR
src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset : BV:32
=Loc 1005 in llvm.s112.
LLVMVAR
src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset : BV:32
=Loc 1006 in llvm.s112.
LLVMVAR
src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset : BV:32
=Loc 1007 in llvm.s112.
LLVMVAR
src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset : BV:32
=Loc 1008 in llvm.s112.
LLVMVAR
src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset : BV:32
=Loc 1009 in llvm.s112.
LLVMVAR
src.llvm-%add
1 : input.src.llvm-%add : BV:32
=Loc 1010 in llvm.s112.
LLVMVAR
src.llvm-%add2
1 : input.src.llvm-%add2 : BV:32
=Loc 1011 in llvm.s112.
LLVMVAR
src.llvm-%arrayidx
1 : input.src.llvm-%arrayidx : BV:32
=Loc 1012 in llvm.s112.
LLVMVAR
src.llvm-%arrayidx1
1 : input.src.llvm-%arrayidx1 : BV:32
=Loc 1013 in llvm.s112.
LLVMVAR
src.llvm-%arrayidx3
1 : input.src.llvm-%arrayidx3 : BV:32
=Loc 1014 in llvm.s112.
LLVMVAR
src.llvm-%cmp
1 : input.src.llvm-%cmp : BOOL
=Loc 1015 in llvm.s112.
LLVMVAR
src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset : BV:32
=Loc 1016 in llvm.s112.
LLVMVAR
src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset : BV:32
=Loc 1017 in llvm.s112.
LLVMVAR
src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset : BV:32
=Loc 1018 in llvm.s112.
LLVMVAR
src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset : BV:32
=Loc 1019 in llvm.s112.
LLVMVAR
src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset : BV:32
=Loc 1020 in llvm.s112.
LLVMVAR
src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset : BV:32
=Loc 1021 in llvm.s112.
LLVMVAR
src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset : BV:32
=Loc 1022 in llvm.s112.
LLVMVAR
src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset : BV:32
=Loc 1023 in llvm.s112.
LLVMVAR
src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset : BV:32
=Loc 1024 in llvm.s112.
LLVMVAR
src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset : BV:32
=Loc 1025 in llvm.s112.
LLVMVAR
src.llvm-%dec
1 : input.src.llvm-%dec : BV:32
=Loc 1026 in llvm.s112.
LLVMVAR
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 1027 in llvm.s112.
LLVMVAR
src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
=Loc 1028 in llvm.s112.
LLVMVAR
src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=Loc 1029 in llvm.s112.
LLVMVAR
src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Loc 1030 in llvm.s112.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1031 in llvm.s112.
REGMEM
uset_visit_expr
1 : input.uset_visit_expr : BOOL
=Loc 1032 in llvm.s112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1033 in llvm.s112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1034 in llvm.s112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1035 in llvm.s112.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.2.0

=Alias analysis results in llvm.s112
=Alias analysis result in llvm.s112 at L0%0%1
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at L0%0%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%1%0 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.cond%2%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.body%1%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1029 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at Lfor.end%1%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s112 at E0%0%1
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1001 (input.llvm-%ret-reg)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1004 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1005 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1006 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1007 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1008 (input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1010 (input.src.llvm-%add2)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1011 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1012 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1013 (input.src.llvm-%arrayidx3)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1014 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1015 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1016 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1017 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1018 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1019 (input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1020 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1021 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1022 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1023 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1024 (input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1025 (input.src.llvm-%dec)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1026 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1027 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1028 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1029 (input.src.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1030 (input.econd)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1031 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1034 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s112 at E0%0%1 for loc 1035 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr

=Liveness in llvm.s112
=live locs at L0%0%1
1032, 1034, 1035
=live locs at Lfor.cond%1%0
1027, 1032, 1034, 1035
=live locs at Lfor.cond%2%1
1014, 1027, 1032, 1034, 1035
=live locs at Lfor.body%1%1
1027, 1032, 1034, 1035
=live locs at Lfor.end%1%1
1032, 1034, 1035
=live locs at E0%0%1
1032, 1034, 1035

=Available expressions in llvm.s112
=available expressions at L0%0%1 in llvm.s112
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%1%0 in llvm.s112
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%2%1 in llvm.s112
=avail_exprs begin
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17401 : bvsge(17400, 17389) : BOOL
=avail_exprs end
=available expressions at Lfor.body%1%1 in llvm.s112
=avail_exprs begin
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17401 : bvsge(17400, 17389) : BOOL
=avail_exprs end
=available expressions at Lfor.end%1%1 in llvm.s112
=avail_exprs begin
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17401 : bvsge(17400, 17389) : BOOL
=avail_exprs end
=available expressions at E0%0%1 in llvm.s112
=avail_exprs begin
=loc 1001
=from_expr
17518 : input.llvm-%ret-reg : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1014
=from_expr
17402 : input.src.llvm-%cmp : BOOL
=to_expr
17400 : input.src.llvm-%i.0 : BV:32
17389 : 0 : BV:32
17401 : bvsge(17400, 17389) : BOOL
=loc 1029
=from_expr
17525 : input.src.llvm-indir_tgt : BV:32
=to_expr
17387 : retaddr_const : BV:32
=avail_exprs end

=sprel_maps in llvm.s112
=sprel_map at L0%0%1 in llvm.s112
=sprel_map at Lfor.cond%1%0 in llvm.s112
=sprel_map at Lfor.cond%2%1 in llvm.s112
=sprel_map at Lfor.body%1%1 in llvm.s112
=sprel_map at Lfor.end%1%1 in llvm.s112
=sprel_map at E0%0%1 in llvm.s112
=loc 1001
17389 : 0 : BV:32
=loc 1029
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=PC_to_linename:
=pc
Lentry%1%1
=linename
(line 9 at column 8)
=pc
Lfor.cond%1%1
=linename
(line 9 at column 27)
=pc
Lfor.cond%2%1
=linename
(line 9 at column 3)
=pc
Lfor.body%1%1
=linename
(line 10 at column 13)
=pc
Lfor.body%2%1
=linename
(line 10 at column 13)
=pc
Lfor.body%3%1
=linename
(line 10 at column 20)
=pc
Lfor.body%4%1
=linename
(line 10 at column 20)
=pc
Lfor.body%5%1
=linename
(line 10 at column 18)
=pc
Lfor.body%6%1
=linename
(line 10 at column 7)
=pc
Lfor.body%7%1
=linename
(line 10 at column 4)
=pc
Lfor.body%8%1
=linename
line 10
=pc
Lfor.body%9%1
=linename
line 11
=pc
Lfor.end%1%1
=linename
line 12
=pc
Lfor.inc%1%1
=linename
(line 9 at column 34)
=pc
Lfor.inc%2%1
=linename
line 9
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%1
=column_name
 at column 8
=pc
Lfor.cond%1%1
=column_name
 at column 27
=pc
Lfor.cond%2%1
=column_name
 at column 3
=pc
Lfor.body%1%1
=column_name
 at column 13
=pc
Lfor.body%2%1
=column_name
 at column 13
=pc
Lfor.body%3%1
=column_name
 at column 20
=pc
Lfor.body%4%1
=column_name
 at column 20
=pc
Lfor.body%5%1
=column_name
 at column 18
=pc
Lfor.body%6%1
=column_name
 at column 7
=pc
Lfor.body%7%1
=column_name
 at column 4
=pc
Lfor.body%8%1
=column_name
 at column 11
=pc
Lfor.body%9%1
=column_name
 at column 3
=pc
Lfor.end%1%1
=column_name
 at column 2
=pc
Lfor.inc%1%1
=column_name
 at column 34
=pc
Lfor.inc%2%1
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%1
=line_and_column
line 9
=pc
Lfor.cond%1%1
=line_and_column
line 9
=pc
Lfor.cond%2%1
=line_and_column
line 9
=pc
Lfor.body%1%1
=line_and_column
line 10
=pc
Lfor.body%2%1
=line_and_column
line 10
=pc
Lfor.body%3%1
=line_and_column
line 10
=pc
Lfor.body%4%1
=line_and_column
line 10
=pc
Lfor.body%5%1
=line_and_column
line 10
=pc
Lfor.body%6%1
=line_and_column
line 10
=pc
Lfor.body%7%1
=line_and_column
line 10
=pc
Lfor.body%8%1
=line_and_column
line 10
=pc
Lfor.body%9%1
=line_and_column
line 11
=pc
Lfor.end%1%1
=line_and_column
line 12
=pc
Lfor.inc%1%1
=line_and_column
line 9
=pc
Lfor.inc%2%1
=line_and_column
line 9
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.llvm-%arrayidx1 : (@b + bvmul(i, 4))
input.src.llvm-%i.0.phi.tmpvar : 31998
input.src.llvm-%cmp : (i&gt;=<sub>s</sub>0)
input.src.llvm-%i.0 : i
input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset : 0
input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset : (@a + bvmul(i, 4))
input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%arrayidx : (@a + bvmul(i, 4))
input.src.llvm-%add2 : (i + 1)
input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset : 0
input.src.llvm-%dec : i
input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset : (@b + bvmul(i, 4))
input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset : 0
input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset : 0
input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset : bvmul(4, (i + 1))
input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset : 0
input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-indir_tgt : retaddr_const
input.src.llvm-%arrayidx3 : (@a + bvmul(4, (i + 1)))
input.llvm-%ret-reg : 0
input.src.llvm-%add : (input.src.llvm-%0 + input.src.llvm-%1)
input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset : (@a + bvmul(4, (i + 1)))
input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset : bvmul(4, (i + 1))
input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset : 0
=InputLLVMToSourceVarnames done
=TFG_LLVM_done
=dst_tfg
=TFG:
=Nodes: L0%0%1 L1%1%0 L11%1%0 L5%1%1 L6%1%0 E0%0%1
=Edges:
L5%1%1 => L11%1%0
L5%1%1 => L6%1%0
L0%0%1 => L1%1%0
L11%1%0 => E0%0%1
L6%1%0 => L1%1%0
L1%1%0 => L5%1%1
=graph done
=Node outputs: E0%0%1
=Output: symbol.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Output: heap
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.1.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0 : BV:32
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: L1%1%0
=L1%1%0 assume predicate_set done
=L1%1%0 assert predicate_set done
=Node assumes and asserts: L11%1%0
=L11%1%0 assume predicate_set done
=L11%1%0 assert predicate_set done
=Node assumes and asserts: L5%1%1
=L5%1%1 assume predicate_set done
=L5%1%1 assert predicate_set done
=Node assumes and asserts: L6%1%0
=L6%1%0 assume predicate_set done
=L6%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.5
mlvar.dst.5 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.6
mlvar.dst.6 : memlabel-mem-esp
=memlabel_map.7
mlvar.dst.7 : memlabel-mem-esp
=Edge: L5%1%1 => L11%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L5%1%1 => L6%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L0%0%1 => L1%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)

=Edge: L11%1%0 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.6 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)

=Edge: L6%1%0 => L1%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))

=Edge: L1%1%0 => L5%1%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L0%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%0=>L1%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%0=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%1=>L2%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%1=>L3%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%1=>L4%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%1=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%0=>L11%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%0=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%1=>L12%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L11%1%0
1 : 1 : BV:1
2 : input.dst.exreg.7.0 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L6%1%0
1 : 1 : BV:1
2 : input.dst.exreg.7.0 : BV:1
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%0=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%0=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>L9%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%1=>L10%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L12%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L0%1%1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L1%1%0
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%1=>L1%1%0
=dst.exreg.0.0
1 : 127996 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%0=>L1%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%0=>L5%1%1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : bvadd(3, 4, 7) : BV:32
13 : select(1, 2, 12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : store(1, 2, 5, 14, 9, 10) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvadd(9, 12) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967292 { -4 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 4 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 4 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.14.0
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967292 { -4 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%1=>L2%1%1
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%1=>L3%1%1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.1 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvconcat(2, 13) : BV:33
15 : bvadd(4, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(1, 17) : BOOL
19 : not(18) : BOOL
20 : ite(19, 1, 2) : BV:1
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : 4294967292 { -4 } : BV:32
7 : bvadd(4, 5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(2, 3, 7, 8, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.1 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : input.dst.exreg.0.0 : BV:32
13 : 4294967292 { -4 } : BV:32
14 : bvadd(11, 12, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(9, 10, 14, 15, 16) : BV:32
18 : bvextract(17, 2, 2) : BV:1
19 : eq(5, 18) : BOOL
20 : iff(8, 19) : BOOL
21 : bvadd(6, 17) : BV:32
22 : bvextract(21, 2, 2) : BV:1
23 : eq(5, 22) : BOOL
24 : xor(8, 23) : BOOL
25 : and(20, 24) : BOOL
26 : 0 : BV:1
27 : ite(25, 5, 26) : BV:1
28 : 10 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : eq(5, 29) : BOOL
31 : ite(30, 5, 26) : BV:1
32 : 9 : INT
33 : 8 : INT
34 : bvextract(1, 32, 33) : BV:2
35 : ite(23, 5, 26) : BV:1
36 : 4294967295 { -1 } : BV:32
37 : bvmul(36, 17) : BV:32
38 : eq(6, 37) : BOOL
39 : ite(38, 5, 26) : BV:1
40 : 5 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvextract(21, 15, 15) : BV:1
43 : eq(5, 42) : BOOL
44 : bvextract(6, 15, 15) : BV:1
45 : eq(5, 44) : BOOL
46 : xor(43, 45) : BOOL
47 : ite(46, 5, 26) : BV:1
48 : 3 : INT
49 : bvextract(1, 48, 48) : BV:1
50 : 1 : INT
51 : bvextract(1, 50, 50) : BV:1
52 : bvconcat(26, 6) : BV:33
53 : bvconcat(26, 17) : BV:33
54 : bvadd(52, 53) : BV:33
55 : 32 : INT
56 : bvextract(54, 55, 55) : BV:1
57 : eq(5, 56) : BOOL
58 : ite(57, 5, 26) : BV:1
59 : bvconcat(4, 27, 31, 34, 35, 39, 41, 47, 49, 26, 51, 58) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : not(13) : BOOL
15 : 1 : BV:1
16 : 0 : BV:1
17 : ite(14, 15, 16) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.1 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvconcat(2, 13) : BV:33
15 : bvadd(4, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(1, 17) : BOOL
19 : ite(18, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 1, 25) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : bvconcat(15, 1) : BV:33
17 : bvconcat(15, 11) : BV:33
18 : bvadd(16, 17) : BV:33
19 : 32 : INT
20 : bvextract(18, 19, 19) : BV:1
21 : eq(14, 20) : BOOL
22 : not(21) : BOOL
23 : andnot1(13, 22) : BOOL
24 : ite(23, 14, 15) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 11) : BV:32
26 : eq(2, 25) : BOOL
27 : andnot2(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : bvconcat(15, 1) : BV:33
17 : bvconcat(15, 11) : BV:33
18 : bvadd(16, 17) : BV:33
19 : 32 : INT
20 : bvextract(18, 19, 19) : BV:1
21 : eq(14, 20) : BOOL
22 : or(13, 21) : BOOL
23 : ite(22, 14, 15) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : not(23) : BOOL
25 : 4294967295 { -1 } : BV:32
26 : bvmul(25, 11) : BV:32
27 : eq(2, 26) : BOOL
28 : or(24, 27) : BOOL
29 : 0 : BV:1
30 : ite(28, 1, 29) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%1=>L4%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.1 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%1=>L5%1%1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967292 { -4 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 4 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 4 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.14.0
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967292 { -4 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%0=>L11%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%0=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : retaddr_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%1=>L12%1%1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L11%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L6%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%0=>L1%1%0
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : dst_symbol_addr.2 : BV:32
8 : 4294967288 { -8 } : BV:32
9 : bvadd(7, 4, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(1, 2, 9, 10, 11) : BV:32
13 : bvadd(3, 4, 8) : BV:32
14 : select(1, 2, 13, 10, 11) : BV:32
15 : bvadd(12, 14) : BV:32
16 : store(1, 2, 6, 15, 10, 11) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967288 { -8 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvadd(9, 12) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967288 { -8 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 8 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvconcat(15, 6) : BV:33
42 : 4294967288 : BV:33
43 : bvadd(41, 42) : BV:33
44 : 32 : INT
45 : bvextract(43, 44, 44) : BV:1
46 : eq(5, 45) : BOOL
47 : ite(46, 5, 15) : BV:1
48 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 47) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 8 : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 8 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 4294967288 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%0=>L6%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L7%1%1
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L8%1%1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.1 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967288 { -8 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvconcat(2, 13) : BV:33
15 : bvadd(4, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(1, 17) : BOOL
19 : not(18) : BOOL
20 : ite(19, 1, 2) : BV:1
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : 4294967288 { -8 } : BV:32
7 : bvadd(4, 5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(2, 3, 7, 8, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.1 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : input.dst.exreg.0.0 : BV:32
13 : 4294967288 { -8 } : BV:32
14 : bvadd(11, 12, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(9, 10, 14, 15, 16) : BV:32
18 : bvextract(17, 2, 2) : BV:1
19 : eq(5, 18) : BOOL
20 : iff(8, 19) : BOOL
21 : bvadd(6, 17) : BV:32
22 : bvextract(21, 2, 2) : BV:1
23 : eq(5, 22) : BOOL
24 : xor(8, 23) : BOOL
25 : and(20, 24) : BOOL
26 : 0 : BV:1
27 : ite(25, 5, 26) : BV:1
28 : 10 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : eq(5, 29) : BOOL
31 : ite(30, 5, 26) : BV:1
32 : 9 : INT
33 : 8 : INT
34 : bvextract(1, 32, 33) : BV:2
35 : ite(23, 5, 26) : BV:1
36 : 4294967295 { -1 } : BV:32
37 : bvmul(36, 17) : BV:32
38 : eq(6, 37) : BOOL
39 : ite(38, 5, 26) : BV:1
40 : 5 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvextract(21, 15, 15) : BV:1
43 : eq(5, 42) : BOOL
44 : bvextract(6, 15, 15) : BV:1
45 : eq(5, 44) : BOOL
46 : xor(43, 45) : BOOL
47 : ite(46, 5, 26) : BV:1
48 : 3 : INT
49 : bvextract(1, 48, 48) : BV:1
50 : 1 : INT
51 : bvextract(1, 50, 50) : BV:1
52 : bvconcat(26, 6) : BV:33
53 : bvconcat(26, 17) : BV:33
54 : bvadd(52, 53) : BV:33
55 : 32 : INT
56 : bvextract(54, 55, 55) : BV:1
57 : eq(5, 56) : BOOL
58 : ite(57, 5, 26) : BV:1
59 : bvconcat(4, 27, 31, 34, 35, 39, 41, 47, 49, 26, 51, 58) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : not(13) : BOOL
15 : 1 : BV:1
16 : 0 : BV:1
17 : ite(14, 15, 16) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.1 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967288 { -8 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvconcat(2, 13) : BV:33
15 : bvadd(4, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(1, 17) : BOOL
19 : ite(18, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 1, 25) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : bvconcat(15, 1) : BV:33
17 : bvconcat(15, 11) : BV:33
18 : bvadd(16, 17) : BV:33
19 : 32 : INT
20 : bvextract(18, 19, 19) : BV:1
21 : eq(14, 20) : BOOL
22 : not(21) : BOOL
23 : andnot1(13, 22) : BOOL
24 : ite(23, 14, 15) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 11) : BV:32
26 : eq(2, 25) : BOOL
27 : andnot2(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : bvconcat(15, 1) : BV:33
17 : bvconcat(15, 11) : BV:33
18 : bvadd(16, 17) : BV:33
19 : 32 : INT
20 : bvextract(18, 19, 19) : BV:1
21 : eq(14, 20) : BOOL
22 : or(13, 21) : BOOL
23 : ite(22, 14, 15) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : not(23) : BOOL
25 : 4294967295 { -1 } : BV:32
26 : bvmul(25, 11) : BV:32
27 : eq(2, 26) : BOOL
28 : or(24, 27) : BOOL
29 : 0 : BV:1
30 : ite(28, 1, 29) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>L9%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.0.1 : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%1=>L10%1%1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967288 { -8 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967288 { -8 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 8 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvconcat(15, 6) : BV:33
42 : 4294967288 : BV:33
43 : bvadd(41, 42) : BV:33
44 : 32 : INT
45 : bvextract(43, 44, 44) : BV:1
46 : eq(5, 45) : BOOL
47 : ite(46, 5, 15) : BV:1
48 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 47) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 8 : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 8 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 4294967288 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%1=>L1%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L12%1%1=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L1%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L1%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L11%1%0=>L11%1%1
=graph_with_simplified_assets.simplified_assumes at L11%1%0=>L11%1%1 done
=graph_with_simplified_assets.simplified_assumes at L11%1%0=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L11%1%0=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>L12%1%1
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>L12%1%1 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L11%1%0
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L11%1%0 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%0
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%0 done
=graph_with_simplified_assets.simplified_assumes at L6%1%0=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L6%1%0=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L6%1%0=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L6%1%0=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L12%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L12%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1016
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1036
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 0
1 : 127996 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1016
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1036
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 0
1 : 127996 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L1%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L1%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvadd(9, 12) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 4 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1005
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967292 { -4 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1010
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967292 { -4 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 4 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1011
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1012
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : bvadd(3, 4, 7) : BV:32
13 : select(1, 2, 12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : store(1, 2, 5, 14, 9, 10) : ARRAY[BV:32 -> BV:8]
16 : memlabel-mem-heap : MEMLABEL
17 : memmask(15, 16) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : bvadd(3, 4, 7) : BV:32
13 : select(1, 2, 12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : store(1, 2, 5, 14, 9, 10) : ARRAY[BV:32 -> BV:8]
16 : memlabel-mem-symbol.1.0 : MEMLABEL
17 : memmask(15, 16) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : bvadd(3, 4, 7) : BV:32
13 : select(1, 2, 12, 9, 10) : BV:32
14 : bvadd(11, 13) : BV:32
15 : store(1, 2, 5, 14, 9, 10) : ARRAY[BV:32 -> BV:8]
16 : memlabel-mem-symbol.2.0 : MEMLABEL
17 : memmask(15, 16) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1017
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1
1 : input.dst.exreg.0.1 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : 4294967292 { -4 } : BV:32
7 : bvadd(4, 5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(2, 3, 7, 8, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 1, 25) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1002
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : bvconcat(15, 1) : BV:33
17 : bvconcat(15, 11) : BV:33
18 : bvadd(16, 17) : BV:33
19 : 32 : INT
20 : bvextract(18, 19, 19) : BV:1
21 : eq(14, 20) : BOOL
22 : not(21) : BOOL
23 : andnot1(13, 22) : BOOL
24 : ite(23, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 11) : BV:32
26 : eq(2, 25) : BOOL
27 : andnot2(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1004
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : bvconcat(15, 1) : BV:33
17 : bvconcat(15, 11) : BV:33
18 : bvadd(16, 17) : BV:33
19 : 32 : INT
20 : bvextract(18, 19, 19) : BV:1
21 : eq(14, 20) : BOOL
22 : or(13, 21) : BOOL
23 : ite(22, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : not(23) : BOOL
25 : 4294967295 { -1 } : BV:32
26 : bvmul(25, 11) : BV:32
27 : eq(2, 26) : BOOL
28 : or(24, 27) : BOOL
29 : 0 : BV:1
30 : ite(28, 1, 29) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.1 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvconcat(2, 13) : BV:33
15 : bvadd(4, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(1, 17) : BOOL
19 : not(18) : BOOL
20 : ite(19, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1010
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.1 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : input.dst.exreg.0.0 : BV:32
13 : 4294967292 { -4 } : BV:32
14 : bvadd(11, 12, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(9, 10, 14, 15, 16) : BV:32
18 : bvextract(17, 2, 2) : BV:1
19 : eq(5, 18) : BOOL
20 : iff(8, 19) : BOOL
21 : bvadd(6, 17) : BV:32
22 : bvextract(21, 2, 2) : BV:1
23 : eq(5, 22) : BOOL
24 : xor(8, 23) : BOOL
25 : and(20, 24) : BOOL
26 : 0 : BV:1
27 : ite(25, 5, 26) : BV:1
28 : 10 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : eq(5, 29) : BOOL
31 : ite(30, 5, 26) : BV:1
32 : 9 : INT
33 : 8 : INT
34 : bvextract(1, 32, 33) : BV:2
35 : ite(23, 5, 26) : BV:1
36 : 4294967295 { -1 } : BV:32
37 : bvmul(36, 17) : BV:32
38 : eq(6, 37) : BOOL
39 : ite(38, 5, 26) : BV:1
40 : 5 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvextract(21, 15, 15) : BV:1
43 : eq(5, 42) : BOOL
44 : bvextract(6, 15, 15) : BV:1
45 : eq(5, 44) : BOOL
46 : xor(43, 45) : BOOL
47 : ite(46, 5, 26) : BV:1
48 : 3 : INT
49 : bvextract(1, 48, 48) : BV:1
50 : 1 : INT
51 : bvextract(1, 50, 50) : BV:1
52 : bvconcat(26, 6) : BV:33
53 : bvconcat(26, 17) : BV:33
54 : bvadd(52, 53) : BV:33
55 : 32 : INT
56 : bvextract(54, 55, 55) : BV:1
57 : eq(5, 56) : BOOL
58 : ite(57, 5, 26) : BV:1
59 : bvconcat(4, 27, 31, 34, 35, 39, 41, 47, 49, 26, 51, 58) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1011
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1012
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967292 { -4 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : not(13) : BOOL
15 : 1 : BV:1
16 : 0 : BV:1
17 : ite(14, 15, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1013
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.1 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvconcat(2, 13) : BV:33
15 : bvadd(4, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(1, 17) : BOOL
19 : ite(18, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1017
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1017
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.1 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-heap : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.1 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.0.1 : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : store(1, 2, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.2.0 : MEMLABEL
11 : memmask(9, 10) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 4 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1005
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967292 { -4 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967292 { -4 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1010
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967292 { -4 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 4 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1011
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1012
1 : 4 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>L11%1%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>L11%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1010
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1011
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1012
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1014
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1015
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1017
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1018
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1020
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1021
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1022
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1023
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 for loc_id 1024
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%0=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1010
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1011
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1012
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1017
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1018
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1019
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1020
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1021
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1022
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1023
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1024
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1025
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1026
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 for loc_id 1027
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L11%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1017
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1018
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1019
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1020
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1021
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1022
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1023
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1024
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1025
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1026
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 for loc_id 1027
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967288 { -8 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvadd(9, 12) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 8 : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 8 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 4294967288 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1010
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967288 { -8 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 8 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvconcat(15, 6) : BV:33
42 : 4294967288 : BV:33
43 : bvadd(41, 42) : BV:33
44 : 32 : INT
45 : bvextract(43, 44, 44) : BV:1
46 : eq(5, 45) : BOOL
47 : ite(46, 5, 15) : BV:1
48 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 47) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1011
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1013
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : dst_symbol_addr.2 : BV:32
8 : 4294967288 { -8 } : BV:32
9 : bvadd(7, 4, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(1, 2, 9, 10, 11) : BV:32
13 : bvadd(3, 4, 8) : BV:32
14 : select(1, 2, 13, 10, 11) : BV:32
15 : bvadd(12, 14) : BV:32
16 : store(1, 2, 6, 15, 10, 11) : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-heap : MEMLABEL
18 : memmask(16, 17) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : dst_symbol_addr.2 : BV:32
8 : 4294967288 { -8 } : BV:32
9 : bvadd(7, 4, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(1, 2, 9, 10, 11) : BV:32
13 : bvadd(3, 4, 8) : BV:32
14 : select(1, 2, 13, 10, 11) : BV:32
15 : bvadd(12, 14) : BV:32
16 : store(1, 2, 6, 15, 10, 11) : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-symbol.1.0 : MEMLABEL
18 : memmask(16, 17) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : dst_symbol_addr.2 : BV:32
8 : 4294967288 { -8 } : BV:32
9 : bvadd(7, 4, 8) : BV:32
10 : 4 : INT
11 : 0 : BOOL
12 : select(1, 2, 9, 10, 11) : BV:32
13 : bvadd(3, 4, 8) : BV:32
14 : select(1, 2, 13, 10, 11) : BV:32
15 : bvadd(12, 14) : BV:32
16 : store(1, 2, 6, 15, 10, 11) : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-symbol.2.0 : MEMLABEL
18 : memmask(16, 17) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%0=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967288 { -8 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1017
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1
1 : input.dst.exreg.0.1 : BV:32
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : dst_symbol_addr.1 : BV:32
5 : input.dst.exreg.0.0 : BV:32
6 : 4294967288 { -8 } : BV:32
7 : bvadd(4, 5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(2, 3, 7, 8, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : not(23) : BOOL
25 : 0 : BV:1
26 : ite(24, 1, 25) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1002
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : bvconcat(15, 1) : BV:33
17 : bvconcat(15, 11) : BV:33
18 : bvadd(16, 17) : BV:33
19 : 32 : INT
20 : bvextract(18, 19, 19) : BV:1
21 : eq(14, 20) : BOOL
22 : not(21) : BOOL
23 : andnot1(13, 22) : BOOL
24 : ite(23, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : 4294967295 { -1 } : BV:32
25 : bvmul(24, 11) : BV:32
26 : eq(2, 25) : BOOL
27 : andnot2(23, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 1, 28) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1004
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : bvconcat(15, 1) : BV:33
17 : bvconcat(15, 11) : BV:33
18 : bvadd(16, 17) : BV:33
19 : 32 : INT
20 : bvextract(18, 19, 19) : BV:1
21 : eq(14, 20) : BOOL
22 : or(13, 21) : BOOL
23 : ite(22, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : not(23) : BOOL
25 : 4294967295 { -1 } : BV:32
26 : bvmul(25, 11) : BV:32
27 : eq(2, 26) : BOOL
28 : or(24, 27) : BOOL
29 : 0 : BV:1
30 : ite(28, 1, 29) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.1 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967288 { -8 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvconcat(2, 13) : BV:33
15 : bvadd(4, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(1, 17) : BOOL
19 : not(18) : BOOL
20 : ite(19, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.1 : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvadd(2, 11) : BV:32
13 : 31 : INT
14 : bvextract(12, 13, 13) : BV:1
15 : eq(1, 14) : BOOL
16 : bvextract(2, 13, 13) : BV:1
17 : eq(1, 16) : BOOL
18 : bvextract(11, 13, 13) : BV:1
19 : eq(1, 18) : BOOL
20 : iff(17, 19) : BOOL
21 : xor(17, 15) : BOOL
22 : and(20, 21) : BOOL
23 : iff(15, 22) : BOOL
24 : 0 : BV:1
25 : ite(23, 1, 24) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1010
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.1 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : input.dst.mem : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
11 : dst_symbol_addr.1 : BV:32
12 : input.dst.exreg.0.0 : BV:32
13 : 4294967288 { -8 } : BV:32
14 : bvadd(11, 12, 13) : BV:32
15 : 4 : INT
16 : 0 : BOOL
17 : select(9, 10, 14, 15, 16) : BV:32
18 : bvextract(17, 2, 2) : BV:1
19 : eq(5, 18) : BOOL
20 : iff(8, 19) : BOOL
21 : bvadd(6, 17) : BV:32
22 : bvextract(21, 2, 2) : BV:1
23 : eq(5, 22) : BOOL
24 : xor(8, 23) : BOOL
25 : and(20, 24) : BOOL
26 : 0 : BV:1
27 : ite(25, 5, 26) : BV:1
28 : 10 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : eq(5, 29) : BOOL
31 : ite(30, 5, 26) : BV:1
32 : 9 : INT
33 : 8 : INT
34 : bvextract(1, 32, 33) : BV:2
35 : ite(23, 5, 26) : BV:1
36 : 4294967295 { -1 } : BV:32
37 : bvmul(36, 17) : BV:32
38 : eq(6, 37) : BOOL
39 : ite(38, 5, 26) : BV:1
40 : 5 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvextract(21, 15, 15) : BV:1
43 : eq(5, 42) : BOOL
44 : bvextract(6, 15, 15) : BV:1
45 : eq(5, 44) : BOOL
46 : xor(43, 45) : BOOL
47 : ite(46, 5, 26) : BV:1
48 : 3 : INT
49 : bvextract(1, 48, 48) : BV:1
50 : 1 : INT
51 : bvextract(1, 50, 50) : BV:1
52 : bvconcat(26, 6) : BV:33
53 : bvconcat(26, 17) : BV:33
54 : bvadd(52, 53) : BV:33
55 : 32 : INT
56 : bvextract(54, 55, 55) : BV:1
57 : eq(5, 56) : BOOL
58 : ite(57, 5, 26) : BV:1
59 : bvconcat(4, 27, 31, 34, 35, 39, 41, 47, 49, 26, 51, 58) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1011
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : 1 : BV:1
15 : 0 : BV:1
16 : ite(13, 14, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1012
1 : input.dst.exreg.0.1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
5 : dst_symbol_addr.1 : BV:32
6 : input.dst.exreg.0.0 : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvadd(5, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(3, 4, 8, 9, 10) : BV:32
12 : bvmul(2, 11) : BV:32
13 : eq(1, 12) : BOOL
14 : not(13) : BOOL
15 : 1 : BV:1
16 : 0 : BV:1
17 : ite(14, 15, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1013
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.1 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967288 { -8 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvconcat(2, 13) : BV:33
15 : bvadd(4, 14) : BV:33
16 : 32 : INT
17 : bvextract(15, 16, 16) : BV:1
18 : eq(1, 17) : BOOL
19 : ite(18, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1017
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1017
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.0.1 : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-heap : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1034
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.0.1 : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.1.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1035
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.0.1 : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967288 { -8 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 8 : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 8 : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 4294967288 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294967288 { -8 } : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(1, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294967288 { -8 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1010
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967288 { -8 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 8 : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvconcat(15, 6) : BV:33
42 : 4294967288 : BV:33
43 : bvadd(41, 42) : BV:33
44 : 32 : INT
45 : bvextract(43, 44, 44) : BV:1
46 : eq(5, 45) : BOOL
47 : ite(46, 5, 15) : BV:1
48 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 47) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1011
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 8 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1013
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 4294967288 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 for loc_id 1014
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 for loc_id 1015
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 for loc_id 1017
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 for loc_id 1018
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 for loc_id 1020
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 for loc_id 1021
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 for loc_id 1022
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 for loc_id 1023
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 for loc_id 1024
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in dst
=Loc 0 in dst.
REGMEM
dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=Loc 1 in dst.
REGMEM
dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=Loc 2 in dst.
REGMEM
dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=Loc 3 in dst.
REGMEM
dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=Loc 4 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 5 in dst.
REGMEM
dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=Loc 6 in dst.
REGMEM
dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=Loc 7 in dst.
REGMEM
dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=Loc 1001 in dst.
REGMEM
dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=Loc 1002 in dst.
REGMEM
dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=Loc 1003 in dst.
REGMEM
dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=Loc 1004 in dst.
REGMEM
dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=Loc 1005 in dst.
REGMEM
dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=Loc 1006 in dst.
REGMEM
dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=Loc 1007 in dst.
REGMEM
dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=Loc 1008 in dst.
REGMEM
dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=Loc 1009 in dst.
REGMEM
dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=Loc 1010 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 1011 in dst.
REGMEM
dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=Loc 1012 in dst.
REGMEM
dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=Loc 1013 in dst.
REGMEM
dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=Loc 1014 in dst.
LLVMVAR
dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Loc 1015 in dst.
REGMEM
dst.esp.E0%0%1
1 : input.dst.esp.E0%0%1 : BV:32
=Loc 1016 in dst.
REGMEM
dst.esp.L0%1%1
1 : input.dst.esp.L0%1%1 : BV:32
=Loc 1017 in dst.
REGMEM
dst.hidden_reg.0
1 : input.dst.hidden_reg.0 : BV:32
=Loc 1018 in dst.
REGMEM
dst.hidden_reg.1
1 : input.dst.hidden_reg.1 : BOOL
=Loc 1019 in dst.
REGMEM
dst.hidden_reg.10
1 : input.dst.hidden_reg.10 : BOOL
=Loc 1020 in dst.
REGMEM
dst.hidden_reg.2
1 : input.dst.hidden_reg.2 : BOOL
=Loc 1021 in dst.
REGMEM
dst.hidden_reg.3
1 : input.dst.hidden_reg.3 : BOOL
=Loc 1022 in dst.
REGMEM
dst.hidden_reg.4
1 : input.dst.hidden_reg.4 : BOOL
=Loc 1023 in dst.
REGMEM
dst.hidden_reg.5
1 : input.dst.hidden_reg.5 : BOOL
=Loc 1024 in dst.
REGMEM
dst.hidden_reg.6
1 : input.dst.hidden_reg.6 : BOOL
=Loc 1025 in dst.
REGMEM
dst.hidden_reg.7
1 : input.dst.hidden_reg.7 : BOOL
=Loc 1026 in dst.
REGMEM
dst.hidden_reg.8
1 : input.dst.hidden_reg.8 : BOOL
=Loc 1027 in dst.
REGMEM
dst.hidden_reg.9
1 : input.dst.hidden_reg.9 : BOOL
=Loc 1028 in dst.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1032 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-heap
=Loc 1033 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-esp
=Loc 1034 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1035 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1036 in dst.
SLOT
=memname
dst.mem
=addr
1 : input_stack_pointer_const : BV:32
=nbytes
4
=bigendian
false

=Alias analysis results in dst
=Alias analysis result in dst at L0%0%1
=Alias analysis result in dst at L0%0%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1 (input.dst.exreg.0.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 3 (input.dst.exreg.0.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 4 (input.dst.exreg.0.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 5 (input.dst.exreg.0.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 6 (input.dst.exreg.0.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 7 (input.dst.exreg.0.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1008 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1009 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1010 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1011 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1012 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1013 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1014 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1015 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1016 (input.dst.esp.L0%1%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1017 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1018 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1019 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1020 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1021 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1022 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1023 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1024 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1025 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1026 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1027 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1028 (input.econd)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
nullptr
=Alias analysis result in dst at L1%1%0
=Alias analysis result in dst at L1%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1 (input.dst.exreg.0.1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L1%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1008 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1009 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1010 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1011 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1012 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1013 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1014 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1015 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1016 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L1%1%0 for loc 1017 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1018 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1019 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1020 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1021 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1022 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1023 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1024 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1025 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1026 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1027 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1028 (input.econd)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L11%1%0
=Alias analysis result in dst at L11%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1 (input.dst.exreg.0.1)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L11%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L11%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L11%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L11%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L11%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1008 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1009 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1010 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1011 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1012 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1013 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1014 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1015 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1016 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L11%1%0 for loc 1017 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1018 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1019 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1020 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1021 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1022 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1023 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1024 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1025 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1026 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1027 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1028 (input.econd)
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L11%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L5%1%1
=Alias analysis result in dst at L5%1%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1 (input.dst.exreg.0.1)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L5%1%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L5%1%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L5%1%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L5%1%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L5%1%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1008 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1009 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1010 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1011 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1012 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1013 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1014 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1015 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1016 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L5%1%1 for loc 1017 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1018 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1019 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1020 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1021 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1022 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1023 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1024 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1025 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1026 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1027 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1028 (input.econd)
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L5%1%1 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%0
=Alias analysis result in dst at L6%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1 (input.dst.exreg.0.1)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L6%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1008 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1009 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1010 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1011 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1012 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1013 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1014 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1015 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1016 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L6%1%0 for loc 1017 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1018 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1019 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1020 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1021 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1022 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1023 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1024 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1025 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1026 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1027 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1028 (input.econd)
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L6%1%0 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1
=Alias analysis result in dst at E0%0%1 for loc 0 (input.dst.exreg.0.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1 (input.dst.exreg.0.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1001 (input.dst.exreg.10.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1002 (input.dst.exreg.11.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1003 (input.dst.exreg.12.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1004 (input.dst.exreg.13.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1005 (input.dst.exreg.14.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1006 (input.dst.exreg.15.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1007 (input.dst.exreg.16.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1008 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1009 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1010 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1011 (input.dst.exreg.7.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1012 (input.dst.exreg.8.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1013 (input.dst.exreg.9.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1014 (input.dst.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1015 (input.dst.esp.E0%0%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1016 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1017 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1018 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1019 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1020 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1021 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1022 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1023 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1024 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1025 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1026 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1027 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1028 (input.econd)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1034 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1035 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1036 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, ; memlabel-mem-heap, )

=Liveness in dst
=live locs at L0%0%1
1032, 1034, 1035
=live locs at L1%1%0
0, 1032, 1034, 1035
=live locs at L11%1%0
1032, 1034, 1035
=live locs at L5%1%1
0, 1011, 1032, 1034, 1035
=live locs at L6%1%0
0, 1032, 1034, 1035
=live locs at E0%0%1
0, 1014, 1032, 1034, 1035

=Available expressions in dst

=sprel_maps in dst
=sprel_map at L0%0%1 in dst
=sprel_map at L1%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1016
17386 : input_stack_pointer_const : BV:32
=loc 1036
17387 : retaddr_const : BV:32
=sprel_map at L11%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1016
17386 : input_stack_pointer_const : BV:32
=loc 1036
17387 : retaddr_const : BV:32
=sprel_map at L5%1%1 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1016
17386 : input_stack_pointer_const : BV:32
=loc 1036
17387 : retaddr_const : BV:32
=sprel_map at L6%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1016
17386 : input_stack_pointer_const : BV:32
=loc 1036
17387 : retaddr_const : BV:32
=sprel_map at E0%0%1 in dst
=loc 0
17389 : 0 : BV:32
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
17422 : 4 : BV:32
18184 : bvadd(17386, 17422) : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1001
17654 : 0 : BV:1
=loc 1002
17654 : 0 : BV:1
=loc 1003
17654 : 0 : BV:1
=loc 1004
17642 : 1 : BV:1
=loc 1005
17642 : 1 : BV:1
=loc 1006
17642 : 1 : BV:1
=loc 1007
17642 : 1 : BV:1
=loc 1011
17642 : 1 : BV:1
=loc 1012
17654 : 0 : BV:1
=loc 1013
17654 : 0 : BV:1
=loc 1014
17387 : retaddr_const : BV:32
=loc 1015
17386 : input_stack_pointer_const : BV:32
17422 : 4 : BV:32
18184 : bvadd(17386, 17422) : BV:32
=loc 1016
17386 : input_stack_pointer_const : BV:32
=loc 1036
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=eqcheck_info
=eqcheck
=proof_filename s112_s112.clang.eqchecker.O3.i386.ALL.proof
=function_name s112
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: movl $0x1f3fc,%exvr0.0d #
.i1: movl %exvr5.3w:C_SYMBOL0*1+-4/umask/32(%exvr0.0d),%exvr0.1d #
.i2: addl %exvr5.3w:C_SYMBOL1*1+-4/umask/32(%exvr0.0d),%exvr0.1d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i3: movl %exvr0.1d,%exvr5.3w:C_SYMBOL1(%exvr0.0d) #
.i4: cmpl $0x4,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i5: je .i11 #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i6: movl %exvr5.3w:C_SYMBOL0*1+-8/umask/32(%exvr0.0d),%exvr0.1d #
.i7: addl %exvr5.3w:C_SYMBOL1*1+-8/umask/32(%exvr0.0d),%exvr0.1d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i8: movl %exvr0.1d,%exvr5.3w:C_SYMBOL1*1+-4/umask/32(%exvr0.0d) #
.i9: addl $0xfffffff8,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i10: jmp .i1 #
.i11: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i12: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x5
2 : 0xc
3 : 0x10
4 : 0x16
5 : 0x1c
6 : 0x22
7 : 0x25
8 : 0x27
9 : 0x2d
10 : 0x33
11 : 0x39
12 : 0x3c
=dst_insn_pcs done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-esp_begin : BV:32
18 : memlabel-mem-esp_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : stack.size : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : bvuge(1, 10) : BOOL
27 : bvule(1, 11) : BOOL
28 : and(26, 27) : BOOL
29 : bvuge(2, 10) : BOOL
30 : bvule(2, 11) : BOOL
31 : and(29, 30) : BOOL
32 : not(31) : BOOL
33 : andnot1(28, 32) : BOOL
34 : bvuge(1, 17) : BOOL
35 : bvule(1, 18) : BOOL
36 : and(34, 35) : BOOL
37 : bvuge(2, 17) : BOOL
38 : bvule(2, 18) : BOOL
39 : and(37, 38) : BOOL
40 : not(39) : BOOL
41 : andnot1(36, 40) : BOOL
42 : and(33, 41) : BOOL
43 : bvuge(10, 1) : BOOL
44 : bvule(10, 2) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(11, 1) : BOOL
47 : bvule(11, 2) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(10, 17) : BOOL
53 : bvule(10, 18) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(11, 17) : BOOL
56 : bvule(11, 18) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(17, 1) : BOOL
62 : bvule(17, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(18, 1) : BOOL
65 : bvule(18, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(17, 10) : BOOL
71 : bvule(17, 11) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(18, 10) : BOOL
74 : bvule(18, 11) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : and(25, 78) : BOOL
80 : symbol.2 : BV:32
81 : 15 : BV:32
82 : bvand(80, 81) : BV:32
83 : 0 : BV:32
84 : eq(82, 83) : BOOL
85 : and(79, 84) : BOOL
86 : symbol.1 : BV:32
87 : bvand(86, 81) : BV:32
88 : eq(87, 83) : BOOL
89 : and(85, 88) : BOOL
90 : eq(86, 10) : BOOL
91 : eq(80, 1) : BOOL
92 : and(90, 91) : BOOL
93 : and(89, 92) : BOOL
94 : input_stack_pointer_const : BV:32
95 : bvule(17, 94) : BOOL
96 : bvule(94, 18) : BOOL
97 : and(95, 96) : BOOL
98 : 3 : BV:32
99 : bvadd(94, 98) : BV:32
100 : eq(99, 18) : BOOL
101 : and(97, 100) : BOOL
102 : and(93, 101) : BOOL
103 : 4294963200 { -4096 } : BV:32
104 : bvand(17, 103) : BV:32
105 : eq(104, 17) : BOOL
106 : 1 : BV:32
107 : bvadd(18, 106) : BV:32
108 : bvand(107, 103) : BV:32
109 : eq(108, 107) : BOOL
110 : and(105, 109) : BOOL
111 : and(102, 110) : BOOL
112 : dst_symbol_addr.1 : BV:32
113 : eq(86, 112) : BOOL
114 : dst_symbol_addr.2 : BV:32
115 : eq(80, 114) : BOOL
116 : and(113, 115) : BOOL
117 : and(111, 116) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 192000 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 52960 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : dst_symbol_addr.1 : BV:32
9 : eq(8, 2) : BOOL
10 : and(7, 9) : BOOL
11 : dst_symbol_addr.2 : BV:32
12 : eq(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : input_stack_pointer_const : BV:32
15 : 2147450876 : BV:32
16 : eq(14, 15) : BOOL
17 : and(13, 16) : BOOL
18 : memlabel-mem-symbol.2.0_begin : BV:32
19 : eq(18, 5) : BOOL
20 : and(17, 19) : BOOL
21 : memlabel-mem-symbol.2.0_end : BV:32
22 : 180959 : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.1.0_begin : BV:32
26 : eq(25, 2) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.1.0_end : BV:32
29 : 319999 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 454656 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 2147450879 : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 2146996224 : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
=use_concrete_assertion : 1
=Memlabel assertions done
=llvm2ir 0
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%1_L0%0%1 Lfor.body%1%1_L1%1%0 E0%0%1_E0%0%1
=Edges:
L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
Lfor.body%1%1_L1%1%0 => E0%0%1_E0%0%1
=graph done
=Node outputs: E0%0%1_E0%0%1
=Node outputs done for E0%0%1_E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1_L0%0%1
=L0%0%1_L0%0%1 assume pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=L0%0%1_L0%0%1 assume predicate_set done
=L0%0%1_L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1_L1%1%0
=Lfor.body%1%1_L1%1%0 assume predicate_set done
=Lfor.body%1%1_L1%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1_E0%0%1
=E0%0%1_E0%0%1 assume predicate_set done
=E0%0%1_E0%0%1 assert pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=E0%0%1_E0%0%1 assert pred 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=E0%0%1_E0%0%1 assert pred 2
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.llvm-indir_tgt : BV:32
=predicate done
=E0%0%1_E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.5
mlvar.dst.5 : memlabel-mem-symbol.1.0-symbol.2.0-heap
=memlabel_map.6
mlvar.dst.6 : memlabel-mem-esp
=memlabel_map.7
mlvar.dst.7 : memlabel-mem-esp
=memlabel_map.8
mlvar.llvm.s112.0 : memlabel-mem-symbol.1.0
=memlabel_map.9
mlvar.llvm.s112.1 : memlabel-mem-symbol.2.0
=memlabel_map.10
mlvar.llvm.s112.2 : memlabel-mem-symbol.1.0
=Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L1%1%0 => E0%0%1_E0%0%1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to E0%0%1 at unroll 4 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))+((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge3
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge4
=Edge.src_tfg_full_pathset.Edge: Lfor.end%1%1 => E0%0%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:  ret i32 0, !dbg !32
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L1%1%0 to E0%0%1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L11%1%0)*(L11%1%0=>E0%0%1)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L11%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L11%1%0 => E0%0%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.6 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicates at E0%0%1_E0%0%1
=predicates at E0%0%1_E0%0%1 predicate# 0
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 1
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 2
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicates at E0%0%1_E0%0%1 done
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in s112

=Alias analysis results in s112
=Alias analysis result in s112 at L0%0%1_L0%0%1
=Alias analysis result in s112 at Lfor.body%1%1_L1%1%0
=Alias analysis result in s112 at E0%0%1_E0%0%1

=Liveness in s112
=live locs at L0%0%1_L0%0%1

=live locs at Lfor.body%1%1_L1%1%0

=live locs at E0%0%1_E0%0%1


=Available expressions in s112

=sprel_maps in s112
=sprel_map at L0%0%1_L0%0%1 in s112
=sprel_map at Lfor.body%1%1_L1%1%0 in s112
=sprel_map at E0%0%1_E0%0%1 in s112
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-esp_begin : BV:32
18 : memlabel-mem-esp_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : stack.size : BV:32
22 : bvadd(21, 5) : BV:32
23 : bvadd(17, 22) : BV:32
24 : eq(18, 23) : BOOL
25 : and(20, 24) : BOOL
26 : bvuge(1, 10) : BOOL
27 : bvule(1, 11) : BOOL
28 : and(26, 27) : BOOL
29 : bvuge(2, 10) : BOOL
30 : bvule(2, 11) : BOOL
31 : and(29, 30) : BOOL
32 : not(31) : BOOL
33 : andnot1(28, 32) : BOOL
34 : bvuge(1, 17) : BOOL
35 : bvule(1, 18) : BOOL
36 : and(34, 35) : BOOL
37 : bvuge(2, 17) : BOOL
38 : bvule(2, 18) : BOOL
39 : and(37, 38) : BOOL
40 : not(39) : BOOL
41 : andnot1(36, 40) : BOOL
42 : and(33, 41) : BOOL
43 : bvuge(10, 1) : BOOL
44 : bvule(10, 2) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(11, 1) : BOOL
47 : bvule(11, 2) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(10, 17) : BOOL
53 : bvule(10, 18) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(11, 17) : BOOL
56 : bvule(11, 18) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(17, 1) : BOOL
62 : bvule(17, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(18, 1) : BOOL
65 : bvule(18, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(17, 10) : BOOL
71 : bvule(17, 11) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(18, 10) : BOOL
74 : bvule(18, 11) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : and(25, 78) : BOOL
80 : symbol.2 : BV:32
81 : 15 : BV:32
82 : bvand(80, 81) : BV:32
83 : 0 : BV:32
84 : eq(82, 83) : BOOL
85 : and(79, 84) : BOOL
86 : symbol.1 : BV:32
87 : bvand(86, 81) : BV:32
88 : eq(87, 83) : BOOL
89 : and(85, 88) : BOOL
90 : eq(86, 10) : BOOL
91 : eq(80, 1) : BOOL
92 : and(90, 91) : BOOL
93 : and(89, 92) : BOOL
94 : input_stack_pointer_const : BV:32
95 : bvule(17, 94) : BOOL
96 : bvule(94, 18) : BOOL
97 : and(95, 96) : BOOL
98 : 3 : BV:32
99 : bvadd(94, 98) : BV:32
100 : eq(99, 18) : BOOL
101 : and(97, 100) : BOOL
102 : and(93, 101) : BOOL
103 : 4294963200 { -4096 } : BV:32
104 : bvand(17, 103) : BV:32
105 : eq(104, 17) : BOOL
106 : 1 : BV:32
107 : bvadd(18, 106) : BV:32
108 : bvand(107, 103) : BV:32
109 : eq(108, 107) : BOOL
110 : and(105, 109) : BOOL
111 : and(102, 110) : BOOL
112 : dst_symbol_addr.1 : BV:32
113 : eq(86, 112) : BOOL
114 : dst_symbol_addr.2 : BV:32
115 : eq(80, 114) : BOOL
116 : and(113, 115) : BOOL
117 : and(111, 116) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 192000 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 52960 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : dst_symbol_addr.1 : BV:32
9 : eq(8, 2) : BOOL
10 : and(7, 9) : BOOL
11 : dst_symbol_addr.2 : BV:32
12 : eq(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : input_stack_pointer_const : BV:32
15 : 2147450876 : BV:32
16 : eq(14, 15) : BOOL
17 : and(13, 16) : BOOL
18 : memlabel-mem-symbol.2.0_begin : BV:32
19 : eq(18, 5) : BOOL
20 : and(17, 19) : BOOL
21 : memlabel-mem-symbol.2.0_end : BV:32
22 : 180959 : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.1.0_begin : BV:32
26 : eq(25, 2) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.1.0_end : BV:32
29 : 319999 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 454656 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 2147450879 : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 2146996224 : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
=use_concrete_assertion : 0
=Memlabel assertions done
=counterexamples at pc L0%0%1_L0%0%1
=pc L0%0%1_L0%0%1 nodece 0
=pc L0%0%1_L0%0%1 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 0 nodece_path
=pc L0%0%1_L0%0%1 nodece 0 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 0 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1
=pc L0%0%1_L0%0%1 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1 nodece_path
=pc L0%0%1_L0%0%1 nodece 1 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 1 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2
=pc L0%0%1_L0%0%1 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2 nodece_path
=pc L0%0%1_L0%0%1 nodece 2 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 2 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3
=pc L0%0%1_L0%0%1 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
155324914
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3 nodece_path
=pc L0%0%1_L0%0%1 nodece 3 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 3 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
155324914
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4
=pc L0%0%1_L0%0%1 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
8936987
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4 nodece_path
=pc L0%0%1_L0%0%1 nodece 4 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 4 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
8936987
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5
=pc L0%0%1_L0%0%1 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 252 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 252 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2391950680
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5 nodece_path
=pc L0%0%1_L0%0%1 nodece 5 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 5 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 252 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 252 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2391950680
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6
=pc L0%0%1_L0%0%1 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1359512183
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6 nodece_path
=pc L0%0%1_L0%0%1 nodece 6 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 6 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1359512183
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7
=pc L0%0%1_L0%0%1 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
480298490
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7 nodece_path
=pc L0%0%1_L0%0%1 nodece 7 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 7 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
480298490
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8
=pc L0%0%1_L0%0%1 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 241 , m_adder -> 54)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 241 , m_adder -> 54)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3955370291
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8 nodece_path
=pc L0%0%1_L0%0%1 nodece 8 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 8 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 241 , m_adder -> 54)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 241 , m_adder -> 54)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3955370291
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9
=pc L0%0%1_L0%0%1 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1884167637
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9 nodece_path
=pc L0%0%1_L0%0%1 nodece 9 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 9 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1884167637
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10
=pc L0%0%1_L0%0%1 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1473442062
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10 nodece_path
=pc L0%0%1_L0%0%1 nodece 10 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 10 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1473442062
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11
=pc L0%0%1_L0%0%1 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
201305624
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11 nodece_path
=pc L0%0%1_L0%0%1 nodece 11 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 11 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
201305624
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12
=pc L0%0%1_L0%0%1 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1070575321
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12 nodece_path
=pc L0%0%1_L0%0%1 nodece 12 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 12 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1070575321
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13
=pc L0%0%1_L0%0%1 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
260401255
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13 nodece_path
=pc L0%0%1_L0%0%1 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 13 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
260401255
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14
=pc L0%0%1_L0%0%1 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 173 , m_adder -> 72)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 173 , m_adder -> 72)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3742791835
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14 nodece_path
=pc L0%0%1_L0%0%1 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 14 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 173 , m_adder -> 72)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 173 , m_adder -> 72)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3742791835
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15
=pc L0%0%1_L0%0%1 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 31 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
882160379
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15 nodece_path
=pc L0%0%1_L0%0%1 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 15 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 31 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
882160379
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16
=pc L0%0%1_L0%0%1 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 31 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
11614769
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16 nodece_path
=pc L0%0%1_L0%0%1 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 16 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 31 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
11614769
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17
=pc L0%0%1_L0%0%1 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319988 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319988 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319988 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 16 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1682085273
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17 nodece_path
=pc L0%0%1_L0%0%1 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 17 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319988 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319988 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319988 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 16 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1682085273
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18
=pc L0%0%1_L0%0%1 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
739273303
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18 nodece_path
=pc L0%0%1_L0%0%1 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 18 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
739273303
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19
=pc L0%0%1_L0%0%1 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1750003033
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19 nodece_path
=pc L0%0%1_L0%0%1 nodece 19 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 19 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1750003033
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20
=pc L0%0%1_L0%0%1 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1415505363
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20 nodece_path
=pc L0%0%1_L0%0%1 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 20 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1415505363
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21
=pc L0%0%1_L0%0%1 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
402903177
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21 nodece_path
=pc L0%0%1_L0%0%1 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 21 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
402903177
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22
=pc L0%0%1_L0%0%1 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1329202900
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22 nodece_path
=pc L0%0%1_L0%0%1 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 22 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1329202900
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23
=pc L0%0%1_L0%0%1 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 208 , m_adder -> 53)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 208 , m_adder -> 53)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2060005438
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23 nodece_path
=pc L0%0%1_L0%0%1 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 23 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 208 , m_adder -> 53)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 208 , m_adder -> 53)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2060005438
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24
=pc L0%0%1_L0%0%1 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1665204916
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24 nodece_path
=pc L0%0%1_L0%0%1 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 24 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1665204916
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25
=pc L0%0%1_L0%0%1 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1707056552
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25 nodece_path
=pc L0%0%1_L0%0%1 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 25 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1707056552
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26
=pc L0%0%1_L0%0%1 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 53 , m_adder -> 168)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 53 , m_adder -> 168)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2105131218
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26 nodece_path
=pc L0%0%1_L0%0%1 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 26 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 53 , m_adder -> 168)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 53 , m_adder -> 168)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2105131218
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27
=pc L0%0%1_L0%0%1 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1006071125
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27 nodece_path
=pc L0%0%1_L0%0%1 nodece 27 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 27 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1006071125
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28
=pc L0%0%1_L0%0%1 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
361261451
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28 nodece_path
=pc L0%0%1_L0%0%1 nodece 28 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 28 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
361261451
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29
=pc L0%0%1_L0%0%1 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 64 , m_adder -> 67)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 64 , m_adder -> 67)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2265343901
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29 nodece_path
=pc L0%0%1_L0%0%1 nodece 29 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 29 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 64 , m_adder -> 67)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 64 , m_adder -> 67)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2265343901
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30
=pc L0%0%1_L0%0%1 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 33440144 : BV:32
=symbol.2
1 : 18650544 : BV:32
=dst_symbol_addr.1
1 : 33440144 : BV:32
=dst_symbol_addr.2
1 : 18650544 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4194828288 { -100139008 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4229832700 { -65134596 } : BV:32
=memlabel-mem-esp_begin
1 : 35004416 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 33568143 : BV:32
=input.src.llvm-mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4229832703 { -65134593 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 18650544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 33440144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 18778543 : BV:32
=commonMEM.nonstack.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 544208 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2085331055
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30 nodece_path
=pc L0%0%1_L0%0%1 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 30 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 33440144 : BV:32
=symbol.2
1 : 18650544 : BV:32
=dst_symbol_addr.1
1 : 33440144 : BV:32
=dst_symbol_addr.2
1 : 18650544 : BV:32
=stack.size
1 : 4194828288 { -100139008 } : BV:32
=input_stack_pointer_const
1 : 4229832700 { -65134596 } : BV:32
=memlabel-mem-esp_begin
1 : 35004416 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 33568143 : BV:32
=input.src.llvm-mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4229832703 { -65134593 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 18650544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 33440144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 18778543 : BV:32
=commonMEM.nonstack.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 544208 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2085331055
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31
=pc L0%0%1_L0%0%1 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3883797504 { -411169792 } : BV:32
=symbol.2
1 : 3883925504 { -411041792 } : BV:32
=dst_symbol_addr.1
1 : 3883797504 { -411169792 } : BV:32
=dst_symbol_addr.2
1 : 3883925504 { -411041792 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3881025536 { -413941760 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3881025532 { -413941764 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3883925503 { -411041793 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3881025535 { -413941761 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3883925504 { -411041792 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3883797504 { -411169792 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3884053503 { -410913793 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1182595892
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31 nodece_path
=pc L0%0%1_L0%0%1 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 31 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3883797504 { -411169792 } : BV:32
=symbol.2
1 : 3883925504 { -411041792 } : BV:32
=dst_symbol_addr.1
1 : 3883797504 { -411169792 } : BV:32
=dst_symbol_addr.2
1 : 3883925504 { -411041792 } : BV:32
=stack.size
1 : 3881025536 { -413941760 } : BV:32
=input_stack_pointer_const
1 : 3881025532 { -413941764 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3883925503 { -411041793 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3881025535 { -413941761 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3883925504 { -411041792 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3883797504 { -411169792 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3884053503 { -410913793 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1182595892
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32
=pc L0%0%1_L0%0%1 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 864030208 : BV:32
=symbol.2
1 : 1476299776 : BV:32
=dst_symbol_addr.1
1 : 864030208 : BV:32
=dst_symbol_addr.2
1 : 1476299776 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 864158207 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1476299776 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 864030208 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1476427775 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
889575205
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32 nodece_path
=pc L0%0%1_L0%0%1 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 32 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 864030208 : BV:32
=symbol.2
1 : 1476299776 : BV:32
=dst_symbol_addr.1
1 : 864030208 : BV:32
=dst_symbol_addr.2
1 : 1476299776 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 864158207 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1476299776 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 864030208 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1476427775 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
889575205
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33
=pc L0%0%1_L0%0%1 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
112526508
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33 nodece_path
=pc L0%0%1_L0%0%1 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 33 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
112526508
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34
=pc L0%0%1_L0%0%1 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1625315128
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34 nodece_path
=pc L0%0%1_L0%0%1 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 34 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3464375296 { -830592000 } : BV:32
=symbol.2
1 : 3707386896 { -587580400 } : BV:32
=dst_symbol_addr.1
1 : 3464375296 { -830592000 } : BV:32
=dst_symbol_addr.2
1 : 3707386896 { -587580400 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=stack.size
1 : 3034525696 { -1260441600 } : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3437506556 { -857460740 } : BV:32
=memlabel-mem-esp_begin
1 : 402980864 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3464503295 { -830464001 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3437506559 { -857460737 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707386896 { -587580400 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3464375296 { -830592000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3707514895 { -587452401 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1625315128
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35
=pc L0%0%1_L0%0%1 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 253 , m_adder -> 250)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 253 , m_adder -> 250)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3277036777
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35 nodece_path
=pc L0%0%1_L0%0%1 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 35 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 253 , m_adder -> 250)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 253 , m_adder -> 250)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3277036777
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36
=pc L0%0%1_L0%0%1 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4294706576 { -260720 } : BV:32
=symbol.2
1 : 4294532192 { -435104 } : BV:32
=dst_symbol_addr.1
1 : 4294706576 { -260720 } : BV:32
=dst_symbol_addr.2
1 : 4294532192 { -435104 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4294529024 { -438272 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294529020 { -438276 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294834575 { -132721 } : BV:32
=input.src.llvm-mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294529023 { -438273 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294532192 { -435104 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294706576 { -260720 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294660191 { -307105 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1731812679
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36 nodece_path
=pc L0%0%1_L0%0%1 nodece 36 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 36 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4294706576 { -260720 } : BV:32
=symbol.2
1 : 4294532192 { -435104 } : BV:32
=dst_symbol_addr.1
1 : 4294706576 { -260720 } : BV:32
=dst_symbol_addr.2
1 : 4294532192 { -435104 } : BV:32
=stack.size
1 : 4294529024 { -438272 } : BV:32
=input_stack_pointer_const
1 : 4294529020 { -438276 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294834575 { -132721 } : BV:32
=input.src.llvm-mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294529023 { -438273 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294532192 { -435104 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294706576 { -260720 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294660191 { -307105 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1731812679
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37
=pc L0%0%1_L0%0%1 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3235265552 { -1059701744 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3235265552 { -1059701744 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3216257024 { -1078710272 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 5505024 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3235265552 { -1059701744 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3235393551 { -1059573745 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
617409831
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37 nodece_path
=pc L0%0%1_L0%0%1 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 37 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3235265552 { -1059701744 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3235265552 { -1059701744 } : BV:32
=stack.size
1 : 3216257024 { -1078710272 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 5505024 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3235265552 { -1059701744 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3235393551 { -1059573745 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
617409831
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38
=pc L0%0%1_L0%0%1 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (( 637664248 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 637664248 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664248 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1042254228
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38 nodece_path
=pc L0%0%1_L0%0%1 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 38 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (( 637664248 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 637664248 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=commonMEM.nonstack.mem
1 : (( 637664248 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1042254228
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39
=pc L0%0%1_L0%0%1 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4292770768 { -2196528 } : BV:32
=symbol.2
1 : 950272 : BV:32
=dst_symbol_addr.1
1 : 4292770768 { -2196528 } : BV:32
=dst_symbol_addr.2
1 : 950272 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4290854912 { -4112384 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292706300 { -2260996 } : BV:32
=memlabel-mem-esp_begin
1 : 1851392 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4292898767 { -2068529 } : BV:32
=input.src.llvm-mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4292706303 { -2260993 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 950272 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292770768 { -2196528 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1078271 : BV:32
=commonMEM.nonstack.mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 50528259 : BV:32
=unaliased_memslot.0
1 : 50528257 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1539847451
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39 nodece_path
=pc L0%0%1_L0%0%1 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 39 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4292770768 { -2196528 } : BV:32
=symbol.2
1 : 950272 : BV:32
=dst_symbol_addr.1
1 : 4292770768 { -2196528 } : BV:32
=dst_symbol_addr.2
1 : 950272 : BV:32
=stack.size
1 : 4290854912 { -4112384 } : BV:32
=input_stack_pointer_const
1 : 4292706300 { -2260996 } : BV:32
=memlabel-mem-esp_begin
1 : 1851392 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4292898767 { -2068529 } : BV:32
=input.src.llvm-mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4292706303 { -2260993 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 950272 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292770768 { -2196528 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1078271 : BV:32
=commonMEM.nonstack.mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 50528259 : BV:32
=unaliased_memslot.0
1 : 50528257 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1539847451
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40
=pc L0%0%1_L0%0%1 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3234737152 { -1060230144 } : BV:32
=symbol.2
1 : 3235265552 { -1059701744 } : BV:32
=dst_symbol_addr.1
1 : 3234737152 { -1060230144 } : BV:32
=dst_symbol_addr.2
1 : 3235265552 { -1059701744 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2223386624 { -2071580672 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2227711996 { -2067255300 } : BV:32
=memlabel-mem-esp_begin
1 : 4325376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3234865151 { -1060102145 } : BV:32
=input.src.llvm-mem
1 : (( 3235393540 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3235393540 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2227711999 { -2067255297 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3235265552 { -1059701744 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3234737152 { -1060230144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3235393551 { -1059573745 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3235393540 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
592561018
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40 nodece_path
=pc L0%0%1_L0%0%1 nodece 40 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 40 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3234737152 { -1060230144 } : BV:32
=symbol.2
1 : 3235265552 { -1059701744 } : BV:32
=dst_symbol_addr.1
1 : 3234737152 { -1060230144 } : BV:32
=dst_symbol_addr.2
1 : 3235265552 { -1059701744 } : BV:32
=stack.size
1 : 2223386624 { -2071580672 } : BV:32
=input_stack_pointer_const
1 : 2227711996 { -2067255300 } : BV:32
=memlabel-mem-esp_begin
1 : 4325376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3234865151 { -1060102145 } : BV:32
=input.src.llvm-mem
1 : (( 3235393540 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3235393540 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2227711999 { -2067255297 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3235265552 { -1059701744 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3234737152 { -1060230144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3235393551 { -1059573745 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3235393540 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
592561018
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41
=pc L0%0%1_L0%0%1 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=input.src.llvm-mem
1 : (( 1962934280 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 1962934280 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=commonMEM.nonstack.mem
1 : (( 1962934280 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1765417016
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41 nodece_path
=pc L0%0%1_L0%0%1 nodece 41 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 41 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=input.src.llvm-mem
1 : (( 1962934280 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 1962934280 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=commonMEM.nonstack.mem
1 : (( 1962934280 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1765417016
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42
=pc L0%0%1_L0%0%1 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
643520498
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42 nodece_path
=pc L0%0%1_L0%0%1 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 42 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
643520498
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43
=pc L0%0%1_L0%0%1 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 4294710272 { -257024 } : BV:32
=symbol.2
1 : 4294839296 { -128000 } : BV:32
=dst_symbol_addr.1
1 : 4294710272 { -257024 } : BV:32
=dst_symbol_addr.2
1 : 4294839296 { -128000 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294709244 { -258052 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294838271 { -129025 } : BV:32
=input.src.llvm-mem
1 : (( 4294967288 ) -> 0, ( 4294967289 ) -> 0, ( 4294967285 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 4294967288 ) -> 0, ( 4294967289 ) -> 0, ( 4294967285 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294709247 { -258049 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294839296 { -128000 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294710272 { -257024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967295 { -1 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294967288 ) -> 0, ( 4294967289 ) -> 0, ( 4294967285 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16842753 : BV:32
=unaliased_memslot.0
1 : 16842752 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1041655229
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43 nodece_path
=pc L0%0%1_L0%0%1 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 43 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 4294710272 { -257024 } : BV:32
=symbol.2
1 : 4294839296 { -128000 } : BV:32
=dst_symbol_addr.1
1 : 4294710272 { -257024 } : BV:32
=dst_symbol_addr.2
1 : 4294839296 { -128000 } : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=input_stack_pointer_const
1 : 4294709244 { -258052 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294838271 { -129025 } : BV:32
=input.src.llvm-mem
1 : (( 4294967288 ) -> 0, ( 4294967289 ) -> 0, ( 4294967285 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 4294967288 ) -> 0, ( 4294967289 ) -> 0, ( 4294967285 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294709247 { -258049 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294839296 { -128000 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294710272 { -257024 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294967295 { -1 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294967288 ) -> 0, ( 4294967289 ) -> 0, ( 4294967285 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 16842753 : BV:32
=unaliased_memslot.0
1 : 16842752 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1041655229
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44
=pc L0%0%1_L0%0%1 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=input.src.llvm-mem
1 : (( 1962934280 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 1962934280 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=commonMEM.nonstack.mem
1 : (( 1962934280 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1789065969
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44 nodece_path
=pc L0%0%1_L0%0%1 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 44 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1426066432 : BV:32
=symbol.2
1 : 1962806288 : BV:32
=dst_symbol_addr.1
1 : 1426066432 : BV:32
=dst_symbol_addr.2
1 : 1962806288 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1426194431 : BV:32
=input.src.llvm-mem
1 : (( 1962934280 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 1962934280 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1962806288 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1426066432 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1962934287 : BV:32
=commonMEM.nonstack.mem
1 : (( 1962934280 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1789065969
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45
=pc L0%0%1_L0%0%1 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1131491977
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45 nodece_path
=pc L0%0%1_L0%0%1 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 45 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.1
1 : 1 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1131491977
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46
=pc L0%0%1_L0%0%1 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1827092061
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46 nodece_path
=pc L0%0%1_L0%0%1 nodece 46 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 46 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1827092061
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47
=pc L0%0%1_L0%0%1 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 39 , m_adder -> 147)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 39 , m_adder -> 147)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
680162919
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47 nodece_path
=pc L0%0%1_L0%0%1 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 47 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 39 , m_adder -> 147)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 39 , m_adder -> 147)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
680162919
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48
=pc L0%0%1_L0%0%1 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1973914398
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48 nodece_path
=pc L0%0%1_L0%0%1 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 48 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1973914398
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49
=pc L0%0%1_L0%0%1 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
968890371
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49 nodece_path
=pc L0%0%1_L0%0%1 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 49 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
968890371
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50
=pc L0%0%1_L0%0%1 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 228 , m_adder -> 180)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 228 , m_adder -> 180)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3079095391
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50 nodece_path
=pc L0%0%1_L0%0%1 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 50 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 228 , m_adder -> 180)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 228 , m_adder -> 180)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3079095391
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51
=pc L0%0%1_L0%0%1 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1128228875
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51 nodece_path
=pc L0%0%1_L0%0%1 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 51 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1128228875
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52
=pc L0%0%1_L0%0%1 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1445546413
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52 nodece_path
=pc L0%0%1_L0%0%1 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 52 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.2
1 : 1 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1445546413
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53
=pc L0%0%1_L0%0%1 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 234 , m_adder -> 202)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 234 , m_adder -> 202)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
474135692
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53 nodece_path
=pc L0%0%1_L0%0%1 nodece 53 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 53 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 234 , m_adder -> 202)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 234 , m_adder -> 202)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
474135692
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54
=pc L0%0%1_L0%0%1 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1233983202
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54 nodece_path
=pc L0%0%1_L0%0%1 nodece 54 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 54 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.3
1 : 1 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1233983202
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55
=pc L0%0%1_L0%0%1 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
789373855
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55 nodece_path
=pc L0%0%1_L0%0%1 nodece 55 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 55 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
789373855
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56
=pc L0%0%1_L0%0%1 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 250 , m_adder -> 78)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 250 , m_adder -> 78)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2616387411
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56 nodece_path
=pc L0%0%1_L0%0%1 nodece 56 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 56 nodece_cached_counterexample
=counter_example_begin
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 250 , m_adder -> 78)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 250 , m_adder -> 78)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2616387411
=counter_example_end
=counterexamples at pc Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 2147450879 ) -> 0, ( 2147450876 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 2
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
155324914
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 2147450879 ) -> 255, ( 2147450876 ) -> 255, ( 2147450878 ) -> 255, ( 2147450877 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
155324914
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 3
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 252 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 252 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2391950680
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 252 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 2147450879 ) -> 128, ( 2147450876 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 252 , m_adder -> 42)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2391950680
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 4
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1359512183
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1359512183
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 5
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 241 , m_adder -> 54)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 241 , m_adder -> 54)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3955370291
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 241 , m_adder -> 54)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 2147450879 ) -> 0, ( 2147450876 ) -> 0, ( 2147450878 ) -> 0, ( 2147450877 ) -> 0, () -> (RAC: m_multiplier -> 241 , m_adder -> 54)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3955370291
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 6
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1884167637
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319992 ) -> 2, ( 180952 ) -> 12, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1884167637
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 7
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1473442062
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180952 ) -> 255, ( 180953 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.0
1 : 511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1473442062
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 8
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1070575321
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 4294967295 { -1 } : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1070575321
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 9
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 31 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
882160379
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 180948 ) -> 31, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 31 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
882160379
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 10
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
739273303
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (( 319988 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
739273303
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 11
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
402903177
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
402903177
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 12
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1665204916
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1665204916
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 13
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1353436873
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1353436873
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 14
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1983228458
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1983228458
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 15
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 20)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 238 , m_adder -> 20)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3615671681
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 20)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 238 , m_adder -> 20)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3615671681
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 16
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 20)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 238 , m_adder -> 20)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3615671681
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127988 : BV:32
=input.dst.exreg.0.1
1 : 2899375384 { -1395591912 } : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 1 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 180948 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%0
1 : 3066616556 { -1228350740 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 4127726124 { -167241172 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 319988 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127988 : BV:32
=input.src.llvm-%arrayidx
1 : 319988 : BV:32
=input.src.llvm-mem
1 : (( 319999 ) -> 29, ( 319992 ) -> 24, ( 319993 ) -> 245, ( 319994 ) -> 208, ( 319995 ) -> 172, ( 319996 ) -> 136, ( 319998 ) -> 65, ( 319997 ) -> 101, () -> (RAC: m_multiplier -> 238 , m_adder -> 20)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 31998 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31996 : BV:32
=input.dst.mem
1 : (( 319999 ) -> 29, ( 319992 ) -> 24, ( 319993 ) -> 245, ( 319994 ) -> 208, ( 319995 ) -> 172, ( 319996 ) -> 136, ( 319998 ) -> 65, ( 319997 ) -> 101, [ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 238 , m_adder -> 20)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 180948 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127988 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127988 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127992 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127988 : BV:32
=input.src.llvm-%arrayidx3
1 : 319992 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 2899375384 { -1395591912 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 319992 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127992 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3615671681
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 17
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65540 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2033261900
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65532 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 118492 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16382 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 16382 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 257532 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 65532 : BV:32
=input.src.llvm-%arrayidx
1 : 257532 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 16384 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 16382 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 118492 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 65532 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 65532 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 65532 : BV:32
=input.src.llvm-%arrayidx3
1 : 257536 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 257536 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 65536 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2033261900
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 18
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32772 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495375861
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32764 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 85724 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8190 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 8190 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 224764 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 32764 : BV:32
=input.src.llvm-%arrayidx
1 : 224764 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 8192 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 8190 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 85724 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 32764 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 32764 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 32764 : BV:32
=input.src.llvm-%arrayidx3
1 : 224768 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 224768 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 32768 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495375861
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 19
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16388 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1322710936
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16380 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 69340 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4094 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 4094 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 208380 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 16380 : BV:32
=input.src.llvm-%arrayidx
1 : 208380 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 4096 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 4094 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 69340 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 16380 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 16380 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 16380 : BV:32
=input.src.llvm-%arrayidx3
1 : 208384 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 208384 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 16384 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1322710936
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 20
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8196 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
553918865
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8188 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 61148 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2046 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 2046 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 200188 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 8188 : BV:32
=input.src.llvm-%arrayidx
1 : 200188 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 2048 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 2046 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 61148 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 8188 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 8188 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 8188 : BV:32
=input.src.llvm-%arrayidx3
1 : 200192 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 200192 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 8192 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
553918865
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 21
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4100 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
955798986
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4092 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 57052 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1022 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 1022 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 196092 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 4092 : BV:32
=input.src.llvm-%arrayidx
1 : 196092 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 1024 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 1022 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 57052 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 4092 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 4092 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 4092 : BV:32
=input.src.llvm-%arrayidx3
1 : 196096 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 196096 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 4096 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
955798986
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 22
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2052 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1369520631
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2044 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 55004 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 510 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 510 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 194044 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 2044 : BV:32
=input.src.llvm-%arrayidx
1 : 194044 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 512 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 510 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 55004 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 2044 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 2044 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 2044 : BV:32
=input.src.llvm-%arrayidx3
1 : 194048 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 194048 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 2048 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1369520631
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 23
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1028 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
926440376
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1020 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 53980 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 254 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 254 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 193020 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 1020 : BV:32
=input.src.llvm-%arrayidx
1 : 193020 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 256 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 254 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 53980 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 1020 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 1020 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 1020 : BV:32
=input.src.llvm-%arrayidx3
1 : 193024 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 193024 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 1024 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
926440376
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 24
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 516 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
689710555
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 508 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 53468 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 126 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 126 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 192508 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 508 : BV:32
=input.src.llvm-%arrayidx
1 : 192508 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 128 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 126 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 53468 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 508 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 508 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 508 : BV:32
=input.src.llvm-%arrayidx3
1 : 192512 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 192512 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 512 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
689710555
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 25
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 260 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
913454833
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 252 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 53212 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 62 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 62 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 192252 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 252 : BV:32
=input.src.llvm-%arrayidx
1 : 192252 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 64 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 62 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 53212 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 252 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 252 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 252 : BV:32
=input.src.llvm-%arrayidx3
1 : 192256 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 192256 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 256 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
913454833
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 26
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 132 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
639854683
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 124 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 53084 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 30 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 30 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 192124 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 124 : BV:32
=input.src.llvm-%arrayidx
1 : 192124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 32 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 30 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 53084 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 124 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 124 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 124 : BV:32
=input.src.llvm-%arrayidx3
1 : 192128 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 192128 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 128 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
639854683
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 27
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 68 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1657262432
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 60 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 53020 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 14 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 14 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 192060 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%arrayidx
1 : 192060 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 16 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 14 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 53020 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%arrayidx3
1 : 192064 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 192064 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 64 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1657262432
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 28
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 36 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
739068399
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 28 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 52988 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 6 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 6 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 192028 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%arrayidx
1 : 192028 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 8 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 6 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 52988 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%arrayidx3
1 : 192032 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 192032 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
739068399
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 29
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
660343702
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 12 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 52972 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 2 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 192012 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx
1 : 192012 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 4 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 2 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 52972 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx3
1 : 192016 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 192016 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
660343702
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 30
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
660343702
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 1 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=input.src.llvm-%arrayidx1
1 : 52964 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 192004 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 4 : BV:32
=input.src.llvm-%arrayidx
1 : 192004 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 2 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 52964 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 4 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 4 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 8 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 4 : BV:32
=input.src.llvm-%arrayidx3
1 : 192008 : BV:32
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 192008 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 8 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
660343702
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 31
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1653265587
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1653265587
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 32
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
674062382
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
674062382
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 33
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 50 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 50 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3274192948
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147450876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 192000 : BV:32
=symbol.2
1 : 52960 : BV:32
=dst_symbol_addr.1
1 : 192000 : BV:32
=dst_symbol_addr.2
1 : 52960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2146996224 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147450876 : BV:32
=input.dst.esp.L0%1%1
1 : 2147450876 : BV:32
=memlabel-mem-esp_begin
1 : 454656 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 319999 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 50 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : ([ 454656; 2147450879 ] -> 0, () -> (RAC: m_multiplier -> 50 , m_adder -> 122)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2147450879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 52960 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 192000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 180959 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3274192948
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 34
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1006071125
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1006071125
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 35
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1006071125
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127988 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 1 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236442116 { -1058525180 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3208916992 { -1086050304 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 12845056 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222806516 { -1072160780 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127988 : BV:32
=input.src.llvm-%arrayidx
1 : 3222806516 { -1072160780 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 31998 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31996 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236442116 { -1058525180 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127988 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127988 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127992 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127988 : BV:32
=input.src.llvm-%arrayidx3
1 : 3222806520 { -1072160776 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222806520 { -1072160776 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127992 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1006071125
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 36
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
361261451
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294692860 { -274436 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 28128 : BV:32
=symbol.2
1 : 4294836288 { -131008 } : BV:32
=dst_symbol_addr.1
1 : 28128 : BV:32
=dst_symbol_addr.2
1 : 4294836288 { -131008 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4294471680 { -495616 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294692860 { -274436 } : BV:32
=memlabel-mem-esp_begin
1 : 221184 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 156127 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294836288 { -131008 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 28128 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294964287 { -3009 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
361261451
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 37
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 64 , m_adder -> 67)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 64 , m_adder -> 67)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2265343901
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 64 , m_adder -> 67)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 64 , m_adder -> 67)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2265343901
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 38
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 33440144 : BV:32
=symbol.2
1 : 18650544 : BV:32
=dst_symbol_addr.1
1 : 33440144 : BV:32
=dst_symbol_addr.2
1 : 18650544 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4194828288 { -100139008 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4229832700 { -65134596 } : BV:32
=memlabel-mem-esp_begin
1 : 35004416 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 33568143 : BV:32
=input.src.llvm-mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4229832703 { -65134593 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 18650544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 33440144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 18778543 : BV:32
=commonMEM.nonstack.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 544208 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2085331055
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4229832700 { -65134596 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 33440144 : BV:32
=symbol.2
1 : 18650544 : BV:32
=dst_symbol_addr.1
1 : 33440144 : BV:32
=dst_symbol_addr.2
1 : 18650544 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4194828288 { -100139008 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4229832700 { -65134596 } : BV:32
=input.dst.esp.L0%1%1
1 : 4229832700 { -65134596 } : BV:32
=memlabel-mem-esp_begin
1 : 35004416 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 33568143 : BV:32
=input.src.llvm-mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4229832703 { -65134593 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 18650544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 33440144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 18778543 : BV:32
=commonMEM.nonstack.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 544208 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2085331055
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 39
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 33440144 : BV:32
=symbol.2
1 : 18650544 : BV:32
=dst_symbol_addr.1
1 : 33440144 : BV:32
=dst_symbol_addr.2
1 : 18650544 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4194828288 { -100139008 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4229832700 { -65134596 } : BV:32
=memlabel-mem-esp_begin
1 : 35004416 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 33568143 : BV:32
=input.src.llvm-mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4229832703 { -65134593 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 18650544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 33440144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 18778543 : BV:32
=commonMEM.nonstack.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 544208 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2085331055
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127988 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4229832700 { -65134596 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 1 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 33440144 : BV:32
=symbol.2
1 : 18650544 : BV:32
=dst_symbol_addr.1
1 : 33440144 : BV:32
=dst_symbol_addr.2
1 : 18650544 : BV:32
=input.src.llvm-%arrayidx1
1 : 18778532 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4194828288 { -100139008 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4229832700 { -65134596 } : BV:32
=input.dst.esp.L0%1%1
1 : 4229832700 { -65134596 } : BV:32
=memlabel-mem-esp_begin
1 : 35004416 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 33568143 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 33568132 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127988 : BV:32
=input.src.llvm-%arrayidx
1 : 33568132 : BV:32
=input.src.llvm-mem
1 : (( 33568138 ) -> 0, ( 33568142 ) -> 8, ( 33568140 ) -> 208, ( 33568141 ) -> 77, ( 33568137 ) -> 0, ( 33568136 ) -> 0, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 31998 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31996 : BV:32
=input.dst.mem
1 : (( 33568138 ) -> 0, ( 33568142 ) -> 8, ( 33568140 ) -> 208, ( 33568141 ) -> 77, ( 33568137 ) -> 0, ( 33568136 ) -> 0, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 18778532 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127988 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127988 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127992 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127988 : BV:32
=input.src.llvm-%arrayidx3
1 : 33568136 : BV:32
=memlabel-mem-esp_end
1 : 4229832703 { -65134593 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 18650544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 33440144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 18778543 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 33568136 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127992 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 33568138 ) -> 8, ( 33568137 ) -> 77, ( 33568136 ) -> 208, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 544208 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2085331055
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 40
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3883797504 { -411169792 } : BV:32
=symbol.2
1 : 3883925504 { -411041792 } : BV:32
=dst_symbol_addr.1
1 : 3883797504 { -411169792 } : BV:32
=dst_symbol_addr.2
1 : 3883925504 { -411041792 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3881025536 { -413941760 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3881025532 { -413941764 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3883925503 { -411041793 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3881025535 { -413941761 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3883925504 { -411041792 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3883797504 { -411169792 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3884053503 { -410913793 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1182595892
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3881025532 { -413941764 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3883797504 { -411169792 } : BV:32
=symbol.2
1 : 3883925504 { -411041792 } : BV:32
=dst_symbol_addr.1
1 : 3883797504 { -411169792 } : BV:32
=dst_symbol_addr.2
1 : 3883925504 { -411041792 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3881025536 { -413941760 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3881025532 { -413941764 } : BV:32
=input.dst.esp.L0%1%1
1 : 3881025532 { -413941764 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3883925503 { -411041793 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3881025535 { -413941761 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3883925504 { -411041792 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3883797504 { -411169792 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3884053503 { -410913793 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1182595892
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 41
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
112526508
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4291821564 { -3145732 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.dst.esp.L0%1%1
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 4291821566 ) -> 255, ( 4291821565 ) -> 255, ( 4291821567 ) -> 255, ( 4291821564 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
112526508
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 42
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 253 , m_adder -> 250)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 253 , m_adder -> 250)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3277036777
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 637536256 : BV:32
=symbol.2
1 : 268308480 : BV:32
=dst_symbol_addr.1
1 : 637536256 : BV:32
=dst_symbol_addr.2
1 : 268308480 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 637664255 : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 253 , m_adder -> 250)) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 4294967295 ) -> 128, ( 4294967292 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 253 , m_adder -> 250)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 268308480 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 637536256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 268436479 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3277036777
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 43
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4294706576 { -260720 } : BV:32
=symbol.2
1 : 4294532192 { -435104 } : BV:32
=dst_symbol_addr.1
1 : 4294706576 { -260720 } : BV:32
=dst_symbol_addr.2
1 : 4294532192 { -435104 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4294529024 { -438272 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294529020 { -438276 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294834575 { -132721 } : BV:32
=input.src.llvm-mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294529023 { -438273 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294532192 { -435104 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294706576 { -260720 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294660191 { -307105 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1731812679
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294529020 { -438276 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 4294706576 { -260720 } : BV:32
=symbol.2
1 : 4294532192 { -435104 } : BV:32
=dst_symbol_addr.1
1 : 4294706576 { -260720 } : BV:32
=dst_symbol_addr.2
1 : 4294532192 { -435104 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4294529024 { -438272 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294529020 { -438276 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294529020 { -438276 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294834575 { -132721 } : BV:32
=input.src.llvm-mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294529023 { -438273 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294532192 { -435104 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294706576 { -260720 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294660191 { -307105 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294834568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1731812679
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 44
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3235265552 { -1059701744 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3235265552 { -1059701744 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3216257024 { -1078710272 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 5505024 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3235265552 { -1059701744 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3235393551 { -1059573745 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
617409831
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3235265552 { -1059701744 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3235265552 { -1059701744 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3216257024 { -1078710272 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 5505024 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3235265552 { -1059701744 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3235393551 { -1059573745 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3222806516 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
617409831
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 45
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 4292770768 { -2196528 } : BV:32
=symbol.2
1 : 950272 : BV:32
=dst_symbol_addr.1
1 : 4292770768 { -2196528 } : BV:32
=dst_symbol_addr.2
1 : 950272 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4290854912 { -4112384 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292706300 { -2260996 } : BV:32
=memlabel-mem-esp_begin
1 : 1851392 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4292898767 { -2068529 } : BV:32
=input.src.llvm-mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4292706303 { -2260993 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 950272 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292770768 { -2196528 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1078271 : BV:32
=commonMEM.nonstack.mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 50528259 : BV:32
=unaliased_memslot.0
1 : 50528257 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1539847451
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4292706300 { -2260996 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 4292770768 { -2196528 } : BV:32
=symbol.2
1 : 950272 : BV:32
=dst_symbol_addr.1
1 : 4292770768 { -2196528 } : BV:32
=dst_symbol_addr.2
1 : 950272 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4290854912 { -4112384 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292706300 { -2260996 } : BV:32
=input.dst.esp.L0%1%1
1 : 4292706300 { -2260996 } : BV:32
=memlabel-mem-esp_begin
1 : 1851392 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4292898767 { -2068529 } : BV:32
=input.src.llvm-mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 4292706302 ) -> 0, ( 4292706301 ) -> 0, ( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, ( 4292706300 ) -> 0, ( 4292706303 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4292706303 { -2260993 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 950272 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292770768 { -2196528 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1078271 : BV:32
=commonMEM.nonstack.mem
1 : (( 1078264 ) -> 1, ( 1078261 ) -> 0, ( 1078265 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 50528259 : BV:32
=unaliased_memslot.0
1 : 50528257 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1539847451
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 46
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
643520498
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
643520498
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 47
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
643520498
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127988 : BV:32
=input.dst.exreg.0.1
1 : 1 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 1 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3222678528 { -1072288768 } : BV:32
=symbol.2
1 : 3236314128 { -1058653168 } : BV:32
=dst_symbol_addr.1
1 : 3222678528 { -1072288768 } : BV:32
=dst_symbol_addr.2
1 : 3236314128 { -1058653168 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3236442116 { -1058525180 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217174528 { -1077792768 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221762044 { -1073205252 } : BV:32
=input.dst.esp.L0%1%1
1 : 3221762044 { -1073205252 } : BV:32
=memlabel-mem-esp_begin
1 : 4587520 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3222806527 { -1072160769 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 1 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 3222806516 { -1072160780 } : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 127988 : BV:32
=input.src.llvm-%arrayidx
1 : 3222806516 { -1072160780 } : BV:32
=input.src.llvm-mem
1 : (( 3222806520 ) -> 1, ( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 31998 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 31996 : BV:32
=input.dst.mem
1 : (( 3222806520 ) -> 1, ( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3236442116 { -1058525180 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 127988 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 127988 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 127992 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 127988 : BV:32
=input.src.llvm-%arrayidx3
1 : 3222806520 { -1072160776 } : BV:32
=memlabel-mem-esp_end
1 : 3221762047 { -1073205249 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3236314128 { -1058653168 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3222678528 { -1072288768 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3236442127 { -1058525169 } : BV:32
=input.src.llvm-%add
1 : 1 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 3222806520 { -1072160776 } : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 127992 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (( 3236442116 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
643520498
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 48
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1131491977
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 1 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1131491977
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 49
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1973914398
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1973914398
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 50
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1128228875
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.4
1 : 4291821564 { -3145732 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.1
1 : 1593790448 : BV:32
=symbol.2
1 : 13520320 : BV:32
=dst_symbol_addr.1
1 : 1593790448 : BV:32
=dst_symbol_addr.2
1 : 13520320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2250182656 { -2044784640 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4291821564 { -3145732 } : BV:32
=input.dst.esp.L0%1%1
1 : 4291821564 { -3145732 } : BV:32
=memlabel-mem-esp_begin
1 : 2041638912 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1593918447 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4291821567 { -3145729 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 13520320 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1593790448 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 13648319 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1128228875
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 51
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1233983202
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 2 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 31998 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.7 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 127996 : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127996 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=symbol.1
1 : 3236834304 { -1058132992 } : BV:32
=symbol.2
1 : 3298704400 { -996262896 } : BV:32
=dst_symbol_addr.1
1 : 3236834304 { -1058132992 } : BV:32
=dst_symbol_addr.2
1 : 3298704400 { -996262896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=stack.size
1 : 3217305600 { -1077661696 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31998 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227004924 { -1067962372 } : BV:32
=input.dst.esp.L0%1%1
1 : 3227004924 { -1067962372 } : BV:32
=memlabel-mem-esp_begin
1 : 9699328 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 31998 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3236962303 { -1058004993 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3227004927 { -1067962369 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3298704400 { -996262896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3236834304 { -1058132992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3298832399 { -996134897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1233983202
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 52
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65540 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4260855804 { -34111492 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 343728 : BV:32
=symbol.2
1 : 4294180864 { -786432 } : BV:32
=dst_symbol_addr.1
1 : 343728 : BV:32
=dst_symbol_addr.2
1 : 4294180864 { -786432 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4243681280 { -51286016 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4260855804 { -34111492 } : BV:32
=input.dst.esp.L0%1%1
1 : 4260855804 { -34111492 } : BV:32
=memlabel-mem-esp_begin
1 : 17174528 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 471727 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4260855807 { -34111489 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294180864 { -786432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 343728 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294308863 { -658433 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2066612981
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65532 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4260855804 { -34111492 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 343728 : BV:32
=symbol.2
1 : 4294180864 { -786432 } : BV:32
=dst_symbol_addr.1
1 : 343728 : BV:32
=dst_symbol_addr.2
1 : 4294180864 { -786432 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4294246396 { -720900 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4243681280 { -51286016 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16382 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4260855804 { -34111492 } : BV:32
=input.dst.esp.L0%1%1
1 : 4260855804 { -34111492 } : BV:32
=memlabel-mem-esp_begin
1 : 17174528 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 16382 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 471727 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 409260 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 65532 : BV:32
=input.src.llvm-%arrayidx
1 : 409260 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 16384 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 16382 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4294246396 { -720900 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 65532 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 65532 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 65536 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 65532 : BV:32
=input.src.llvm-%arrayidx3
1 : 409264 : BV:32
=memlabel-mem-esp_end
1 : 4260855807 { -34111489 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294180864 { -786432 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 343728 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4294308863 { -658433 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 409264 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 65536 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2066612981
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 53
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32772 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3757813756 { -537153540 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 98304 : BV:32
=symbol.2
1 : 3131031440 { -1163935856 } : BV:32
=dst_symbol_addr.1
1 : 98304 : BV:32
=dst_symbol_addr.2
1 : 3131031440 { -1163935856 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 536354816 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3757813756 { -537153540 } : BV:32
=input.dst.esp.L0%1%1
1 : 3757813756 { -537153540 } : BV:32
=memlabel-mem-esp_begin
1 : 3221458944 { -1073508352 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 226303 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3757813759 { -537153537 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3131031440 { -1163935856 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 98304 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3131159439 { -1163807857 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
470949153
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32764 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3757813756 { -537153540 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 98304 : BV:32
=symbol.2
1 : 3131031440 { -1163935856 } : BV:32
=dst_symbol_addr.1
1 : 98304 : BV:32
=dst_symbol_addr.2
1 : 3131031440 { -1163935856 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3131064204 { -1163903092 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 536354816 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8190 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3757813756 { -537153540 } : BV:32
=input.dst.esp.L0%1%1
1 : 3757813756 { -537153540 } : BV:32
=memlabel-mem-esp_begin
1 : 3221458944 { -1073508352 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 8190 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 226303 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 131068 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 32764 : BV:32
=input.src.llvm-%arrayidx
1 : 131068 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 8192 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 8190 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3131064204 { -1163903092 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 32764 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 32764 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 32768 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 32764 : BV:32
=input.src.llvm-%arrayidx3
1 : 131072 : BV:32
=memlabel-mem-esp_end
1 : 3757813759 { -537153537 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3131031440 { -1163935856 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 98304 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3131159439 { -1163807857 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 131072 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 32768 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
470949153
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 54
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16388 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294443004 { -524292 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 2046976 : BV:32
=symbol.2
1 : 72304 : BV:32
=dst_symbol_addr.1
1 : 2046976 : BV:32
=dst_symbol_addr.2
1 : 72304 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4291260416 { -3706880 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294443004 { -524292 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294443004 { -524292 } : BV:32
=memlabel-mem-esp_begin
1 : 3182592 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2174975 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294443007 { -524289 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 72304 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2046976 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 200303 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1517358825
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16380 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294443004 { -524292 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 2046976 : BV:32
=symbol.2
1 : 72304 : BV:32
=dst_symbol_addr.1
1 : 2046976 : BV:32
=dst_symbol_addr.2
1 : 72304 : BV:32
=input.src.llvm-%arrayidx1
1 : 88684 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4291260416 { -3706880 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4094 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294443004 { -524292 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294443004 { -524292 } : BV:32
=memlabel-mem-esp_begin
1 : 3182592 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 4094 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2174975 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 2063356 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 16380 : BV:32
=input.src.llvm-%arrayidx
1 : 2063356 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 4096 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 4094 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 88684 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 16380 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 16380 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 16384 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 16380 : BV:32
=input.src.llvm-%arrayidx3
1 : 2063360 : BV:32
=memlabel-mem-esp_end
1 : 4294443007 { -524289 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 72304 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2046976 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 200303 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 2063360 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 16384 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1517358825
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 55
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8196 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1769471996 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 8445952 : BV:32
=symbol.2
1 : 1616903856 : BV:32
=dst_symbol_addr.1
1 : 8445952 : BV:32
=dst_symbol_addr.2
1 : 1616903856 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 117444608 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1769471996 : BV:32
=input.dst.esp.L0%1%1
1 : 1769471996 : BV:32
=memlabel-mem-esp_begin
1 : 1652027392 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 8573951 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1769471999 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1616903856 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 8445952 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1617031855 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1831588723
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8188 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1769471996 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 8445952 : BV:32
=symbol.2
1 : 1616903856 : BV:32
=dst_symbol_addr.1
1 : 8445952 : BV:32
=dst_symbol_addr.2
1 : 1616903856 : BV:32
=input.src.llvm-%arrayidx1
1 : 1616912044 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 117444608 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2046 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1769471996 : BV:32
=input.dst.esp.L0%1%1
1 : 1769471996 : BV:32
=memlabel-mem-esp_begin
1 : 1652027392 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 2046 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 8573951 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 8454140 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 8188 : BV:32
=input.src.llvm-%arrayidx
1 : 8454140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 2048 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 2046 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 1616912044 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 8188 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 8188 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 8192 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 8188 : BV:32
=input.src.llvm-%arrayidx3
1 : 8454144 : BV:32
=memlabel-mem-esp_end
1 : 1769471999 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1616903856 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 8445952 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1617031855 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 8454144 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 8192 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1831588723
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 56
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4100 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2549985276 { -1744982020 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 150883536 : BV:32
=symbol.2
1 : 3221160400 { -1073806896 } : BV:32
=dst_symbol_addr.1
1 : 150883536 : BV:32
=dst_symbol_addr.2
1 : 3221160400 { -1073806896 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2398937088 { -1896030208 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2549985276 { -1744982020 } : BV:32
=input.dst.esp.L0%1%1
1 : 2549985276 { -1744982020 } : BV:32
=memlabel-mem-esp_begin
1 : 151048192 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 151011535 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 2549985279 { -1744982017 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221160400 { -1073806896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 150883536 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221288399 { -1073678897 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1770479279
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4092 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2549985276 { -1744982020 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 150883536 : BV:32
=symbol.2
1 : 3221160400 { -1073806896 } : BV:32
=dst_symbol_addr.1
1 : 150883536 : BV:32
=dst_symbol_addr.2
1 : 3221160400 { -1073806896 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3221164492 { -1073802804 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2398937088 { -1896030208 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1022 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2549985276 { -1744982020 } : BV:32
=input.dst.esp.L0%1%1
1 : 2549985276 { -1744982020 } : BV:32
=memlabel-mem-esp_begin
1 : 151048192 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 1022 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 151011535 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 150887628 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 4092 : BV:32
=input.src.llvm-%arrayidx
1 : 150887628 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 1024 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 1022 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3221164492 { -1073802804 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 4092 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 4092 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 4096 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 4092 : BV:32
=input.src.llvm-%arrayidx3
1 : 150887632 : BV:32
=memlabel-mem-esp_end
1 : 2549985279 { -1744982017 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221160400 { -1073806896 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 150883536 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221288399 { -1073678897 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 150887632 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 4096 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1770479279
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 57
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2052 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4269342716 { -25624580 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 20976432 : BV:32
=symbol.2
1 : 4192256 : BV:32
=dst_symbol_addr.1
1 : 20976432 : BV:32
=dst_symbol_addr.2
1 : 4192256 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4000903168 { -294064128 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4269342716 { -25624580 } : BV:32
=input.dst.esp.L0%1%1
1 : 4269342716 { -25624580 } : BV:32
=memlabel-mem-esp_begin
1 : 268439552 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 21104431 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4269342719 { -25624577 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4192256 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 20976432 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4320255 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
998126997
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2044 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4269342716 { -25624580 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 20976432 : BV:32
=symbol.2
1 : 4192256 : BV:32
=dst_symbol_addr.1
1 : 20976432 : BV:32
=dst_symbol_addr.2
1 : 4192256 : BV:32
=input.src.llvm-%arrayidx1
1 : 4194300 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4000903168 { -294064128 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 510 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4269342716 { -25624580 } : BV:32
=input.dst.esp.L0%1%1
1 : 4269342716 { -25624580 } : BV:32
=memlabel-mem-esp_begin
1 : 268439552 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 510 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 21104431 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 20978476 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 2044 : BV:32
=input.src.llvm-%arrayidx
1 : 20978476 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 512 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 510 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4194300 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 2044 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 2044 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 2048 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 2044 : BV:32
=input.src.llvm-%arrayidx3
1 : 20978480 : BV:32
=memlabel-mem-esp_end
1 : 4269342719 { -25624577 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4192256 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 20976432 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4320255 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 20978480 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 2048 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
998126997
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 58
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1028 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 3648 : BV:32
=symbol.2
1 : 898847392 : BV:32
=dst_symbol_addr.1
1 : 3648 : BV:32
=dst_symbol_addr.2
1 : 898847392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147348480 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147618816 { -2147348480 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 131647 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 898847392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3648 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 898975391 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1114198673
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1020 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 3648 : BV:32
=symbol.2
1 : 898847392 : BV:32
=dst_symbol_addr.1
1 : 3648 : BV:32
=dst_symbol_addr.2
1 : 898847392 : BV:32
=input.src.llvm-%arrayidx1
1 : 898848412 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147348480 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 254 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147618816 { -2147348480 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 254 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 131647 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 4668 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 1020 : BV:32
=input.src.llvm-%arrayidx
1 : 4668 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 256 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 254 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 898848412 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 1020 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 1020 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 1024 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 1020 : BV:32
=input.src.llvm-%arrayidx3
1 : 4672 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 898847392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3648 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 898975391 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 4672 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 1024 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1114198673
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 59
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 516 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294955004 { -12292 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 248048 : BV:32
=symbol.2
1 : 32256 : BV:32
=dst_symbol_addr.1
1 : 248048 : BV:32
=dst_symbol_addr.2
1 : 32256 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4294578176 { -389120 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294955004 { -12292 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294955004 { -12292 } : BV:32
=memlabel-mem-esp_begin
1 : 376832 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 376047 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294955007 { -12289 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 32256 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 248048 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 160255 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
985072486
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 508 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294955004 { -12292 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 248048 : BV:32
=symbol.2
1 : 32256 : BV:32
=dst_symbol_addr.1
1 : 248048 : BV:32
=dst_symbol_addr.2
1 : 32256 : BV:32
=input.src.llvm-%arrayidx1
1 : 32764 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4294578176 { -389120 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 126 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294955004 { -12292 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294955004 { -12292 } : BV:32
=memlabel-mem-esp_begin
1 : 376832 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 126 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 376047 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 248556 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 508 : BV:32
=input.src.llvm-%arrayidx
1 : 248556 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 128 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 126 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 32764 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 508 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 508 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 512 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 508 : BV:32
=input.src.llvm-%arrayidx3
1 : 248560 : BV:32
=memlabel-mem-esp_end
1 : 4294955007 { -12289 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 32256 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 248048 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 160255 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 248560 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 512 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
985072486
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 60
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 260 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1207578620 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 12000 : BV:32
=symbol.2
1 : 217988928 : BV:32
=dst_symbol_addr.1
1 : 12000 : BV:32
=dst_symbol_addr.2
1 : 217988928 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 133689344 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1207578620 : BV:32
=input.dst.esp.L0%1%1
1 : 1207578620 : BV:32
=memlabel-mem-esp_begin
1 : 1073889280 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 139999 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 1207578623 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 217988928 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 12000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 218116927 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
485463645
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 252 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1207578620 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 12000 : BV:32
=symbol.2
1 : 217988928 : BV:32
=dst_symbol_addr.1
1 : 12000 : BV:32
=dst_symbol_addr.2
1 : 217988928 : BV:32
=input.src.llvm-%arrayidx1
1 : 217989180 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 133689344 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 62 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1207578620 : BV:32
=input.dst.esp.L0%1%1
1 : 1207578620 : BV:32
=memlabel-mem-esp_begin
1 : 1073889280 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 62 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 139999 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 12252 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 252 : BV:32
=input.src.llvm-%arrayidx
1 : 12252 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 64 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 62 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 217989180 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 252 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 252 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 256 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 252 : BV:32
=input.src.llvm-%arrayidx3
1 : 12256 : BV:32
=memlabel-mem-esp_end
1 : 1207578623 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 217988928 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 12000 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 218116927 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 12256 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 256 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
485463645
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 61
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 132 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3898572796 { -396394500 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 24838016 : BV:32
=symbol.2
1 : 3504177024 { -790790272 } : BV:32
=dst_symbol_addr.1
1 : 24838016 : BV:32
=dst_symbol_addr.2
1 : 3504177024 { -790790272 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 193064960 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3898572796 { -396394500 } : BV:32
=input.dst.esp.L0%1%1
1 : 3898572796 { -396394500 } : BV:32
=memlabel-mem-esp_begin
1 : 3705507840 { -589459456 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 24966015 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 3898572799 { -396394497 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3504177024 { -790790272 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 24838016 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3504305023 { -790662273 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
548509401
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 124 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3898572796 { -396394500 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 24838016 : BV:32
=symbol.2
1 : 3504177024 { -790790272 } : BV:32
=dst_symbol_addr.1
1 : 24838016 : BV:32
=dst_symbol_addr.2
1 : 3504177024 { -790790272 } : BV:32
=input.src.llvm-%arrayidx1
1 : 3504177148 { -790790148 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 193064960 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 30 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3898572796 { -396394500 } : BV:32
=input.dst.esp.L0%1%1
1 : 3898572796 { -396394500 } : BV:32
=memlabel-mem-esp_begin
1 : 3705507840 { -589459456 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 30 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 24966015 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 24838140 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 124 : BV:32
=input.src.llvm-%arrayidx
1 : 24838140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 32 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 30 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 3504177148 { -790790148 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 124 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 124 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 128 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 124 : BV:32
=input.src.llvm-%arrayidx3
1 : 24838144 : BV:32
=memlabel-mem-esp_end
1 : 3898572799 { -396394497 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3504177024 { -790790272 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 24838016 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3504305023 { -790662273 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 24838144 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 128 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
548509401
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 62
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 68 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 1056288 : BV:32
=symbol.2
1 : 1076620864 : BV:32
=dst_symbol_addr.1
1 : 1056288 : BV:32
=dst_symbol_addr.2
1 : 1076620864 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3211788288 { -1083179008 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 1083179008 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1184287 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1076620864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1056288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1076748863 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1211422206
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 60 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 1056288 : BV:32
=symbol.2
1 : 1076620864 : BV:32
=dst_symbol_addr.1
1 : 1056288 : BV:32
=dst_symbol_addr.2
1 : 1076620864 : BV:32
=input.src.llvm-%arrayidx1
1 : 1076620924 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 3211788288 { -1083179008 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 14 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 1083179008 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 14 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1184287 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 1056348 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%arrayidx
1 : 1056348 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 16 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 14 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 1076620924 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 60 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 64 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 60 : BV:32
=input.src.llvm-%arrayidx3
1 : 1056352 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1076620864 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1056288 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1076748863 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 1056352 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 64 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1211422206
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 63
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 36 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 148016864 : BV:32
=symbol.2
1 : 1971716176 : BV:32
=dst_symbol_addr.1
1 : 148016864 : BV:32
=dst_symbol_addr.2
1 : 1971716176 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147303424 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147663872 { -2147303424 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 148144863 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1971716176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 148016864 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1971844175 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1275318627
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 28 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 148016864 : BV:32
=symbol.2
1 : 1971716176 : BV:32
=dst_symbol_addr.1
1 : 148016864 : BV:32
=dst_symbol_addr.2
1 : 1971716176 : BV:32
=input.src.llvm-%arrayidx1
1 : 1971716204 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 2147303424 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 6 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-esp_begin
1 : 2147663872 { -2147303424 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 6 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 148144863 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 148016892 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%arrayidx
1 : 148016892 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 8 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 6 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 1971716204 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 32 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%arrayidx3
1 : 148016896 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1971716176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 148016864 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1971844175 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 148016896 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 32 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1275318627
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 64
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4194275324 { -100691972 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 26112 : BV:32
=symbol.2
1 : 4199362240 { -95605056 } : BV:32
=dst_symbol_addr.1
1 : 26112 : BV:32
=dst_symbol_addr.2
1 : 4199362240 { -95605056 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4194078720 { -100888576 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4194275324 { -100691972 } : BV:32
=input.dst.esp.L0%1%1
1 : 4194275324 { -100691972 } : BV:32
=memlabel-mem-esp_begin
1 : 196608 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 154111 : BV:32
=input.src.llvm-callee-save.1
1 : 0 : BV:32
=input.src.llvm-callee-save.2
1 : 0 : BV:32
=input.src.llvm-callee-save.3
1 : 0 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4194275327 { -100691969 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4199362240 { -95605056 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 26112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4199490239 { -95477057 } : BV:32
=input.src.llvm-%hidden-reg
1 : 0 : BV:32
=input.src.llvm-callee-save.0
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1133126168
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 12 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4194275324 { -100691972 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 17 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 26112 : BV:32
=symbol.2
1 : 4199362240 { -95605056 } : BV:32
=dst_symbol_addr.1
1 : 26112 : BV:32
=dst_symbol_addr.2
1 : 4199362240 { -95605056 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4199362252 { -95605044 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4194078720 { -100888576 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4194275324 { -100691972 } : BV:32
=input.dst.esp.L0%1%1
1 : 4194275324 { -100691972 } : BV:32
=memlabel-mem-esp_begin
1 : 196608 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 2 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 154111 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 26124 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx
1 : 26124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 4 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 2 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4199362252 { -95605044 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 16 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%arrayidx3
1 : 26128 : BV:32
=memlabel-mem-esp_end
1 : 4194275327 { -100691969 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4199362240 { -95605056 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 26112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4199490239 { -95477057 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 26128 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 16 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1133126168
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 65
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 20 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4194275324 { -100691972 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.1
1 : 26112 : BV:32
=symbol.2
1 : 4199362240 { -95605056 } : BV:32
=dst_symbol_addr.1
1 : 26112 : BV:32
=dst_symbol_addr.2
1 : 4199362240 { -95605056 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4194078720 { -100888576 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4194275324 { -100691972 } : BV:32
=input.dst.esp.L0%1%1
1 : 4194275324 { -100691972 } : BV:32
=memlabel-mem-esp_begin
1 : 196608 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 154111 : BV:32
=input.src.llvm-callee-save.1
1 : 0 : BV:32
=input.src.llvm-callee-save.2
1 : 0 : BV:32
=input.src.llvm-callee-save.3
1 : 0 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_end
1 : 4194275327 { -100691969 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4199362240 { -95605056 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 26112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4199490239 { -95477057 } : BV:32
=input.src.llvm-%hidden-reg
1 : 0 : BV:32
=input.src.llvm-callee-save.0
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1133126168
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 2 delta 2
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.s112.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvadd(15, 19) : BV:32
=src.llvm-%add2
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 1 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(4, 9) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%dec
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 1 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(5, 10) : BV:32
12 : bvadd(1, 11) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s112.2 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 1 : BV:32
10 : bvadd(8, 9) : BV:32
11 : 4 : BV:32
12 : bvmul(10, 11) : BV:32
13 : bvadd(7, 12) : BV:32
14 : bvadd(3, 13) : BV:32
15 : mlvar.llvm.s112.0 : MEMLABEL
16 : bvmul(8, 11) : BV:32
17 : bvadd(7, 16) : BV:32
18 : bvadd(3, 17) : BV:32
19 : 4 : INT
20 : 0 : BOOL
21 : select(1, 15, 18, 19, 20) : BV:32
22 : mlvar.llvm.s112.1 : MEMLABEL
23 : symbol.2 : BV:32
24 : bvadd(23, 17) : BV:32
25 : select(1, 22, 24, 19, 20) : BV:32
26 : bvadd(21, 25) : BV:32
27 : store(1, 2, 14, 26, 19, 20) : ARRAY[BV:32 -> BV:8]
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32 : INT
6 : bvsign_ext(4, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 0 : BV:32
13 : eq(11, 12) : BOOL
14 : 4 : INT
15 : isindexforsize(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : isgepoffset(13, 11) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvadd(2, 12) : BV:32
14 : 4 : INT
15 : islangaligned(13, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.11
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !20)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !22)))*((((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !22)*  %add = add nsw i32 %0, %1, !dbg !23)*  %add2 = add nsw i32 %i.0, 1, !dbg !24)*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*(  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25*  %arrayidx3 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %add2, !dbg !25)))*((((  store i32 %add, i32* %arrayidx3, align 4, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*(((  %dec = add nsw i32 %i.0, -1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  %i.0 = phi i32 [ 31998, %entry ], [ %dec, %for.inc ], !dbg !15*  br label %for.cond, !dbg !29, !llvm.loop !30))*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30)))))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp sge i32 %i.0, 0, !dbg !17)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L5%1%1)*((L5%1%1=>L6%1%0)*(L6%1%0=>L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L5%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : mlvar.dst.0 : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : 1 : BV:64
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : bvmul(7, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(3, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(1, 6, 16, 17, 18) : BV:32
20 : 1 : INT
21 : bvzero_ext(19, 20) : BV:33
22 : mlvar.dst.1 : MEMLABEL
23 : bvmul(4, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(3, 24) : BV:32
26 : select(1, 22, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 20) : BV:33
28 : bvadd(21, 27) : BV:33
29 : bvextract(28, 9, 10) : BV:32
30 : store(1, 2, 5, 29, 17, 18) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.1 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551612 { -4 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.1 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : 4 : BV:32
98 : bvuge(7, 97) : BOOL
99 : not(98) : BOOL
100 : ite(99, 31, 33) : BV:1
101 : bvconcat(96, 100) : BV:32
102 : bvextract(101, 2, 36) : BV:27
103 : bvzero_ext(7, 3) : BV:33
104 : bvnot(97) : BV:32
105 : bvzero_ext(104, 3) : BV:33
106 : bvadd(103, 105) : BV:33
107 : bvconcat(77, 31) : BV:33
108 : bvadd(106, 107) : BV:33
109 : bvextract(108, 2, 10) : BV:32
110 : bvextract(109, 17, 17) : BV:1
111 : eq(110, 31) : BOOL
112 : bvextract(103, 17, 17) : BV:1
113 : eq(112, 31) : BOOL
114 : xor(111, 113) : BOOL
115 : ite(114, 31, 33) : BV:1
116 : bvextract(101, 45, 10) : BV:4
117 : bvconcat(115, 116) : BV:5
118 : bvconcat(102, 117) : BV:32
119 : bvextract(118, 2, 49) : BV:20
120 : bvextract(103, 2, 2) : BV:1
121 : eq(120, 31) : BOOL
122 : bvextract(105, 2, 2) : BV:1
123 : eq(122, 31) : BOOL
124 : iff(121, 123) : BOOL
125 : bvextract(103, 2, 10) : BV:32
126 : bvextract(105, 2, 10) : BV:32
127 : bvadd(125, 126) : BV:32
128 : 0 : BV:31
129 : bvconcat(128, 31) : BV:32
130 : bvadd(127, 129) : BV:32
131 : bvextract(130, 2, 2) : BV:1
132 : eq(131, 31) : BOOL
133 : xor(121, 132) : BOOL
134 : and(124, 133) : BOOL
135 : donotsimplify_using_solver_suboverflow(134, 7, 97) : BOOL
136 : ite(135, 31, 33) : BV:1
137 : bvextract(118, 64, 10) : BV:11
138 : bvconcat(136, 137) : BV:12
139 : bvconcat(119, 138) : BV:32
140 : bvextract(139, 2, 68) : BV:24
141 : donotsimplify_using_solver_subsign(132, 7, 97) : BOOL
142 : ite(141, 31, 33) : BV:1
143 : bvextract(139, 71, 10) : BV:7
144 : bvconcat(142, 143) : BV:8
145 : bvconcat(140, 144) : BV:32
146 : bvextract(145, 2, 75) : BV:25
147 : eq(109, 77) : BOOL
148 : donotsimplify_using_solver_subzero(147, 7, 97) : BOOL
149 : ite(148, 31, 33) : BV:1
150 : bvextract(145, 36, 10) : BV:6
151 : bvconcat(149, 150) : BV:7
152 : bvconcat(146, 151) : BV:32
153 : bvextract(152, 2, 45) : BV:29
154 : bvextract(152, 3, 10) : BV:2
155 : bvconcat(33, 154) : BV:3
156 : bvconcat(153, 155) : BV:32
157 : bvextract(156, 2, 87) : BV:21
158 : bvextract(95, 64, 64) : BV:1
159 : eq(158, 31) : BOOL
160 : ite(159, 31, 33) : BV:1
161 : bvextract(156, 92, 10) : BV:10
162 : bvconcat(160, 161) : BV:11
163 : bvconcat(157, 162) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4 : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 : BV:31
13 : 1 : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 : BV:32
9 : 1 : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 : BV:1
38 : ite(36, 9, 37) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((bb_entry*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L5%1%1 => L6%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%0 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551612 { -4 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : mlvar.dst.3 : MEMLABEL
15 : dst_symbol_addr.2 : BV:32
16 : bvmul(15, 8) : BV:32
17 : 18446744073709551608 { -8 } : BV:64
18 : bvextract(17, 6, 7) : BV:32
19 : bvadd(16, 18) : BV:32
20 : bvadd(3, 19) : BV:32
21 : 4 : INT
22 : 0 : BOOL
23 : select(1, 14, 20, 21, 22) : BV:32
24 : 1 : INT
25 : bvzero_ext(23, 24) : BV:33
26 : mlvar.dst.4 : MEMLABEL
27 : bvadd(9, 18) : BV:32
28 : bvadd(3, 27) : BV:32
29 : select(1, 26, 28, 21, 22) : BV:32
30 : bvzero_ext(29, 24) : BV:33
31 : bvadd(25, 30) : BV:33
32 : bvextract(31, 6, 7) : BV:32
33 : store(1, 2, 13, 32, 21, 22) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.2 : BV:32
5 : 1 : BV:64
6 : 31 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:32
9 : bvmul(4, 8) : BV:32
10 : 18446744073709551608 { -8 } : BV:64
11 : bvextract(10, 6, 7) : BV:32
12 : bvadd(9, 11) : BV:32
13 : bvadd(3, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 2, 13, 14, 15) : BV:32
17 : 1 : INT
18 : bvzero_ext(16, 17) : BV:33
19 : mlvar.dst.4 : MEMLABEL
20 : dst_symbol_addr.1 : BV:32
21 : bvmul(20, 8) : BV:32
22 : bvadd(21, 11) : BV:32
23 : bvadd(3, 22) : BV:32
24 : select(1, 19, 23, 14, 15) : BV:32
25 : bvzero_ext(24, 17) : BV:33
26 : bvadd(18, 25) : BV:33
27 : bvextract(26, 6, 7) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.3 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.2 : BV:32
9 : 1 : BV:64
10 : 0 : INT
11 : bvextract(9, 2, 10) : BV:32
12 : bvmul(8, 11) : BV:32
13 : 18446744073709551608 { -8 } : BV:64
14 : bvextract(13, 2, 10) : BV:32
15 : bvadd(12, 14) : BV:32
16 : bvadd(7, 15) : BV:32
17 : 4 : INT
18 : 0 : BOOL
19 : select(5, 6, 16, 17, 18) : BV:32
20 : bvzero_ext(19, 3) : BV:33
21 : mlvar.dst.4 : MEMLABEL
22 : dst_symbol_addr.1 : BV:32
23 : bvmul(22, 11) : BV:32
24 : bvadd(23, 14) : BV:32
25 : bvadd(7, 24) : BV:32
26 : select(5, 21, 25, 17, 18) : BV:32
27 : bvzero_ext(26, 3) : BV:33
28 : bvadd(20, 27) : BV:33
29 : 32 : INT
30 : bvextract(28, 29, 29) : BV:1
31 : 1 : BV:1
32 : eq(30, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 31, 33) : BV:1
35 : bvconcat(4, 34) : BV:32
36 : 5 : INT
37 : bvextract(35, 2, 36) : BV:27
38 : bvextract(28, 2, 10) : BV:32
39 : bvextract(38, 17, 17) : BV:1
40 : eq(39, 31) : BOOL
41 : bvextract(20, 17, 17) : BV:1
42 : eq(41, 31) : BOOL
43 : xor(40, 42) : BOOL
44 : ite(43, 31, 33) : BV:1
45 : 3 : INT
46 : bvextract(35, 45, 10) : BV:4
47 : bvconcat(44, 46) : BV:5
48 : bvconcat(37, 47) : BV:32
49 : 12 : INT
50 : bvextract(48, 2, 49) : BV:20
51 : bvextract(20, 2, 2) : BV:1
52 : eq(51, 31) : BOOL
53 : bvextract(27, 2, 2) : BV:1
54 : eq(53, 31) : BOOL
55 : iff(52, 54) : BOOL
56 : bvextract(20, 2, 10) : BV:32
57 : bvextract(27, 2, 10) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(58, 2, 2) : BV:1
60 : eq(59, 31) : BOOL
61 : xor(52, 60) : BOOL
62 : and(55, 61) : BOOL
63 : ite(62, 31, 33) : BV:1
64 : 10 : INT
65 : bvextract(48, 64, 10) : BV:11
66 : bvconcat(63, 65) : BV:12
67 : bvconcat(50, 66) : BV:32
68 : 8 : INT
69 : bvextract(67, 2, 68) : BV:24
70 : ite(60, 31, 33) : BV:1
71 : 6 : INT
72 : bvextract(67, 71, 10) : BV:7
73 : bvconcat(70, 72) : BV:8
74 : bvconcat(69, 73) : BV:32
75 : 7 : INT
76 : bvextract(74, 2, 75) : BV:25
77 : 0 : BV:32
78 : eq(38, 77) : BOOL
79 : ite(78, 31, 33) : BV:1
80 : bvextract(74, 36, 10) : BV:6
81 : bvconcat(79, 80) : BV:7
82 : bvconcat(76, 81) : BV:32
83 : bvextract(82, 2, 45) : BV:29
84 : bvextract(82, 3, 10) : BV:2
85 : bvconcat(33, 84) : BV:3
86 : bvconcat(83, 85) : BV:32
87 : 11 : INT
88 : bvextract(86, 2, 87) : BV:21
89 : bvextract(1, 64, 64) : BV:1
90 : eq(89, 31) : BOOL
91 : ite(90, 31, 33) : BV:1
92 : 9 : INT
93 : bvextract(86, 92, 10) : BV:10
94 : bvconcat(91, 93) : BV:11
95 : bvconcat(88, 94) : BV:32
96 : bvextract(95, 2, 3) : BV:31
97 : bvzero_ext(7, 3) : BV:33
98 : 4294967288 { -8 } : BV:32
99 : bvzero_ext(98, 3) : BV:33
100 : bvadd(97, 99) : BV:33
101 : bvextract(100, 29, 29) : BV:1
102 : eq(101, 31) : BOOL
103 : ite(102, 31, 33) : BV:1
104 : bvconcat(96, 103) : BV:32
105 : bvextract(104, 2, 36) : BV:27
106 : bvextract(100, 2, 10) : BV:32
107 : bvextract(106, 17, 17) : BV:1
108 : eq(107, 31) : BOOL
109 : bvextract(97, 17, 17) : BV:1
110 : eq(109, 31) : BOOL
111 : xor(108, 110) : BOOL
112 : ite(111, 31, 33) : BV:1
113 : bvextract(104, 45, 10) : BV:4
114 : bvconcat(112, 113) : BV:5
115 : bvconcat(105, 114) : BV:32
116 : bvextract(115, 2, 49) : BV:20
117 : bvextract(97, 2, 2) : BV:1
118 : eq(117, 31) : BOOL
119 : bvextract(99, 2, 2) : BV:1
120 : eq(119, 31) : BOOL
121 : iff(118, 120) : BOOL
122 : bvextract(97, 2, 10) : BV:32
123 : bvextract(99, 2, 10) : BV:32
124 : bvadd(122, 123) : BV:32
125 : bvextract(124, 2, 2) : BV:1
126 : eq(125, 31) : BOOL
127 : xor(118, 126) : BOOL
128 : and(121, 127) : BOOL
129 : ite(128, 31, 33) : BV:1
130 : bvextract(115, 64, 10) : BV:11
131 : bvconcat(129, 130) : BV:12
132 : bvconcat(116, 131) : BV:32
133 : bvextract(132, 2, 68) : BV:24
134 : ite(126, 31, 33) : BV:1
135 : bvextract(132, 71, 10) : BV:7
136 : bvconcat(134, 135) : BV:8
137 : bvconcat(133, 136) : BV:32
138 : bvextract(137, 2, 75) : BV:25
139 : eq(106, 77) : BOOL
140 : ite(139, 31, 33) : BV:1
141 : bvextract(137, 36, 10) : BV:6
142 : bvconcat(140, 141) : BV:7
143 : bvconcat(138, 142) : BV:32
144 : bvextract(143, 2, 45) : BV:29
145 : bvextract(143, 3, 10) : BV:2
146 : bvconcat(33, 145) : BV:3
147 : bvconcat(144, 146) : BV:32
148 : bvextract(147, 2, 87) : BV:21
149 : bvextract(95, 64, 64) : BV:1
150 : eq(149, 31) : BOOL
151 : ite(150, 31, 33) : BV:1
152 : bvextract(147, 92, 10) : BV:10
153 : bvconcat(151, 152) : BV:11
154 : bvconcat(148, 153) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 : BV:1
10 : eq(8, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 32 : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 4294967288 { -8 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4294967288 { -8 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 : BV:1
29 : ite(27, 16, 28) : BV:1
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4 : BV:32
=input.dst.exreg.0.1
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4194275324 { -100691972 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 1 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 1 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 0 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.1
1 : 26112 : BV:32
=symbol.2
1 : 4199362240 { -95605056 } : BV:32
=dst_symbol_addr.1
1 : 26112 : BV:32
=dst_symbol_addr.2
1 : 4199362240 { -95605056 } : BV:32
=input.src.llvm-%arrayidx1
1 : 4199362244 { -95605052 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=stack.size
1 : 4194078720 { -100888576 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4194275324 { -100691972 } : BV:32
=input.dst.esp.L0%1%1
1 : 4194275324 { -100691972 } : BV:32
=memlabel-mem-esp_begin
1 : 196608 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 154111 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.3.total_offset
1 : 26116 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.2.total_offset
1 : 4 : BV:32
=input.src.llvm-%arrayidx
1 : 26116 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%add2
1 : 2 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dec
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.3.total_offset
1 : 4199362244 { -95605052 } : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.gepoffset.2.total_offset
1 : 4 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%1762a0e683402af47cdeae9578c8573b.intermediate.gepoffset.2.offset
1 : 4 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.intermediate.gepoffset.2.offset
1 : 8 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.intermediate.gepoffset.2.offset
1 : 4 : BV:32
=input.src.llvm-%arrayidx3
1 : 26120 : BV:32
=memlabel-mem-esp_end
1 : 4194275327 { -100691969 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4199362240 { -95605056 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 26112 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4199490239 { -95477057 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.3.total_offset
1 : 26120 : BV:32
=input.src.llvm-%d7734eedd4479835d8abcba68713ae.gepoffset.2.total_offset
1 : 8 : BV:32
=input.src.llvm-%dcabd978cda680cf9c9a8ef87ea208d.gepoffset.1.total_offset
1 : 0 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1133126168
=counter_example_end
=graph_with_ce done
=graph_with_guessing begin
=Invariant states
=Invariant state at node L0%0%1_L0%0%1:
=pc L0%0%1_L0%0%1 invariant_state
is_top 0
is_stable 1
=pc L0%0%1_L0%0%1 invariant_state done
=Invariant state at node Lfor.body%1%1_L1%1%0:
=pc Lfor.body%1%1_L1%1%0 invariant_state
is_top 0
is_stable 1
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr_group_type ARR_EQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr_group_type BV_EQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 0
1 : symbol.1 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 1
1 : symbol.2 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 2
1 : retaddr_const : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 3
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 4
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 5
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 8
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 0 : BV:32
5 : bvsge(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 9
1 : input.src.llvm-%i.0 : BV:32
2 : 4294967294 { -2 } : BV:32
3 : bvadd(1, 2) : BV:32
4 : 0 : BV:32
5 : bvsge(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 10
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 11
1 : input.dst.exreg.0.6 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 12
1 : input.dst.exreg.0.7 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 13
1 : input.dst.exreg.0.3 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 14
1 : input.dst.exreg.0.5 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 15
1 : input.dst.exreg.0.4 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 16
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 17
1 : input.dst.esp.L0%1%1 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 0
=Comment
linear2-32-free_var_idx.19
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.esp.L0%1%1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 1
=Comment
linear2-32-free_var_idx.18
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 2
=Comment
linear3-12-free_var_idx.15
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4092 { -4 } : BV:12
2 : symbol.1 : BV:32
3 : 11 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:12
6 : 1536 : BV:12
7 : bvmul(5, 6) : BV:12
8 : symbol.2 : BV:32
9 : bvextract(8, 3, 4) : BV:12
10 : 512 : BV:12
11 : bvmul(9, 10) : BV:12
12 : bvadd(1, 7, 11) : BV:12
=RhsExpr
1 : input.dst.exreg.0.4 : BV:32
2 : 11 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:12
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 3
=Comment
linear2-32-free_var_idx.9
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 4294967295 { -1 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 0 : BV:32
6 : bvsge(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : 4294967294 { -2 } : BV:32
10 : bvadd(2, 9) : BV:32
11 : bvsge(10, 5) : BOOL
12 : bool_to_bv(11) : BV:1
13 : bvconcat(1, 12) : BV:32
14 : bvmul(3, 13) : BV:32
15 : bvadd(8, 14) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 4
=Comment
linear2-32-free_var_idx.12
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(2, 1) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 5
=Comment
linear2-32-free_var_idx.5
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : input.src.llvm-%i.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 6
=Comment
linear1-32-free_var_idx.3
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%cmp : BOOL
4 : bool_to_bv(3) : BV:1
5 : bvconcat(2, 4) : BV:32
6 : bvneg(5) : BV:32
7 : bvadd(1, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 7
=Comment
linear2-4-free_var_idx.1
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : 8 { -8 } : BV:4
7 : input.src.llvm-%i.0 : BV:32
8 : bvextract(7, 2, 3) : BV:4
9 : bvmul(6, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 8
=Comment
linear1-1-free_var_idx.4
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
=RhsExpr
1 : 0 : BV:1
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 9
=Comment
linear2-4-free_var_idx.0
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : symbol.2 : BV:32
7 : bvextract(6, 2, 3) : BV:4
8 : 10 { -6 } : BV:4
9 : bvmul(7, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose expr 0
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose expr 0
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 1
=Comment
lb-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvuge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 2
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 3
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 4 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr_group_type HOUDINI
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 0
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 1
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 2
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 3
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 4
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 0
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 1
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 2
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state done
=Invariant state at node E0%0%1_E0%0%1:
=pc E0%0%1_E0%0%1 invariant_state
is_top 0
is_stable 1
=pc E0%0%1_E0%0%1 invariant_state done
=graph_with_guessing done
=corr_graph_done
